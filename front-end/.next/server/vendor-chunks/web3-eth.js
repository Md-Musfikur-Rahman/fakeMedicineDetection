"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth";
exports.ids = ["vendor-chunks/web3-eth"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/constants.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALL_EVENTS: () => (/* binding */ ALL_EVENTS),\n/* harmony export */   ALL_EVENTS_ABI: () => (/* binding */ ALL_EVENTS_ABI),\n/* harmony export */   NUMBER_DATA_FORMAT: () => (/* binding */ NUMBER_DATA_FORMAT)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst ALL_EVENTS = 'ALLEVENTS';\nconst ALL_EVENTS_ABI = {\n    name: ALL_EVENTS,\n    signature: '',\n    type: 'event',\n    inputs: [],\n};\nconst NUMBER_DATA_FORMAT = { bytes: web3_types__WEBPACK_IMPORTED_MODULE_0__.FMT_BYTES.HEX, number: web3_types__WEBPACK_IMPORTED_MODULE_0__.FMT_NUMBER.NUMBER };\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDbUQ7QUFDNUM7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw2QkFBNkIsT0FBTyxpREFBUyxjQUFjLGtEQUFVO0FBQzVFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnQtZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoL2xpYi9lc20vY29uc3RhbnRzLmpzPzdkMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBGTVRfQllURVMsIEZNVF9OVU1CRVIgfSBmcm9tICd3ZWIzLXR5cGVzJztcbmV4cG9ydCBjb25zdCBBTExfRVZFTlRTID0gJ0FMTEVWRU5UUyc7XG5leHBvcnQgY29uc3QgQUxMX0VWRU5UU19BQkkgPSB7XG4gICAgbmFtZTogQUxMX0VWRU5UUyxcbiAgICBzaWduYXR1cmU6ICcnLFxuICAgIHR5cGU6ICdldmVudCcsXG4gICAgaW5wdXRzOiBbXSxcbn07XG5leHBvcnQgY29uc3QgTlVNQkVSX0RBVEFfRk9STUFUID0geyBieXRlczogRk1UX0JZVEVTLkhFWCwgbnVtYmVyOiBGTVRfTlVNQkVSLk5VTUJFUiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/index.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALL_EVENTS: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_4__.ALL_EVENTS),\n/* harmony export */   ALL_EVENTS_ABI: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_4__.ALL_EVENTS_ABI),\n/* harmony export */   LogsSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.LogsSubscription),\n/* harmony export */   NUMBER_DATA_FORMAT: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_4__.NUMBER_DATA_FORMAT),\n/* harmony export */   NewHeadsSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.NewHeadsSubscription),\n/* harmony export */   NewPendingTransactionsSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.NewPendingTransactionsSubscription),\n/* harmony export */   SendTxHelper: () => (/* reexport safe */ _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_15__.SendTxHelper),\n/* harmony export */   SignatureObjectSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.SignatureObjectSchema),\n/* harmony export */   SyncingSubscription: () => (/* reexport safe */ _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__.SyncingSubscription),\n/* harmony export */   Web3Eth: () => (/* reexport safe */ _web3_eth_js__WEBPACK_IMPORTED_MODULE_1__.Web3Eth),\n/* harmony export */   accessListItemSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accessListItemSchema),\n/* harmony export */   accessListResultSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accessListResultSchema),\n/* harmony export */   accessListSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accessListSchema),\n/* harmony export */   accountSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.accountSchema),\n/* harmony export */   blockHeaderSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.blockHeaderSchema),\n/* harmony export */   blockSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.blockSchema),\n/* harmony export */   call: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.call),\n/* harmony export */   chainSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.chainSchema),\n/* harmony export */   createAccessList: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.createAccessList),\n/* harmony export */   customChainSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.customChainSchema),\n/* harmony export */   decodeEventABI: () => (/* reexport safe */ _utils_decoding_js__WEBPACK_IMPORTED_MODULE_2__.decodeEventABI),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   detectTransactionType: () => (/* reexport safe */ _utils_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_11__.detectTransactionType),\n/* harmony export */   estimateGas: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.estimateGas),\n/* harmony export */   feeHistorySchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.feeHistorySchema),\n/* harmony export */   formatTransaction: () => (/* reexport safe */ _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_8__.formatTransaction),\n/* harmony export */   getBalance: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBalance),\n/* harmony export */   getBlock: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlock),\n/* harmony export */   getBlockNumber: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlockNumber),\n/* harmony export */   getBlockTransactionCount: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlockTransactionCount),\n/* harmony export */   getBlockUncleCount: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getBlockUncleCount),\n/* harmony export */   getChainId: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getChainId),\n/* harmony export */   getCode: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getCode),\n/* harmony export */   getCoinbase: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getCoinbase),\n/* harmony export */   getFeeHistory: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getFeeHistory),\n/* harmony export */   getGasPrice: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getGasPrice),\n/* harmony export */   getHashRate: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getHashRate),\n/* harmony export */   getLogs: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getLogs),\n/* harmony export */   getMaxPriorityFeePerGas: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getMaxPriorityFeePerGas),\n/* harmony export */   getPendingTransactions: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getPendingTransactions),\n/* harmony export */   getProof: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getProof),\n/* harmony export */   getProtocolVersion: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getProtocolVersion),\n/* harmony export */   getStorageAt: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getStorageAt),\n/* harmony export */   getTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransaction),\n/* harmony export */   getTransactionCount: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionCount),\n/* harmony export */   getTransactionFromBlock: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionFromBlock),\n/* harmony export */   getTransactionFromOrToAttr: () => (/* reexport safe */ _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_12__.getTransactionFromOrToAttr),\n/* harmony export */   getTransactionReceipt: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionReceipt),\n/* harmony export */   getUncle: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getUncle),\n/* harmony export */   hardforkSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.hardforkSchema),\n/* harmony export */   isAccessList: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isAccessList),\n/* harmony export */   isAccessListEntry: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isAccessListEntry),\n/* harmony export */   isBaseTransaction: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isBaseTransaction),\n/* harmony export */   isMining: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.isMining),\n/* harmony export */   isSyncing: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.isSyncing),\n/* harmony export */   isTransaction1559Unsigned: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransaction1559Unsigned),\n/* harmony export */   isTransaction2930Unsigned: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransaction2930Unsigned),\n/* harmony export */   isTransactionCall: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransactionCall),\n/* harmony export */   isTransactionLegacyUnsigned: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransactionLegacyUnsigned),\n/* harmony export */   isTransactionWithSender: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.isTransactionWithSender),\n/* harmony export */   logSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.logSchema),\n/* harmony export */   prepareTransactionForSigning: () => (/* reexport safe */ _utils_prepare_transaction_for_signing_js__WEBPACK_IMPORTED_MODULE_9__.prepareTransactionForSigning),\n/* harmony export */   registeredSubscriptions: () => (/* reexport safe */ _web3_eth_js__WEBPACK_IMPORTED_MODULE_1__.registeredSubscriptions),\n/* harmony export */   sendSignedTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.sendSignedTransaction),\n/* harmony export */   sendTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.sendTransaction),\n/* harmony export */   sign: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.sign),\n/* harmony export */   signTransaction: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.signTransaction),\n/* harmony export */   signTypedData: () => (/* reexport safe */ _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.signTypedData),\n/* harmony export */   storageProofSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.storageProofSchema),\n/* harmony export */   syncSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.syncSchema),\n/* harmony export */   transactionBuilder: () => (/* reexport safe */ _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_12__.transactionBuilder),\n/* harmony export */   transactionInfoSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionInfoSchema),\n/* harmony export */   transactionReceiptSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionReceiptSchema),\n/* harmony export */   transactionSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionSchema),\n/* harmony export */   trySendTransaction: () => (/* reexport safe */ _utils_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_14__.trySendTransaction),\n/* harmony export */   validateBaseChain: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateBaseChain),\n/* harmony export */   validateChainInfo: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateChainInfo),\n/* harmony export */   validateCustomChainInfo: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateCustomChainInfo),\n/* harmony export */   validateFeeMarketGas: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateFeeMarketGas),\n/* harmony export */   validateGas: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateGas),\n/* harmony export */   validateHardfork: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateHardfork),\n/* harmony export */   validateLegacyGas: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateLegacyGas),\n/* harmony export */   validateTransactionCall: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateTransactionCall),\n/* harmony export */   validateTransactionForSigning: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateTransactionForSigning),\n/* harmony export */   validateTransactionWithSender: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_6__.validateTransactionWithSender),\n/* harmony export */   waitForTransactionReceipt: () => (/* reexport safe */ _utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_13__.waitForTransactionReceipt),\n/* harmony export */   withdrawalsSchema: () => (/* reexport safe */ _schemas_js__WEBPACK_IMPORTED_MODULE_3__.withdrawalsSchema)\n/* harmony export */ });\n/* harmony import */ var setimmediate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! setimmediate */ \"(ssr)/./node_modules/next/dist/compiled/setimmediate/setImmediate.js\");\n/* harmony import */ var _web3_eth_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_eth.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/web3_eth.js\");\n/* harmony import */ var _utils_decoding_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/decoding.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/decoding.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/types.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validation.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/validation.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/* harmony import */ var _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/format_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\");\n/* harmony import */ var _utils_prepare_transaction_for_signing_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/prepare_transaction_for_signing.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js\");\n/* harmony import */ var _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./web3_subscriptions.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/web3_subscriptions.js\");\n/* harmony import */ var _utils_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/detect_transaction_type.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js\");\n/* harmony import */ var _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/transaction_builder.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js\");\n/* harmony import */ var _utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/wait_for_transaction_receipt.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js\");\n/* harmony import */ var _utils_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/try_send_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js\");\n/* harmony import */ var _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/send_tx_helper.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * The `web3-eth` package allows you to interact with an Ethereum blockchain and Ethereum smart contracts.\n *\n * To use this package standalone and use its methods use:\n * ```ts\n * import { Web3Context } from 'web3-core';\n * import { BlockTags } from 'web3-types';\n * import { DEFAULT_RETURN_FORMAT } from 'web3-types';\n * import { getBalance} from 'web3-eth';\n *\n * getBalance(\n *      new Web3Context('http://127.0.0.1:8545'),\n *      '0x407d73d8a49eeb85d32cf465507dd71d507100c1',\n *      BlockTags.LATEST,\n *      DEFAULT_RETURN_FORMAT\n * ).then(console.log);\n * > 1000000000000n\n * ```\n *\n * To use this package within the `web3` object use:\n * ```ts\n * import Web3 from 'web3';\n *\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n * web3.eth.getBalance('0x407d73d8a49eeb85d32cf465507dd71d507100c1').then(console.log);\n * > 1000000000000n\n *```\n *\n * With `web3-eth` you can also subscribe (if supported by provider) to events in the Ethereum Blockchain, using the `subscribe` function. See more at the {@link Web3Eth.subscribe} function.\n */\n/**\n *\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_web3_eth_js__WEBPACK_IMPORTED_MODULE_1__.Web3Eth);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGNBQWM7QUFDMUIsWUFBWSxZQUFZO0FBQ3hCLFlBQVksd0JBQXdCO0FBQ3BDLFlBQVksWUFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRKQUE0Six5QkFBeUI7QUFDckw7QUFDQTtBQUNBO0FBQ0E7QUFDc0I7QUFDa0I7QUFDVjtBQUNNO0FBQ1A7QUFDRTtBQUNKO0FBQ0s7QUFDUztBQUNLO0FBQ2E7QUFDbkI7QUFDbUM7QUFDcUI7QUFDWjtBQUNmO0FBQ1o7QUFDekQsaUVBQWUsaURBQU8sRUFBQztBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250LWVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL2luZGV4LmpzPzE1YjYiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKipcbiAqIFRoZSBgd2ViMy1ldGhgIHBhY2thZ2UgYWxsb3dzIHlvdSB0byBpbnRlcmFjdCB3aXRoIGFuIEV0aGVyZXVtIGJsb2NrY2hhaW4gYW5kIEV0aGVyZXVtIHNtYXJ0IGNvbnRyYWN0cy5cbiAqXG4gKiBUbyB1c2UgdGhpcyBwYWNrYWdlIHN0YW5kYWxvbmUgYW5kIHVzZSBpdHMgbWV0aG9kcyB1c2U6XG4gKiBgYGB0c1xuICogaW1wb3J0IHsgV2ViM0NvbnRleHQgfSBmcm9tICd3ZWIzLWNvcmUnO1xuICogaW1wb3J0IHsgQmxvY2tUYWdzIH0gZnJvbSAnd2ViMy10eXBlcyc7XG4gKiBpbXBvcnQgeyBERUZBVUxUX1JFVFVSTl9GT1JNQVQgfSBmcm9tICd3ZWIzLXR5cGVzJztcbiAqIGltcG9ydCB7IGdldEJhbGFuY2V9IGZyb20gJ3dlYjMtZXRoJztcbiAqXG4gKiBnZXRCYWxhbmNlKFxuICogICAgICBuZXcgV2ViM0NvbnRleHQoJ2h0dHA6Ly8xMjcuMC4wLjE6ODU0NScpLFxuICogICAgICAnMHg0MDdkNzNkOGE0OWVlYjg1ZDMyY2Y0NjU1MDdkZDcxZDUwNzEwMGMxJyxcbiAqICAgICAgQmxvY2tUYWdzLkxBVEVTVCxcbiAqICAgICAgREVGQVVMVF9SRVRVUk5fRk9STUFUXG4gKiApLnRoZW4oY29uc29sZS5sb2cpO1xuICogPiAxMDAwMDAwMDAwMDAwblxuICogYGBgXG4gKlxuICogVG8gdXNlIHRoaXMgcGFja2FnZSB3aXRoaW4gdGhlIGB3ZWIzYCBvYmplY3QgdXNlOlxuICogYGBgdHNcbiAqIGltcG9ydCBXZWIzIGZyb20gJ3dlYjMnO1xuICpcbiAqIGNvbnN0IHdlYjMgPSBuZXcgV2ViMyhXZWIzLmdpdmVuUHJvdmlkZXIgfHwgJ3dzOi8vc29tZS5sb2NhbC1vci1yZW1vdGUubm9kZTo4NTQ2Jyk7XG4gKiB3ZWIzLmV0aC5nZXRCYWxhbmNlKCcweDQwN2Q3M2Q4YTQ5ZWViODVkMzJjZjQ2NTUwN2RkNzFkNTA3MTAwYzEnKS50aGVuKGNvbnNvbGUubG9nKTtcbiAqID4gMTAwMDAwMDAwMDAwMG5cbiAqYGBgXG4gKlxuICogV2l0aCBgd2ViMy1ldGhgIHlvdSBjYW4gYWxzbyBzdWJzY3JpYmUgKGlmIHN1cHBvcnRlZCBieSBwcm92aWRlcikgdG8gZXZlbnRzIGluIHRoZSBFdGhlcmV1bSBCbG9ja2NoYWluLCB1c2luZyB0aGUgYHN1YnNjcmliZWAgZnVuY3Rpb24uIFNlZSBtb3JlIGF0IHRoZSB7QGxpbmsgV2ViM0V0aC5zdWJzY3JpYmV9IGZ1bmN0aW9uLlxuICovXG4vKipcbiAqXG4gKi9cbmltcG9ydCAnc2V0aW1tZWRpYXRlJztcbmltcG9ydCB7IFdlYjNFdGggfSBmcm9tICcuL3dlYjNfZXRoLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vd2ViM19ldGguanMnO1xuZXhwb3J0ICogZnJvbSAnLi91dGlscy9kZWNvZGluZy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3NjaGVtYXMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb25zdGFudHMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi90eXBlcy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3ZhbGlkYXRpb24uanMnO1xuZXhwb3J0ICogZnJvbSAnLi9ycGNfbWV0aG9kX3dyYXBwZXJzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvZm9ybWF0X3RyYW5zYWN0aW9uLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMvcHJlcGFyZV90cmFuc2FjdGlvbl9mb3Jfc2lnbmluZy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3dlYjNfc3Vic2NyaXB0aW9ucy5qcyc7XG5leHBvcnQgeyBkZXRlY3RUcmFuc2FjdGlvblR5cGUgfSBmcm9tICcuL3V0aWxzL2RldGVjdF90cmFuc2FjdGlvbl90eXBlLmpzJztcbmV4cG9ydCB7IHRyYW5zYWN0aW9uQnVpbGRlciwgZ2V0VHJhbnNhY3Rpb25Gcm9tT3JUb0F0dHIgfSBmcm9tICcuL3V0aWxzL3RyYW5zYWN0aW9uX2J1aWxkZXIuanMnO1xuZXhwb3J0IHsgd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCB9IGZyb20gJy4vdXRpbHMvd2FpdF9mb3JfdHJhbnNhY3Rpb25fcmVjZWlwdC5qcyc7XG5leHBvcnQgeyB0cnlTZW5kVHJhbnNhY3Rpb24gfSBmcm9tICcuL3V0aWxzL3RyeV9zZW5kX3RyYW5zYWN0aW9uLmpzJztcbmV4cG9ydCB7IFNlbmRUeEhlbHBlciB9IGZyb20gJy4vdXRpbHMvc2VuZF90eF9oZWxwZXIuanMnO1xuZXhwb3J0IGRlZmF1bHQgV2ViM0V0aDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js":
/*!**************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   call: () => (/* binding */ call),\n/* harmony export */   createAccessList: () => (/* binding */ createAccessList),\n/* harmony export */   estimateGas: () => (/* binding */ estimateGas),\n/* harmony export */   getBalance: () => (/* binding */ getBalance),\n/* harmony export */   getBlock: () => (/* binding */ getBlock),\n/* harmony export */   getBlockNumber: () => (/* binding */ getBlockNumber),\n/* harmony export */   getBlockTransactionCount: () => (/* binding */ getBlockTransactionCount),\n/* harmony export */   getBlockUncleCount: () => (/* binding */ getBlockUncleCount),\n/* harmony export */   getChainId: () => (/* binding */ getChainId),\n/* harmony export */   getCode: () => (/* binding */ getCode),\n/* harmony export */   getCoinbase: () => (/* binding */ getCoinbase),\n/* harmony export */   getFeeHistory: () => (/* binding */ getFeeHistory),\n/* harmony export */   getGasPrice: () => (/* binding */ getGasPrice),\n/* harmony export */   getHashRate: () => (/* binding */ getHashRate),\n/* harmony export */   getLogs: () => (/* binding */ getLogs),\n/* harmony export */   getMaxPriorityFeePerGas: () => (/* binding */ getMaxPriorityFeePerGas),\n/* harmony export */   getPendingTransactions: () => (/* binding */ getPendingTransactions),\n/* harmony export */   getProof: () => (/* binding */ getProof),\n/* harmony export */   getProtocolVersion: () => (/* binding */ getProtocolVersion),\n/* harmony export */   getStorageAt: () => (/* binding */ getStorageAt),\n/* harmony export */   getTransaction: () => (/* binding */ getTransaction),\n/* harmony export */   getTransactionCount: () => (/* binding */ getTransactionCount),\n/* harmony export */   getTransactionFromBlock: () => (/* binding */ getTransactionFromBlock),\n/* harmony export */   getTransactionReceipt: () => (/* binding */ getTransactionReceipt),\n/* harmony export */   getUncle: () => (/* binding */ getUncle),\n/* harmony export */   isMining: () => (/* binding */ isMining),\n/* harmony export */   isSyncing: () => (/* binding */ isSyncing),\n/* harmony export */   sendSignedTransaction: () => (/* binding */ sendSignedTransaction),\n/* harmony export */   sendTransaction: () => (/* binding */ sendTransaction),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   signTransaction: () => (/* binding */ signTransaction),\n/* harmony export */   signTypedData: () => (/* binding */ signTypedData)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-eth-accounts */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! web3-rpc-methods */ \"(ssr)/./node_modules/web3-rpc-methods/lib/esm/index.js\");\n/* harmony import */ var _utils_decode_signed_transaction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/decode_signed_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/transaction_builder.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js\");\n/* harmony import */ var _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/format_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\");\n/* harmony import */ var _utils_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/try_send_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js\");\n/* harmony import */ var _utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/wait_for_transaction_receipt.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/* harmony import */ var _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/send_tx_helper.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n// Disabling because returnTypes must be last param to match 1.x params\n/* eslint-disable default-param-last */\n\n\n\n\n\n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n\n// eslint-disable-next-line import/no-cycle\n\n/**\n * View additional documentations here: {@link Web3Eth.getProtocolVersion}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nconst getProtocolVersion = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getProtocolVersion(web3Context.requestManager); });\n// TODO Add returnFormat parameter\n/**\n * View additional documentations here: {@link Web3Eth.isSyncing}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nconst isSyncing = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getSyncing(web3Context.requestManager); });\n// TODO consider adding returnFormat parameter (to format address as bytes)\n/**\n * View additional documentations here: {@link Web3Eth.getCoinbase}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nconst getCoinbase = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getCoinbase(web3Context.requestManager); });\n/**\n * View additional documentations here: {@link Web3Eth.isMining}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nconst isMining = (web3Context) => __awaiter(void 0, void 0, void 0, function* () { return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getMining(web3Context.requestManager); });\n/**\n * View additional documentations here: {@link Web3Eth.getHashRate}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getHashRate(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getHashRate(web3Context.requestManager);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getGasPrice}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getGasPrice(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getGasPrice(web3Context.requestManager);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getMaxPriorityFeePerGas}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getMaxPriorityFeePerGas(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getMaxPriorityFeePerGas(web3Context.requestManager);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlockNumber}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getBlockNumber(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockNumber(web3Context.requestManager);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBalance}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getBalance(web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)\n            ? blockNumber\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBalance(web3Context.requestManager, address, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getStorageAt}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getStorageAt(web3Context, address, storageSlot, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const storageSlotFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, storageSlot, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)\n            ? blockNumber\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getStorageAt(web3Context.requestManager, address, storageSlotFormatted, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getCode}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getCode(web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)\n            ? blockNumber\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getCode(web3Context.requestManager, address, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlock}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getBlock(web3Context, block = web3Context.defaultBlock, hydrated = false, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let response;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {\n            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockByHash(web3Context.requestManager, blockHashFormatted, hydrated);\n        }\n        else {\n            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block)\n                ? block\n                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockByNumber(web3Context.requestManager, blockNumberFormatted, hydrated);\n        }\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.blockSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlockTransactionCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getBlockTransactionCount(web3Context, block = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let response;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {\n            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockTransactionCountByHash(web3Context.requestManager, blockHashFormatted);\n        }\n        else {\n            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block)\n                ? block\n                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getBlockTransactionCountByNumber(web3Context.requestManager, blockNumberFormatted);\n        }\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getBlockUncleCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getBlockUncleCount(web3Context, block = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let response;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {\n            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleCountByBlockHash(web3Context.requestManager, blockHashFormatted);\n        }\n        else {\n            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block)\n                ? block\n                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleCountByBlockNumber(web3Context.requestManager, blockNumberFormatted);\n        }\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getUncle}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getUncle(web3Context, block = web3Context.defaultBlock, uncleIndex, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const uncleIndexFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, uncleIndex, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        let response;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {\n            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleByBlockHashAndIndex(web3Context.requestManager, blockHashFormatted, uncleIndexFormatted);\n        }\n        else {\n            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block)\n                ? block\n                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getUncleByBlockNumberAndIndex(web3Context.requestManager, blockNumberFormatted, uncleIndexFormatted);\n        }\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.blockSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getTransaction(web3Context, transactionHash, returnFormat = web3Context.defaultReturnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, transactionHash, web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionByHash(web3Context.requestManager, transactionHashFormatted);\n        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(response)\n            ? response\n            : (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(response, returnFormat, {\n                fillInputAndData: true,\n            });\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getPendingTransactions}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getPendingTransactions(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getPendingTransactions(web3Context.requestManager);\n        return response.map(transaction => (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat, {\n            fillInputAndData: true,\n        }));\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionFromBlock}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getTransactionFromBlock(web3Context, block = web3Context.defaultBlock, transactionIndex, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const transactionIndexFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, transactionIndex, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        let response;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBytes)(block)) {\n            const blockHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionByBlockHashAndIndex(web3Context.requestManager, blockHashFormatted, transactionIndexFormatted);\n        }\n        else {\n            const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(block)\n                ? block\n                : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, block, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionByBlockNumberAndIndex(web3Context.requestManager, blockNumberFormatted, transactionIndexFormatted);\n        }\n        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(response)\n            ? response\n            : (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat, {\n                fillInputAndData: true,\n            });\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionReceipt}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getTransactionReceipt(web3Context, transactionHash, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, transactionHash, web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionReceipt(web3Context.requestManager, transactionHashFormatted);\n        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(response)\n            ? response\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.transactionReceiptSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getTransactionCount(web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)\n            ? blockNumber\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getTransactionCount(web3Context.requestManager, address, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.sendTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction sendTransaction(web3Context, transactionObj, returnFormat, options = { checkRevertBeforeSending: true }, transactionMiddleware) {\n    const promiEvent = new web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3PromiEvent((resolve, reject) => {\n        setImmediate(() => {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                const sendTxHelper = new _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_14__.SendTxHelper({\n                    web3Context,\n                    promiEvent,\n                    options,\n                    returnFormat,\n                });\n                let transaction = Object.assign({}, transactionObj);\n                if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(transactionMiddleware)) {\n                    transaction = yield transactionMiddleware.processTransaction(transaction);\n                }\n                let transactionFormatted = (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(Object.assign(Object.assign({}, transaction), { from: (0,_utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_9__.getTransactionFromOrToAttr)('from', web3Context, transaction), to: (0,_utils_transaction_builder_js__WEBPACK_IMPORTED_MODULE_9__.getTransactionFromOrToAttr)('to', web3Context, transaction) }), web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n                try {\n                    transactionFormatted = yield sendTxHelper.populateGasPrice({\n                        transaction,\n                        transactionFormatted,\n                    });\n                    yield sendTxHelper.checkRevertBeforeSending(transactionFormatted);\n                    sendTxHelper.emitSending(transactionFormatted);\n                    let wallet;\n                    if (web3Context.wallet && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(transactionFormatted.from)) {\n                        wallet = web3Context.wallet.get(transactionFormatted.from);\n                    }\n                    const transactionHash = yield sendTxHelper.signAndSend({\n                        wallet,\n                        tx: transactionFormatted,\n                    });\n                    const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n                    sendTxHelper.emitSent(transactionFormatted);\n                    sendTxHelper.emitTransactionHash(transactionHashFormatted);\n                    const transactionReceipt = yield (0,_utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_12__.waitForTransactionReceipt)(web3Context, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n                    const transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.transactionReceiptSchema, transactionReceipt, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat));\n                    sendTxHelper.emitReceipt(transactionReceiptFormatted);\n                    resolve(yield sendTxHelper.handleResolve({\n                        receipt: transactionReceiptFormatted,\n                        tx: transactionFormatted,\n                    }));\n                    sendTxHelper.emitConfirmation({\n                        receipt: transactionReceiptFormatted,\n                        transactionHash,\n                    });\n                }\n                catch (error) {\n                    reject(yield sendTxHelper.handleError({\n                        error,\n                        tx: transactionFormatted,\n                    }));\n                }\n            }))();\n        });\n    });\n    return promiEvent;\n}\n/**\n * View additional documentations here: {@link Web3Eth.sendSignedTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction sendSignedTransaction(web3Context, signedTransaction, returnFormat, options = { checkRevertBeforeSending: true }) {\n    // TODO - Promise returned in function argument where a void return was expected\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    const promiEvent = new web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3PromiEvent((resolve, reject) => {\n        setImmediate(() => {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                const sendTxHelper = new _utils_send_tx_helper_js__WEBPACK_IMPORTED_MODULE_14__.SendTxHelper({\n                    web3Context,\n                    promiEvent,\n                    options,\n                    returnFormat,\n                });\n                // Formatting signedTransaction to be send to RPC endpoint\n                const signedTransactionFormattedHex = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, signedTransaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n                const unSerializedTransaction = web3_eth_accounts__WEBPACK_IMPORTED_MODULE_3__.TransactionFactory.fromSerializedData((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToUint8Array)((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.hexToBytes)(signedTransactionFormattedHex)));\n                const unSerializedTransactionWithFrom = Object.assign(Object.assign({}, unSerializedTransaction.toJSON()), { \n                    // Some providers will default `from` to address(0) causing the error\n                    // reported from `eth_call` to not be the reason the user's tx failed\n                    // e.g. `eth_call` will return an Out of Gas error for a failed\n                    // smart contract execution contract, because the sender, address(0),\n                    // has no balance to pay for the gas of the transaction execution\n                    from: unSerializedTransaction.getSenderAddress().toString() });\n                try {\n                    const { v, r, s } = unSerializedTransactionWithFrom, txWithoutSigParams = __rest(unSerializedTransactionWithFrom, [\"v\", \"r\", \"s\"]);\n                    yield sendTxHelper.checkRevertBeforeSending(txWithoutSigParams);\n                    sendTxHelper.emitSending(signedTransactionFormattedHex);\n                    const transactionHash = yield (0,_utils_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_11__.trySendTransaction)(web3Context, () => __awaiter(this, void 0, void 0, function* () {\n                        return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.sendRawTransaction(web3Context.requestManager, signedTransactionFormattedHex);\n                    }));\n                    sendTxHelper.emitSent(signedTransactionFormattedHex);\n                    const transactionHashFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes32' }, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n                    sendTxHelper.emitTransactionHash(transactionHashFormatted);\n                    const transactionReceipt = yield (0,_utils_wait_for_transaction_receipt_js__WEBPACK_IMPORTED_MODULE_12__.waitForTransactionReceipt)(web3Context, transactionHash, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n                    const transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents((0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.transactionReceiptSchema, transactionReceipt, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat));\n                    sendTxHelper.emitReceipt(transactionReceiptFormatted);\n                    resolve(yield sendTxHelper.handleResolve({\n                        receipt: transactionReceiptFormatted,\n                        tx: unSerializedTransactionWithFrom,\n                    }));\n                    sendTxHelper.emitConfirmation({\n                        receipt: transactionReceiptFormatted,\n                        transactionHash,\n                    });\n                }\n                catch (error) {\n                    reject(yield sendTxHelper.handleError({\n                        error,\n                        tx: unSerializedTransactionWithFrom,\n                    }));\n                }\n            }))();\n        });\n    });\n    return promiEvent;\n}\n/**\n * View additional documentations here: {@link Web3Eth.sign}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction sign(web3Context, message, addressOrIndex, returnFormat = web3Context.defaultReturnFormat) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const messageFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, message, web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT);\n        if ((_a = web3Context.wallet) === null || _a === void 0 ? void 0 : _a.get(addressOrIndex)) {\n            const wallet = web3Context.wallet.get(addressOrIndex);\n            const signed = wallet.sign(messageFormatted);\n            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.SignatureObjectSchema, signed, returnFormat);\n        }\n        if (typeof addressOrIndex === 'number') {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_5__.SignatureError(message, 'RPC method \"eth_sign\" does not support index signatures');\n        }\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.sign(web3Context.requestManager, addressOrIndex, messageFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response, returnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.signTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction signTransaction(web3Context, transaction, returnFormat = web3Context.defaultReturnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.signTransaction(web3Context.requestManager, (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT));\n        // Some clients only return the encoded signed transaction (e.g. Ganache)\n        // while clients such as Geth return the desired SignedTransactionInfoAPI object\n        return (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isString)(response)\n            ? (0,_utils_decode_signed_transaction_js__WEBPACK_IMPORTED_MODULE_7__.decodeSignedTransaction)(response, returnFormat, {\n                fillInputAndData: true,\n            })\n            : {\n                raw: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response.raw, returnFormat),\n                tx: (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(response.tx, returnFormat, {\n                    fillInputAndData: true,\n                }),\n            };\n    });\n}\n// TODO Decide what to do with transaction.to\n// https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076\n/**\n * View additional documentations here: {@link Web3Eth.call}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction call(web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat = web3Context.defaultReturnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)\n            ? blockNumber\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.call(web3Context.requestManager, (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT), blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response, returnFormat);\n    });\n}\n// TODO - Investigate whether response is padded as 1.x docs suggest\n/**\n * View additional documentations here: {@link Web3Eth.estimateGas}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction estimateGas(web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const transactionFormatted = (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)\n            ? blockNumber\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.estimateGas(web3Context.requestManager, transactionFormatted, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n// TODO - Add input formatting to filter\n/**\n * View additional documentations here: {@link Web3Eth.getPastLogs}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getLogs(web3Context, filter, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // format type bigint or number toBlock and fromBlock to hexstring.\n        let { toBlock, fromBlock } = filter;\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(toBlock)) {\n            if (typeof toBlock === 'number' || typeof toBlock === 'bigint') {\n                toBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(toBlock);\n            }\n        }\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isNullish)(fromBlock)) {\n            if (typeof fromBlock === 'number' || typeof fromBlock === 'bigint') {\n                fromBlock = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(fromBlock);\n            }\n        }\n        const formattedFilter = Object.assign(Object.assign({}, filter), { fromBlock, toBlock });\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getLogs(web3Context.requestManager, formattedFilter);\n        const result = response.map(res => {\n            if (typeof res === 'string') {\n                return res;\n            }\n            return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.logSchema, res, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n        });\n        return result;\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getChainId}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getChainId(web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getChainId(web3Context.requestManager);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, \n        // Response is number in hex formatted string\n        response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.getProof}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getProof(web3Context, address, storageKeys, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const storageKeysFormatted = storageKeys.map(storageKey => (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, storageKey, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT));\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)\n            ? blockNumber\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getProof(web3Context.requestManager, address, storageKeysFormatted, blockNumberFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.accountSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n// TODO Throwing an error with Geth, but not Infura\n// TODO gasUsedRatio and reward not formatting\n/**\n * View additional documentations here: {@link Web3Eth.getFeeHistory}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getFeeHistory(web3Context, blockCount, newestBlock = web3Context.defaultBlock, rewardPercentiles, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const blockCountFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockCount, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const newestBlockFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(newestBlock)\n            ? newestBlock\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, newestBlock, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const rewardPercentilesFormatted = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({\n            type: 'array',\n            items: {\n                format: 'uint',\n            },\n        }, rewardPercentiles, _constants_js__WEBPACK_IMPORTED_MODULE_13__.NUMBER_DATA_FORMAT);\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.getFeeHistory(web3Context.requestManager, blockCountFormatted, newestBlockFormatted, rewardPercentilesFormatted);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.feeHistorySchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.createAccessList}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction createAccessList(web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const blockNumberFormatted = (0,web3_validator__WEBPACK_IMPORTED_MODULE_4__.isBlockTag)(blockNumber)\n            ? blockNumber\n            : (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'uint' }, blockNumber, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        const response = (yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.createAccessList(web3Context.requestManager, (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_10__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT), blockNumberFormatted));\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_8__.accessListResultSchema, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n/**\n * View additional documentations here: {@link Web3Eth.signTypedData}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction signTypedData(web3Context, address, typedData, useLegacy, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_6__.ethRpcMethods.signTypedData(web3Context.requestManager, address, typedData, useLegacy);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)({ format: 'bytes' }, response, returnFormat !== null && returnFormat !== void 0 ? returnFormat : web3Context.defaultReturnFormat);\n    });\n}\n//# sourceMappingURL=rpc_method_wrappers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/schemas.js":
/*!**************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/schemas.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignatureObjectSchema: () => (/* binding */ SignatureObjectSchema),\n/* harmony export */   accessListItemSchema: () => (/* binding */ accessListItemSchema),\n/* harmony export */   accessListResultSchema: () => (/* binding */ accessListResultSchema),\n/* harmony export */   accessListSchema: () => (/* binding */ accessListSchema),\n/* harmony export */   accountSchema: () => (/* binding */ accountSchema),\n/* harmony export */   blockHeaderSchema: () => (/* binding */ blockHeaderSchema),\n/* harmony export */   blockSchema: () => (/* binding */ blockSchema),\n/* harmony export */   chainSchema: () => (/* binding */ chainSchema),\n/* harmony export */   customChainSchema: () => (/* binding */ customChainSchema),\n/* harmony export */   feeHistorySchema: () => (/* binding */ feeHistorySchema),\n/* harmony export */   hardforkSchema: () => (/* binding */ hardforkSchema),\n/* harmony export */   logSchema: () => (/* binding */ logSchema),\n/* harmony export */   storageProofSchema: () => (/* binding */ storageProofSchema),\n/* harmony export */   syncSchema: () => (/* binding */ syncSchema),\n/* harmony export */   transactionInfoSchema: () => (/* binding */ transactionInfoSchema),\n/* harmony export */   transactionReceiptSchema: () => (/* binding */ transactionReceiptSchema),\n/* harmony export */   transactionSchema: () => (/* binding */ transactionSchema),\n/* harmony export */   withdrawalsSchema: () => (/* binding */ withdrawalsSchema)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst accessListItemSchema = {\n    type: 'object',\n    properties: {\n        address: {\n            format: 'address',\n        },\n        storageKeys: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n    },\n};\nconst accessListSchema = {\n    type: 'array',\n    items: Object.assign({}, accessListItemSchema),\n};\nconst accessListResultSchema = {\n    type: 'object',\n    properties: {\n        accessList: Object.assign({}, accessListSchema),\n        gasUsed: {\n            type: 'string',\n        },\n    },\n};\nconst chainSchema = {\n    type: 'string',\n    enum: ['goerli', 'kovan', 'mainnet', 'rinkeby', 'ropsten', 'sepolia'],\n};\nconst hardforkSchema = {\n    type: 'string',\n    enum: [\n        'arrowGlacier',\n        'berlin',\n        'byzantium',\n        'chainstart',\n        'constantinople',\n        'dao',\n        'homestead',\n        'istanbul',\n        'london',\n        'merge',\n        'muirGlacier',\n        'petersburg',\n        'shanghai',\n        'spuriousDragon',\n        'tangerineWhistle',\n    ],\n};\nconst customChainSchema = {\n    type: 'object',\n    properties: {\n        name: {\n            format: 'string',\n        },\n        networkId: {\n            format: 'uint',\n        },\n        chainId: {\n            format: 'uint',\n        },\n    },\n};\nconst transactionSchema = {\n    type: 'object',\n    properties: {\n        from: {\n            format: 'address',\n        },\n        to: {\n            oneOf: [{ format: 'address' }, { type: 'null' }],\n        },\n        value: {\n            format: 'uint',\n        },\n        gas: {\n            format: 'uint',\n        },\n        gasPrice: {\n            format: 'uint',\n        },\n        effectiveGasPrice: {\n            format: 'uint',\n        },\n        type: {\n            format: 'uint',\n        },\n        maxFeePerGas: {\n            format: 'uint',\n        },\n        maxPriorityFeePerGas: {\n            format: 'uint',\n        },\n        accessList: Object.assign({}, accessListSchema),\n        data: {\n            format: 'bytes',\n        },\n        input: {\n            format: 'bytes',\n        },\n        nonce: {\n            format: 'uint',\n        },\n        chain: Object.assign({}, chainSchema),\n        hardfork: Object.assign({}, hardforkSchema),\n        chainId: {\n            format: 'uint',\n        },\n        networkId: {\n            format: 'uint',\n        },\n        common: {\n            type: 'object',\n            properties: {\n                customChain: Object.assign({}, customChainSchema),\n                baseChain: Object.assign({}, chainSchema),\n                hardfork: Object.assign({}, hardforkSchema),\n            },\n        },\n        gasLimit: {\n            format: 'uint',\n        },\n        v: {\n            format: 'uint',\n        },\n        r: {\n            format: 'bytes32',\n        },\n        s: {\n            format: 'bytes32',\n        },\n    },\n};\nconst transactionInfoSchema = {\n    type: 'object',\n    properties: Object.assign(Object.assign({}, transactionSchema.properties), { blockHash: {\n            format: 'bytes32',\n        }, blockNumber: {\n            format: 'uint',\n        }, hash: {\n            format: 'bytes32',\n        }, transactionIndex: {\n            format: 'uint',\n        }, from: {\n            format: 'address',\n        }, to: {\n            oneOf: [{ format: 'address' }, { type: 'null' }],\n        }, value: {\n            format: 'uint',\n        }, gas: {\n            format: 'uint',\n        }, gasPrice: {\n            format: 'uint',\n        }, effectiveGasPrice: {\n            format: 'uint',\n        }, type: {\n            format: 'uint',\n        }, maxFeePerGas: {\n            format: 'uint',\n        }, maxPriorityFeePerGas: {\n            format: 'uint',\n        }, accessList: Object.assign({}, accessListSchema), data: {\n            format: 'bytes',\n        }, input: {\n            format: 'bytes',\n        }, nonce: {\n            format: 'uint',\n        }, gasLimit: {\n            format: 'uint',\n        }, v: {\n            format: 'uint',\n        }, r: {\n            format: 'bytes32',\n        }, s: {\n            format: 'bytes32',\n        } }),\n};\nconst withdrawalsSchema = {\n    type: 'object',\n    properties: {\n        index: {\n            format: 'uint',\n        },\n        validatorIndex: {\n            format: 'uint',\n        },\n        address: {\n            format: 'address',\n        },\n        amount: {\n            format: 'uint',\n        },\n    },\n};\nconst blockSchema = {\n    type: 'object',\n    properties: {\n        baseFeePerGas: {\n            format: 'uint',\n        },\n        blobGasUsed: {\n            format: 'uint',\n        },\n        difficulty: {\n            format: 'uint',\n        },\n        excessBlobGas: {\n            format: 'uint',\n        },\n        extraData: {\n            format: 'bytes',\n        },\n        gasLimit: {\n            format: 'uint',\n        },\n        gasUsed: {\n            format: 'uint',\n        },\n        hash: {\n            format: 'bytes32',\n        },\n        logsBloom: {\n            format: 'bytes256',\n        },\n        miner: {\n            format: 'bytes',\n        },\n        mixHash: {\n            format: 'bytes32',\n        },\n        nonce: {\n            format: 'uint',\n        },\n        number: {\n            format: 'uint',\n        },\n        parentBeaconBlockRoot: {\n            format: 'bytes32',\n        },\n        parentHash: {\n            format: 'bytes32',\n        },\n        receiptsRoot: {\n            format: 'bytes32',\n        },\n        sha3Uncles: {\n            format: 'bytes32',\n        },\n        size: {\n            format: 'uint',\n        },\n        stateRoot: {\n            format: 'bytes32',\n        },\n        timestamp: {\n            format: 'uint',\n        },\n        totalDifficulty: {\n            format: 'uint',\n        },\n        transactions: {\n            oneOf: [\n                {\n                    type: 'array',\n                    items: Object.assign({}, transactionInfoSchema),\n                },\n                {\n                    type: 'array',\n                    items: {\n                        format: 'bytes32',\n                    },\n                },\n            ],\n        },\n        transactionsRoot: {\n            format: 'bytes32',\n        },\n        uncles: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n        withdrawals: {\n            type: 'array',\n            items: Object.assign({}, withdrawalsSchema),\n        },\n        withdrawalsRoot: {\n            format: 'bytes32',\n        },\n    },\n};\nconst blockHeaderSchema = {\n    type: 'object',\n    properties: {\n        author: {\n            format: 'bytes32',\n        },\n        excessDataGas: {\n            format: 'uint',\n        },\n        baseFeePerGas: {\n            format: 'uint',\n        },\n        blobGasUsed: {\n            format: 'uint',\n        },\n        difficulty: {\n            format: 'uint',\n        },\n        excessBlobGas: {\n            format: 'uint',\n        },\n        extraData: {\n            format: 'bytes',\n        },\n        gasLimit: {\n            format: 'uint',\n        },\n        gasUsed: {\n            format: 'uint',\n        },\n        hash: {\n            format: 'bytes32',\n        },\n        logsBloom: {\n            format: 'bytes256',\n        },\n        miner: {\n            format: 'bytes',\n        },\n        mixHash: {\n            format: 'bytes32',\n        },\n        nonce: {\n            format: 'uint',\n        },\n        number: {\n            format: 'uint',\n        },\n        parentBeaconBlockRoot: {\n            format: 'bytes32',\n        },\n        parentHash: {\n            format: 'bytes32',\n        },\n        receiptsRoot: {\n            format: 'bytes32',\n        },\n        sha3Uncles: {\n            format: 'bytes32',\n        },\n        size: {\n            format: 'uint',\n        },\n        stateRoot: {\n            format: 'bytes32',\n        },\n        timestamp: {\n            format: 'uint',\n        },\n        totalDifficulty: {\n            format: 'uint',\n        },\n        transactions: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n        transactionsRoot: {\n            format: 'bytes32',\n        },\n        uncles: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n        withdrawals: {\n            type: 'array',\n            items: Object.assign({}, withdrawalsSchema),\n        },\n        withdrawalsRoot: {\n            format: 'bytes32',\n        },\n    },\n};\nconst logSchema = {\n    type: 'object',\n    properties: {\n        removed: {\n            format: 'bool',\n        },\n        logIndex: {\n            format: 'uint',\n        },\n        transactionIndex: {\n            format: 'uint',\n        },\n        transactionHash: {\n            format: 'bytes32',\n        },\n        blockHash: {\n            format: 'bytes32',\n        },\n        blockNumber: {\n            format: 'uint',\n        },\n        address: {\n            format: 'address',\n        },\n        data: {\n            format: 'bytes',\n        },\n        topics: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n    },\n};\nconst syncSchema = {\n    type: 'object',\n    properties: {\n        startingBlock: {\n            format: 'string',\n        },\n        currentBlock: {\n            format: 'string',\n        },\n        highestBlock: {\n            format: 'string',\n        },\n        knownStates: {\n            format: 'string',\n        },\n        pulledStates: {\n            format: 'string',\n        },\n    },\n};\nconst transactionReceiptSchema = {\n    type: 'object',\n    properties: {\n        transactionHash: {\n            format: 'bytes32',\n        },\n        transactionIndex: {\n            format: 'uint',\n        },\n        blockHash: {\n            format: 'bytes32',\n        },\n        blockNumber: {\n            format: 'uint',\n        },\n        from: {\n            format: 'address',\n        },\n        to: {\n            format: 'address',\n        },\n        cumulativeGasUsed: {\n            format: 'uint',\n        },\n        gasUsed: {\n            format: 'uint',\n        },\n        effectiveGasPrice: {\n            format: 'uint',\n        },\n        contractAddress: {\n            format: 'address',\n        },\n        logs: {\n            type: 'array',\n            items: Object.assign({}, logSchema),\n        },\n        logsBloom: {\n            format: 'bytes',\n        },\n        root: {\n            format: 'bytes',\n        },\n        status: {\n            format: 'uint',\n        },\n        type: {\n            format: 'uint',\n        },\n    },\n};\nconst SignatureObjectSchema = {\n    type: 'object',\n    properties: {\n        messageHash: {\n            format: 'bytes',\n        },\n        r: {\n            format: 'bytes32',\n        },\n        s: {\n            format: 'bytes32',\n        },\n        v: {\n            format: 'bytes',\n        },\n        message: {\n            format: 'bytes',\n        },\n        signature: {\n            format: 'bytes',\n        },\n    },\n};\nconst feeHistorySchema = {\n    type: 'object',\n    properties: {\n        oldestBlock: {\n            format: 'uint',\n        },\n        baseFeePerGas: {\n            type: 'array',\n            items: {\n                format: 'uint',\n            },\n        },\n        reward: {\n            type: 'array',\n            items: {\n                type: 'array',\n                items: {\n                    format: 'uint',\n                },\n            },\n        },\n        gasUsedRatio: {\n            type: 'array',\n            items: {\n                type: 'number',\n            },\n        },\n    },\n};\nconst storageProofSchema = {\n    type: 'object',\n    properties: {\n        key: {\n            format: 'bytes32',\n        },\n        value: {\n            format: 'uint',\n        },\n        proof: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n    },\n};\nconst accountSchema = {\n    type: 'object',\n    properties: {\n        balance: {\n            format: 'uint',\n        },\n        codeHash: {\n            format: 'bytes32',\n        },\n        nonce: {\n            format: 'uint',\n        },\n        storageHash: {\n            format: 'bytes32',\n        },\n        accountProof: {\n            type: 'array',\n            items: {\n                format: 'bytes32',\n            },\n        },\n        storageProof: {\n            type: 'array',\n            items: Object.assign({}, storageProofSchema),\n        },\n    },\n};\n//# sourceMappingURL=schemas.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/types.js":
/*!************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/types.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udC1lbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS90eXBlcy5qcz9kOTZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js":
/*!**************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeSignedTransaction: () => (/* binding */ decodeSignedTransaction)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-accounts */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js\");\n/* harmony import */ var _detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detect_transaction_type.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js\");\n/* harmony import */ var _format_transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\");\n\n\n\n\n/**\n * Decodes an [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded transaction.\n *\n * @param encodedSignedTransaction The RLP encoded transaction.\n * @param returnFormat ({@link DataFormat} Specifies how the return data should be formatted.\n * @returns {@link SignedTransactionInfoAPI}, an object containing the RLP encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).\n */\nfunction decodeSignedTransaction(encodedSignedTransaction, returnFormat, options = { fillInputAndData: false }) {\n    return {\n        raw: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes' }, encodedSignedTransaction, returnFormat),\n        tx: (0,_format_transaction_js__WEBPACK_IMPORTED_MODULE_3__.formatTransaction)(Object.assign(Object.assign({}, web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__.TransactionFactory.fromSerializedData((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(encodedSignedTransaction)).toJSON()), { hash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.keccak256)((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(encodedSignedTransaction))), type: (0,_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_2__.detectRawTransactionType)((0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(encodedSignedTransaction)) }), returnFormat, { fillInputAndData: options.fillInputAndData }),\n    };\n}\n//# sourceMappingURL=decode_signed_transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9kZWNvZGVfc2lnbmVkX3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVFO0FBQ2hCO0FBQ2lCO0FBQ1o7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsa0JBQWtCO0FBQzNDLGFBQWEsK0JBQStCO0FBQzVDO0FBQ08scUZBQXFGLHlCQUF5QjtBQUNySDtBQUNBLGFBQWEsa0RBQU0sR0FBRyxpQkFBaUI7QUFDdkMsWUFBWSx5RUFBaUIsK0JBQStCLEVBQUUsaUVBQWtCLG9CQUFvQixzREFBVSx5Q0FBeUMsTUFBTSxzREFBVSxDQUFDLHFEQUFTLENBQUMsc0RBQVUsb0NBQW9DLHFGQUF3QixDQUFDLHNEQUFVLDZCQUE2QixtQkFBbUIsNENBQTRDO0FBQy9WO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250LWVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL3V0aWxzL2RlY29kZV9zaWduZWRfdHJhbnNhY3Rpb24uanM/YTJmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBieXRlc1RvSGV4LCBmb3JtYXQsIGhleFRvQnl0ZXMsIGtlY2NhazI1NiB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25GYWN0b3J5IH0gZnJvbSAnd2ViMy1ldGgtYWNjb3VudHMnO1xuaW1wb3J0IHsgZGV0ZWN0UmF3VHJhbnNhY3Rpb25UeXBlIH0gZnJvbSAnLi9kZXRlY3RfdHJhbnNhY3Rpb25fdHlwZS5qcyc7XG5pbXBvcnQgeyBmb3JtYXRUcmFuc2FjdGlvbiB9IGZyb20gJy4vZm9ybWF0X3RyYW5zYWN0aW9uLmpzJztcbi8qKlxuICogRGVjb2RlcyBhbiBbUkxQXShodHRwczovL2V0aGVyZXVtLm9yZy9lbi9kZXZlbG9wZXJzL2RvY3MvZGF0YS1zdHJ1Y3R1cmVzLWFuZC1lbmNvZGluZy9ybHAvI3RvcCkgZW5jb2RlZCB0cmFuc2FjdGlvbi5cbiAqXG4gKiBAcGFyYW0gZW5jb2RlZFNpZ25lZFRyYW5zYWN0aW9uIFRoZSBSTFAgZW5jb2RlZCB0cmFuc2FjdGlvbi5cbiAqIEBwYXJhbSByZXR1cm5Gb3JtYXQgKHtAbGluayBEYXRhRm9ybWF0fSBTcGVjaWZpZXMgaG93IHRoZSByZXR1cm4gZGF0YSBzaG91bGQgYmUgZm9ybWF0dGVkLlxuICogQHJldHVybnMge0BsaW5rIFNpZ25lZFRyYW5zYWN0aW9uSW5mb0FQSX0sIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSBSTFAgZW5jb2RlZCBzaWduZWQgdHJhbnNhY3Rpb24gKGFjY2Vzc2VkIHZpYSB0aGUgYHJhd2AgcHJvcGVydHkpIGFuZCB0aGUgc2lnbmVkIHRyYW5zYWN0aW9uIG9iamVjdCAoYWNjZXNzZWQgdmlhIHRoZSBgdHhgIHByb3BlcnR5KS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVNpZ25lZFRyYW5zYWN0aW9uKGVuY29kZWRTaWduZWRUcmFuc2FjdGlvbiwgcmV0dXJuRm9ybWF0LCBvcHRpb25zID0geyBmaWxsSW5wdXRBbmREYXRhOiBmYWxzZSB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmF3OiBmb3JtYXQoeyBmb3JtYXQ6ICdieXRlcycgfSwgZW5jb2RlZFNpZ25lZFRyYW5zYWN0aW9uLCByZXR1cm5Gb3JtYXQpLFxuICAgICAgICB0eDogZm9ybWF0VHJhbnNhY3Rpb24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBUcmFuc2FjdGlvbkZhY3RvcnkuZnJvbVNlcmlhbGl6ZWREYXRhKGhleFRvQnl0ZXMoZW5jb2RlZFNpZ25lZFRyYW5zYWN0aW9uKSkudG9KU09OKCkpLCB7IGhhc2g6IGJ5dGVzVG9IZXgoa2VjY2FrMjU2KGhleFRvQnl0ZXMoZW5jb2RlZFNpZ25lZFRyYW5zYWN0aW9uKSkpLCB0eXBlOiBkZXRlY3RSYXdUcmFuc2FjdGlvblR5cGUoaGV4VG9CeXRlcyhlbmNvZGVkU2lnbmVkVHJhbnNhY3Rpb24pKSB9KSwgcmV0dXJuRm9ybWF0LCB7IGZpbGxJbnB1dEFuZERhdGE6IG9wdGlvbnMuZmlsbElucHV0QW5kRGF0YSB9KSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVjb2RlX3NpZ25lZF90cmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/decode_signed_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/decoding.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/decoding.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeEventABI: () => (/* binding */ decodeEventABI)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-abi */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\nconst decodeEventABI = (event, data, jsonInterface, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RETURN_FORMAT) => {\n    var _a, _b, _c, _d, _e;\n    let modifiedEvent = Object.assign({}, event);\n    const result = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_3__.logSchema, data, returnFormat);\n    // if allEvents get the right event\n    if ([_constants_js__WEBPACK_IMPORTED_MODULE_4__.ALL_EVENTS, 'allEvents'].includes(modifiedEvent.name)) {\n        const matchedEvent = jsonInterface.find(j => j.signature === data.topics[0]);\n        if (matchedEvent) {\n            modifiedEvent = matchedEvent;\n        }\n        else {\n            modifiedEvent = { anonymous: true };\n        }\n    }\n    // create empty inputs if none are present (e.g. anonymous events on allEvents)\n    modifiedEvent.inputs = (_b = (_a = modifiedEvent.inputs) !== null && _a !== void 0 ? _a : event.inputs) !== null && _b !== void 0 ? _b : [];\n    // Handle case where an event signature shadows the current ABI with non-identical\n    // arg indexing. If # of topics doesn't match, event is anon.\n    if (!modifiedEvent.anonymous) {\n        let indexedInputs = 0;\n        ((_c = modifiedEvent.inputs) !== null && _c !== void 0 ? _c : []).forEach(input => {\n            if (input.indexed) {\n                indexedInputs += 1;\n            }\n        });\n        if (indexedInputs > 0 && (data === null || data === void 0 ? void 0 : data.topics) && (data === null || data === void 0 ? void 0 : data.topics.length) !== indexedInputs + 1) {\n            // checks if event is anonymous\n            modifiedEvent = Object.assign(Object.assign({}, modifiedEvent), { anonymous: true, inputs: [] });\n        }\n    }\n    const argTopics = modifiedEvent.anonymous ? data.topics : ((_d = data.topics) !== null && _d !== void 0 ? _d : []).slice(1);\n    return Object.assign(Object.assign({}, result), { returnValues: (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_2__.decodeLog)([...((_e = modifiedEvent.inputs) !== null && _e !== void 0 ? _e : [])], data.data, argTopics), event: modifiedEvent.name, signature: modifiedEvent.anonymous || !data.topics || data.topics.length === 0 || !data.topics[0]\n            ? undefined\n            : data.topics[0], raw: {\n            data: data.data,\n            topics: data.topics,\n        } });\n};\n//# sourceMappingURL=decoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9kZWNvZGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ29DO0FBQ2dCO0FBQ1g7QUFDQztBQUNHO0FBQ3RDLG1FQUFtRSw2REFBcUI7QUFDL0Y7QUFDQSx3Q0FBd0M7QUFDeEMsbUJBQW1CLGtEQUFNLENBQUMsa0RBQVM7QUFDbkM7QUFDQSxTQUFTLHFEQUFVO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwwREFBMEQsb0JBQW9CLDZCQUE2QjtBQUMzRztBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsYUFBYSxjQUFjLHVEQUFTO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udC1lbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9kZWNvZGluZy5qcz9kODIyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAnd2ViMy11dGlscyc7XG5pbXBvcnQgeyBERUZBVUxUX1JFVFVSTl9GT1JNQVQsIH0gZnJvbSAnd2ViMy10eXBlcyc7XG5pbXBvcnQgeyBkZWNvZGVMb2cgfSBmcm9tICd3ZWIzLWV0aC1hYmknO1xuaW1wb3J0IHsgbG9nU2NoZW1hIH0gZnJvbSAnLi4vc2NoZW1hcy5qcyc7XG5pbXBvcnQgeyBBTExfRVZFTlRTIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmV4cG9ydCBjb25zdCBkZWNvZGVFdmVudEFCSSA9IChldmVudCwgZGF0YSwganNvbkludGVyZmFjZSwgcmV0dXJuRm9ybWF0ID0gREVGQVVMVF9SRVRVUk5fRk9STUFUKSA9PiB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZTtcbiAgICBsZXQgbW9kaWZpZWRFdmVudCA9IE9iamVjdC5hc3NpZ24oe30sIGV2ZW50KTtcbiAgICBjb25zdCByZXN1bHQgPSBmb3JtYXQobG9nU2NoZW1hLCBkYXRhLCByZXR1cm5Gb3JtYXQpO1xuICAgIC8vIGlmIGFsbEV2ZW50cyBnZXQgdGhlIHJpZ2h0IGV2ZW50XG4gICAgaWYgKFtBTExfRVZFTlRTLCAnYWxsRXZlbnRzJ10uaW5jbHVkZXMobW9kaWZpZWRFdmVudC5uYW1lKSkge1xuICAgICAgICBjb25zdCBtYXRjaGVkRXZlbnQgPSBqc29uSW50ZXJmYWNlLmZpbmQoaiA9PiBqLnNpZ25hdHVyZSA9PT0gZGF0YS50b3BpY3NbMF0pO1xuICAgICAgICBpZiAobWF0Y2hlZEV2ZW50KSB7XG4gICAgICAgICAgICBtb2RpZmllZEV2ZW50ID0gbWF0Y2hlZEV2ZW50O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbW9kaWZpZWRFdmVudCA9IHsgYW5vbnltb3VzOiB0cnVlIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gY3JlYXRlIGVtcHR5IGlucHV0cyBpZiBub25lIGFyZSBwcmVzZW50IChlLmcuIGFub255bW91cyBldmVudHMgb24gYWxsRXZlbnRzKVxuICAgIG1vZGlmaWVkRXZlbnQuaW5wdXRzID0gKF9iID0gKF9hID0gbW9kaWZpZWRFdmVudC5pbnB1dHMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGV2ZW50LmlucHV0cykgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogW107XG4gICAgLy8gSGFuZGxlIGNhc2Ugd2hlcmUgYW4gZXZlbnQgc2lnbmF0dXJlIHNoYWRvd3MgdGhlIGN1cnJlbnQgQUJJIHdpdGggbm9uLWlkZW50aWNhbFxuICAgIC8vIGFyZyBpbmRleGluZy4gSWYgIyBvZiB0b3BpY3MgZG9lc24ndCBtYXRjaCwgZXZlbnQgaXMgYW5vbi5cbiAgICBpZiAoIW1vZGlmaWVkRXZlbnQuYW5vbnltb3VzKSB7XG4gICAgICAgIGxldCBpbmRleGVkSW5wdXRzID0gMDtcbiAgICAgICAgKChfYyA9IG1vZGlmaWVkRXZlbnQuaW5wdXRzKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBbXSkuZm9yRWFjaChpbnB1dCA9PiB7XG4gICAgICAgICAgICBpZiAoaW5wdXQuaW5kZXhlZCkge1xuICAgICAgICAgICAgICAgIGluZGV4ZWRJbnB1dHMgKz0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChpbmRleGVkSW5wdXRzID4gMCAmJiAoZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkYXRhLnRvcGljcykgJiYgKGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGF0YS50b3BpY3MubGVuZ3RoKSAhPT0gaW5kZXhlZElucHV0cyArIDEpIHtcbiAgICAgICAgICAgIC8vIGNoZWNrcyBpZiBldmVudCBpcyBhbm9ueW1vdXNcbiAgICAgICAgICAgIG1vZGlmaWVkRXZlbnQgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG1vZGlmaWVkRXZlbnQpLCB7IGFub255bW91czogdHJ1ZSwgaW5wdXRzOiBbXSB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBhcmdUb3BpY3MgPSBtb2RpZmllZEV2ZW50LmFub255bW91cyA/IGRhdGEudG9waWNzIDogKChfZCA9IGRhdGEudG9waWNzKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiBbXSkuc2xpY2UoMSk7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcmVzdWx0KSwgeyByZXR1cm5WYWx1ZXM6IGRlY29kZUxvZyhbLi4uKChfZSA9IG1vZGlmaWVkRXZlbnQuaW5wdXRzKSAhPT0gbnVsbCAmJiBfZSAhPT0gdm9pZCAwID8gX2UgOiBbXSldLCBkYXRhLmRhdGEsIGFyZ1RvcGljcyksIGV2ZW50OiBtb2RpZmllZEV2ZW50Lm5hbWUsIHNpZ25hdHVyZTogbW9kaWZpZWRFdmVudC5hbm9ueW1vdXMgfHwgIWRhdGEudG9waWNzIHx8IGRhdGEudG9waWNzLmxlbmd0aCA9PT0gMCB8fCAhZGF0YS50b3BpY3NbMF1cbiAgICAgICAgICAgID8gdW5kZWZpbmVkXG4gICAgICAgICAgICA6IGRhdGEudG9waWNzWzBdLCByYXc6IHtcbiAgICAgICAgICAgIGRhdGE6IGRhdGEuZGF0YSxcbiAgICAgICAgICAgIHRvcGljczogZGF0YS50b3BpY3MsXG4gICAgICAgIH0gfSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVjb2RpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/decoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultTransactionTypeParser: () => (/* binding */ defaultTransactionTypeParser),\n/* harmony export */   detectRawTransactionType: () => (/* binding */ detectRawTransactionType),\n/* harmony export */   detectTransactionType: () => (/* binding */ detectTransactionType)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n// undefined is treated as null for JSON schema validator\nconst transactionType0x0Schema = {\n    type: 'object',\n    properties: {\n        accessList: {\n            type: 'null',\n        },\n        maxFeePerGas: {\n            type: 'null',\n        },\n        maxPriorityFeePerGas: {\n            type: 'null',\n        },\n    },\n};\nconst transactionType0x1Schema = {\n    type: 'object',\n    properties: {\n        maxFeePerGas: {\n            type: 'null',\n        },\n        maxPriorityFeePerGas: {\n            type: 'null',\n        },\n    },\n};\nconst transactionType0x2Schema = {\n    type: 'object',\n    properties: {\n        gasPrice: {\n            type: 'null',\n        },\n    },\n};\nconst validateTxTypeAndHandleErrors = (txSchema, tx, txType) => {\n    try {\n        web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validateJSONSchema(txSchema, tx);\n    }\n    catch (error) {\n        if (error instanceof web3_validator__WEBPACK_IMPORTED_MODULE_2__.Web3ValidatorError)\n            // Erroneously reported error\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidPropertiesForTransactionTypeError(error.errors, txType);\n        throw error;\n    }\n};\nconst defaultTransactionTypeParser = (transaction) => {\n    var _a, _b;\n    const tx = transaction;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.type)) {\n        let txSchema;\n        switch (tx.type) {\n            case '0x0':\n                txSchema = transactionType0x0Schema;\n                break;\n            case '0x1':\n                txSchema = transactionType0x1Schema;\n                break;\n            case '0x2':\n                txSchema = transactionType0x2Schema;\n                break;\n            default:\n                return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, tx.type, web3_types__WEBPACK_IMPORTED_MODULE_1__.ETH_DATA_FORMAT);\n        }\n        validateTxTypeAndHandleErrors(txSchema, tx, tx.type);\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, tx.type, web3_types__WEBPACK_IMPORTED_MODULE_1__.ETH_DATA_FORMAT);\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.maxFeePerGas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.maxPriorityFeePerGas)) {\n        validateTxTypeAndHandleErrors(transactionType0x2Schema, tx, '0x2');\n        return '0x2';\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.accessList)) {\n        validateTxTypeAndHandleErrors(transactionType0x1Schema, tx, '0x1');\n        return '0x1';\n    }\n    const givenHardfork = (_a = tx.hardfork) !== null && _a !== void 0 ? _a : (_b = tx.common) === null || _b === void 0 ? void 0 : _b.hardfork;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(givenHardfork)) {\n        const hardforkIndex = Object.keys(web3_types__WEBPACK_IMPORTED_MODULE_1__.HardforksOrdered).indexOf(givenHardfork);\n        // givenHardfork is London or later, so EIP-2718 is supported\n        if (hardforkIndex >= Object.keys(web3_types__WEBPACK_IMPORTED_MODULE_1__.HardforksOrdered).indexOf('london'))\n            return !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.gasPrice) ? '0x0' : '0x2';\n        // givenHardfork is Berlin, tx.accessList is undefined, assume type is 0x0\n        if (hardforkIndex === Object.keys(web3_types__WEBPACK_IMPORTED_MODULE_1__.HardforksOrdered).indexOf('berlin'))\n            return '0x0';\n    }\n    // gasprice is defined\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(tx.gasPrice)) {\n        validateTxTypeAndHandleErrors(transactionType0x0Schema, tx, '0x0');\n        return '0x0';\n    }\n    // no transaction type can be inferred from properties, use default transaction type\n    return undefined;\n};\nconst detectTransactionType = (transaction, web3Context) => {\n    var _a;\n    return ((_a = web3Context === null || web3Context === void 0 ? void 0 : web3Context.transactionTypeParser) !== null && _a !== void 0 ? _a : defaultTransactionTypeParser)(transaction);\n};\nconst detectRawTransactionType = (transaction) => transaction[0] > 0x7f ? '0x0' : (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.toHex)(transaction[0]);\n//# sourceMappingURL=detect_transaction_type.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9kZXRlY3RfdHJhbnNhY3Rpb25fdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUMyQztBQUNvQjtBQUNXO0FBQ0g7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsUUFBUSxxREFBUztBQUNqQjtBQUNBO0FBQ0EsNkJBQTZCLDhEQUFrQjtBQUMvQztBQUNBO0FBQ0Esc0JBQXNCLGlGQUF3QztBQUM5RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxTQUFTLHlEQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrREFBTSxHQUFHLGdCQUFnQixXQUFXLHVEQUFlO0FBQzFFO0FBQ0E7QUFDQSxlQUFlLGtEQUFNLEdBQUcsZ0JBQWdCLFdBQVcsdURBQWU7QUFDbEU7QUFDQSxTQUFTLHlEQUFTLHNCQUFzQix5REFBUztBQUNqRDtBQUNBO0FBQ0E7QUFDQSxTQUFTLHlEQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx5REFBUztBQUNsQiwwQ0FBMEMsd0RBQWdCO0FBQzFEO0FBQ0EseUNBQXlDLHdEQUFnQjtBQUN6RCxvQkFBb0IseURBQVM7QUFDN0I7QUFDQSwwQ0FBMEMsd0RBQWdCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBLFNBQVMseURBQVM7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTyxrRkFBa0YsaURBQUs7QUFDOUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udC1lbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9kZXRlY3RfdHJhbnNhY3Rpb25fdHlwZS5qcz9kMjBkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgZm9ybWF0LCB0b0hleCB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgSGFyZGZvcmtzT3JkZXJlZCwgRVRIX0RBVEFfRk9STUFUIH0gZnJvbSAnd2ViMy10eXBlcyc7XG5pbXBvcnQgeyBXZWIzVmFsaWRhdG9yRXJyb3IsIGlzTnVsbGlzaCwgdmFsaWRhdG9yIH0gZnJvbSAnd2ViMy12YWxpZGF0b3InO1xuaW1wb3J0IHsgSW52YWxpZFByb3BlcnRpZXNGb3JUcmFuc2FjdGlvblR5cGVFcnJvciB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbi8vIHVuZGVmaW5lZCBpcyB0cmVhdGVkIGFzIG51bGwgZm9yIEpTT04gc2NoZW1hIHZhbGlkYXRvclxuY29uc3QgdHJhbnNhY3Rpb25UeXBlMHgwU2NoZW1hID0ge1xuICAgIHR5cGU6ICdvYmplY3QnLFxuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgYWNjZXNzTGlzdDoge1xuICAgICAgICAgICAgdHlwZTogJ251bGwnLFxuICAgICAgICB9LFxuICAgICAgICBtYXhGZWVQZXJHYXM6IHtcbiAgICAgICAgICAgIHR5cGU6ICdudWxsJyxcbiAgICAgICAgfSxcbiAgICAgICAgbWF4UHJpb3JpdHlGZWVQZXJHYXM6IHtcbiAgICAgICAgICAgIHR5cGU6ICdudWxsJyxcbiAgICAgICAgfSxcbiAgICB9LFxufTtcbmNvbnN0IHRyYW5zYWN0aW9uVHlwZTB4MVNjaGVtYSA9IHtcbiAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgIG1heEZlZVBlckdhczoge1xuICAgICAgICAgICAgdHlwZTogJ251bGwnLFxuICAgICAgICB9LFxuICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhczoge1xuICAgICAgICAgICAgdHlwZTogJ251bGwnLFxuICAgICAgICB9LFxuICAgIH0sXG59O1xuY29uc3QgdHJhbnNhY3Rpb25UeXBlMHgyU2NoZW1hID0ge1xuICAgIHR5cGU6ICdvYmplY3QnLFxuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgZ2FzUHJpY2U6IHtcbiAgICAgICAgICAgIHR5cGU6ICdudWxsJyxcbiAgICAgICAgfSxcbiAgICB9LFxufTtcbmNvbnN0IHZhbGlkYXRlVHhUeXBlQW5kSGFuZGxlRXJyb3JzID0gKHR4U2NoZW1hLCB0eCwgdHhUeXBlKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgdmFsaWRhdG9yLnZhbGlkYXRlSlNPTlNjaGVtYSh0eFNjaGVtYSwgdHgpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgV2ViM1ZhbGlkYXRvckVycm9yKVxuICAgICAgICAgICAgLy8gRXJyb25lb3VzbHkgcmVwb3J0ZWQgZXJyb3JcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWNhbGxcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkUHJvcGVydGllc0ZvclRyYW5zYWN0aW9uVHlwZUVycm9yKGVycm9yLmVycm9ycywgdHhUeXBlKTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxufTtcbmV4cG9ydCBjb25zdCBkZWZhdWx0VHJhbnNhY3Rpb25UeXBlUGFyc2VyID0gKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCB0eCA9IHRyYW5zYWN0aW9uO1xuICAgIGlmICghaXNOdWxsaXNoKHR4LnR5cGUpKSB7XG4gICAgICAgIGxldCB0eFNjaGVtYTtcbiAgICAgICAgc3dpdGNoICh0eC50eXBlKSB7XG4gICAgICAgICAgICBjYXNlICcweDAnOlxuICAgICAgICAgICAgICAgIHR4U2NoZW1hID0gdHJhbnNhY3Rpb25UeXBlMHgwU2NoZW1hO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnMHgxJzpcbiAgICAgICAgICAgICAgICB0eFNjaGVtYSA9IHRyYW5zYWN0aW9uVHlwZTB4MVNjaGVtYTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJzB4Mic6XG4gICAgICAgICAgICAgICAgdHhTY2hlbWEgPSB0cmFuc2FjdGlvblR5cGUweDJTY2hlbWE7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCB0eC50eXBlLCBFVEhfREFUQV9GT1JNQVQpO1xuICAgICAgICB9XG4gICAgICAgIHZhbGlkYXRlVHhUeXBlQW5kSGFuZGxlRXJyb3JzKHR4U2NoZW1hLCB0eCwgdHgudHlwZSk7XG4gICAgICAgIHJldHVybiBmb3JtYXQoeyBmb3JtYXQ6ICd1aW50JyB9LCB0eC50eXBlLCBFVEhfREFUQV9GT1JNQVQpO1xuICAgIH1cbiAgICBpZiAoIWlzTnVsbGlzaCh0eC5tYXhGZWVQZXJHYXMpIHx8ICFpc051bGxpc2godHgubWF4UHJpb3JpdHlGZWVQZXJHYXMpKSB7XG4gICAgICAgIHZhbGlkYXRlVHhUeXBlQW5kSGFuZGxlRXJyb3JzKHRyYW5zYWN0aW9uVHlwZTB4MlNjaGVtYSwgdHgsICcweDInKTtcbiAgICAgICAgcmV0dXJuICcweDInO1xuICAgIH1cbiAgICBpZiAoIWlzTnVsbGlzaCh0eC5hY2Nlc3NMaXN0KSkge1xuICAgICAgICB2YWxpZGF0ZVR4VHlwZUFuZEhhbmRsZUVycm9ycyh0cmFuc2FjdGlvblR5cGUweDFTY2hlbWEsIHR4LCAnMHgxJyk7XG4gICAgICAgIHJldHVybiAnMHgxJztcbiAgICB9XG4gICAgY29uc3QgZ2l2ZW5IYXJkZm9yayA9IChfYSA9IHR4LmhhcmRmb3JrKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAoX2IgPSB0eC5jb21tb24pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5oYXJkZm9yaztcbiAgICBpZiAoIWlzTnVsbGlzaChnaXZlbkhhcmRmb3JrKSkge1xuICAgICAgICBjb25zdCBoYXJkZm9ya0luZGV4ID0gT2JqZWN0LmtleXMoSGFyZGZvcmtzT3JkZXJlZCkuaW5kZXhPZihnaXZlbkhhcmRmb3JrKTtcbiAgICAgICAgLy8gZ2l2ZW5IYXJkZm9yayBpcyBMb25kb24gb3IgbGF0ZXIsIHNvIEVJUC0yNzE4IGlzIHN1cHBvcnRlZFxuICAgICAgICBpZiAoaGFyZGZvcmtJbmRleCA+PSBPYmplY3Qua2V5cyhIYXJkZm9ya3NPcmRlcmVkKS5pbmRleE9mKCdsb25kb24nKSlcbiAgICAgICAgICAgIHJldHVybiAhaXNOdWxsaXNoKHR4Lmdhc1ByaWNlKSA/ICcweDAnIDogJzB4Mic7XG4gICAgICAgIC8vIGdpdmVuSGFyZGZvcmsgaXMgQmVybGluLCB0eC5hY2Nlc3NMaXN0IGlzIHVuZGVmaW5lZCwgYXNzdW1lIHR5cGUgaXMgMHgwXG4gICAgICAgIGlmIChoYXJkZm9ya0luZGV4ID09PSBPYmplY3Qua2V5cyhIYXJkZm9ya3NPcmRlcmVkKS5pbmRleE9mKCdiZXJsaW4nKSlcbiAgICAgICAgICAgIHJldHVybiAnMHgwJztcbiAgICB9XG4gICAgLy8gZ2FzcHJpY2UgaXMgZGVmaW5lZFxuICAgIGlmICghaXNOdWxsaXNoKHR4Lmdhc1ByaWNlKSkge1xuICAgICAgICB2YWxpZGF0ZVR4VHlwZUFuZEhhbmRsZUVycm9ycyh0cmFuc2FjdGlvblR5cGUweDBTY2hlbWEsIHR4LCAnMHgwJyk7XG4gICAgICAgIHJldHVybiAnMHgwJztcbiAgICB9XG4gICAgLy8gbm8gdHJhbnNhY3Rpb24gdHlwZSBjYW4gYmUgaW5mZXJyZWQgZnJvbSBwcm9wZXJ0aWVzLCB1c2UgZGVmYXVsdCB0cmFuc2FjdGlvbiB0eXBlXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG5leHBvcnQgY29uc3QgZGV0ZWN0VHJhbnNhY3Rpb25UeXBlID0gKHRyYW5zYWN0aW9uLCB3ZWIzQ29udGV4dCkgPT4ge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4gKChfYSA9IHdlYjNDb250ZXh0ID09PSBudWxsIHx8IHdlYjNDb250ZXh0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB3ZWIzQ29udGV4dC50cmFuc2FjdGlvblR5cGVQYXJzZXIpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGRlZmF1bHRUcmFuc2FjdGlvblR5cGVQYXJzZXIpKHRyYW5zYWN0aW9uKTtcbn07XG5leHBvcnQgY29uc3QgZGV0ZWN0UmF3VHJhbnNhY3Rpb25UeXBlID0gKHRyYW5zYWN0aW9uKSA9PiB0cmFuc2FjdGlvblswXSA+IDB4N2YgPyAnMHgwJyA6IHRvSGV4KHRyYW5zYWN0aW9uWzBdKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRldGVjdF90cmFuc2FjdGlvbl90eXBlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js":
/*!*******************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/format_transaction.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatTransaction: () => (/* binding */ formatTransaction)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\nfunction formatTransaction(transaction, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT, options = {\n    transactionSchema: _schemas_js__WEBPACK_IMPORTED_MODULE_4__.transactionInfoSchema,\n    fillInputAndData: false,\n}) {\n    var _a, _b;\n    let formattedTransaction = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)({}, transaction);\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction === null || transaction === void 0 ? void 0 : transaction.common)) {\n        formattedTransaction.common = Object.assign({}, transaction.common);\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)((_a = transaction.common) === null || _a === void 0 ? void 0 : _a.customChain))\n            formattedTransaction.common.customChain = Object.assign({}, transaction.common.customChain);\n    }\n    formattedTransaction = (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.format)((_b = options.transactionSchema) !== null && _b !== void 0 ? _b : _schemas_js__WEBPACK_IMPORTED_MODULE_4__.transactionInfoSchema, formattedTransaction, returnFormat);\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.data) &&\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.input) &&\n        // Converting toHex is accounting for data and input being Uint8Arrays\n        // since comparing Uint8Array is not as straightforward as comparing strings\n        (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toHex)(formattedTransaction.data) !== (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.toHex)(formattedTransaction.input))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.TransactionDataAndInputError({\n            data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(formattedTransaction.data),\n            input: (0,web3_utils__WEBPACK_IMPORTED_MODULE_2__.bytesToHex)(formattedTransaction.input),\n        });\n    if (options.fillInputAndData) {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.data)) {\n            formattedTransaction.input = formattedTransaction.data;\n        }\n        else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.input)) {\n            formattedTransaction.data = formattedTransaction.input;\n        }\n    }\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.gasLimit)) {\n        formattedTransaction.gas = formattedTransaction.gasLimit;\n        delete formattedTransaction.gasLimit;\n    }\n    return formattedTransaction;\n}\n//# sourceMappingURL=format_transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9mb3JtYXRfdHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNtRDtBQUNSO0FBQ3VCO0FBQ1A7QUFDTDtBQUMvQyx1REFBdUQsNkRBQXFCO0FBQ25GLHVCQUF1Qiw4REFBcUI7QUFDNUM7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwrQkFBK0IscURBQVMsR0FBRztBQUMzQyxTQUFTLHlEQUFTO0FBQ2xCLHNEQUFzRDtBQUN0RCxhQUFhLHlEQUFTO0FBQ3RCLHNFQUFzRTtBQUN0RTtBQUNBLDJCQUEyQixrREFBTSxtRUFBbUUsOERBQXFCO0FBQ3pILFNBQVMseURBQVM7QUFDbEIsU0FBUyx5REFBUztBQUNsQjtBQUNBO0FBQ0EsUUFBUSxpREFBSyxnQ0FBZ0MsaURBQUs7QUFDbEQsa0JBQWtCLHFFQUE0QjtBQUM5QyxrQkFBa0Isc0RBQVU7QUFDNUIsbUJBQW1CLHNEQUFVO0FBQzdCLFNBQVM7QUFDVDtBQUNBLGFBQWEseURBQVM7QUFDdEI7QUFDQTtBQUNBLGtCQUFrQix5REFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxTQUFTLHlEQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250LWVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL3V0aWxzL2Zvcm1hdF90cmFuc2FjdGlvbi5qcz9mYzc1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgREVGQVVMVF9SRVRVUk5fRk9STUFUIH0gZnJvbSAnd2ViMy10eXBlcyc7XG5pbXBvcnQgeyBpc051bGxpc2ggfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG5pbXBvcnQgeyBtZXJnZURlZXAsIGZvcm1hdCwgYnl0ZXNUb0hleCwgdG9IZXggfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uRGF0YUFuZElucHV0RXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyB0cmFuc2FjdGlvbkluZm9TY2hlbWEgfSBmcm9tICcuLi9zY2hlbWFzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRUcmFuc2FjdGlvbih0cmFuc2FjdGlvbiwgcmV0dXJuRm9ybWF0ID0gREVGQVVMVF9SRVRVUk5fRk9STUFULCBvcHRpb25zID0ge1xuICAgIHRyYW5zYWN0aW9uU2NoZW1hOiB0cmFuc2FjdGlvbkluZm9TY2hlbWEsXG4gICAgZmlsbElucHV0QW5kRGF0YTogZmFsc2UsXG59KSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBsZXQgZm9ybWF0dGVkVHJhbnNhY3Rpb24gPSBtZXJnZURlZXAoe30sIHRyYW5zYWN0aW9uKTtcbiAgICBpZiAoIWlzTnVsbGlzaCh0cmFuc2FjdGlvbiA9PT0gbnVsbCB8fCB0cmFuc2FjdGlvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogdHJhbnNhY3Rpb24uY29tbW9uKSkge1xuICAgICAgICBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5jb21tb24gPSBPYmplY3QuYXNzaWduKHt9LCB0cmFuc2FjdGlvbi5jb21tb24pO1xuICAgICAgICBpZiAoIWlzTnVsbGlzaCgoX2EgPSB0cmFuc2FjdGlvbi5jb21tb24pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jdXN0b21DaGFpbikpXG4gICAgICAgICAgICBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5jb21tb24uY3VzdG9tQ2hhaW4gPSBPYmplY3QuYXNzaWduKHt9LCB0cmFuc2FjdGlvbi5jb21tb24uY3VzdG9tQ2hhaW4pO1xuICAgIH1cbiAgICBmb3JtYXR0ZWRUcmFuc2FjdGlvbiA9IGZvcm1hdCgoX2IgPSBvcHRpb25zLnRyYW5zYWN0aW9uU2NoZW1hKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiB0cmFuc2FjdGlvbkluZm9TY2hlbWEsIGZvcm1hdHRlZFRyYW5zYWN0aW9uLCByZXR1cm5Gb3JtYXQpO1xuICAgIGlmICghaXNOdWxsaXNoKGZvcm1hdHRlZFRyYW5zYWN0aW9uLmRhdGEpICYmXG4gICAgICAgICFpc051bGxpc2goZm9ybWF0dGVkVHJhbnNhY3Rpb24uaW5wdXQpICYmXG4gICAgICAgIC8vIENvbnZlcnRpbmcgdG9IZXggaXMgYWNjb3VudGluZyBmb3IgZGF0YSBhbmQgaW5wdXQgYmVpbmcgVWludDhBcnJheXNcbiAgICAgICAgLy8gc2luY2UgY29tcGFyaW5nIFVpbnQ4QXJyYXkgaXMgbm90IGFzIHN0cmFpZ2h0Zm9yd2FyZCBhcyBjb21wYXJpbmcgc3RyaW5nc1xuICAgICAgICB0b0hleChmb3JtYXR0ZWRUcmFuc2FjdGlvbi5kYXRhKSAhPT0gdG9IZXgoZm9ybWF0dGVkVHJhbnNhY3Rpb24uaW5wdXQpKVxuICAgICAgICB0aHJvdyBuZXcgVHJhbnNhY3Rpb25EYXRhQW5kSW5wdXRFcnJvcih7XG4gICAgICAgICAgICBkYXRhOiBieXRlc1RvSGV4KGZvcm1hdHRlZFRyYW5zYWN0aW9uLmRhdGEpLFxuICAgICAgICAgICAgaW5wdXQ6IGJ5dGVzVG9IZXgoZm9ybWF0dGVkVHJhbnNhY3Rpb24uaW5wdXQpLFxuICAgICAgICB9KTtcbiAgICBpZiAob3B0aW9ucy5maWxsSW5wdXRBbmREYXRhKSB7XG4gICAgICAgIGlmICghaXNOdWxsaXNoKGZvcm1hdHRlZFRyYW5zYWN0aW9uLmRhdGEpKSB7XG4gICAgICAgICAgICBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5pbnB1dCA9IGZvcm1hdHRlZFRyYW5zYWN0aW9uLmRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIWlzTnVsbGlzaChmb3JtYXR0ZWRUcmFuc2FjdGlvbi5pbnB1dCkpIHtcbiAgICAgICAgICAgIGZvcm1hdHRlZFRyYW5zYWN0aW9uLmRhdGEgPSBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5pbnB1dDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIWlzTnVsbGlzaChmb3JtYXR0ZWRUcmFuc2FjdGlvbi5nYXNMaW1pdCkpIHtcbiAgICAgICAgZm9ybWF0dGVkVHJhbnNhY3Rpb24uZ2FzID0gZm9ybWF0dGVkVHJhbnNhY3Rpb24uZ2FzTGltaXQ7XG4gICAgICAgIGRlbGV0ZSBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5nYXNMaW1pdDtcbiAgICB9XG4gICAgcmV0dXJuIGZvcm1hdHRlZFRyYW5zYWN0aW9uO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9ybWF0X3RyYW5zYWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRevertReason: () => (/* binding */ getRevertReason),\n/* harmony export */   parseTransactionError: () => (/* binding */ parseTransactionError)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-abi */ \"(ssr)/./node_modules/web3-eth-abi/lib/esm/index.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n// eslint-disable-next-line import/no-cycle\n\nconst parseTransactionError = (error, contractAbi) => {\n    var _a, _b, _c, _d, _e;\n    if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.ContractExecutionError && error.cause instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.Eip838ExecutionError) {\n        if (contractAbi !== undefined) {\n            const errorsAbi = contractAbi.filter(abi => (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__.isAbiErrorFragment)(abi));\n            (0,web3_eth_abi__WEBPACK_IMPORTED_MODULE_1__.decodeContractErrorData)(errorsAbi, error.cause);\n            return {\n                reason: error.cause.message,\n                signature: (_a = error.cause.data) === null || _a === void 0 ? void 0 : _a.slice(0, 10),\n                data: (_b = error.cause.data) === null || _b === void 0 ? void 0 : _b.substring(10),\n                customErrorName: error.cause.errorName,\n                customErrorDecodedSignature: error.cause.errorSignature,\n                customErrorArguments: error.cause.errorArgs,\n            };\n        }\n        return {\n            reason: error.cause.message,\n            signature: (_c = error.cause.data) === null || _c === void 0 ? void 0 : _c.slice(0, 10),\n            data: (_d = error.cause.data) === null || _d === void 0 ? void 0 : _d.substring(10),\n        };\n    }\n    if (error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidResponseError &&\n        !Array.isArray((_e = error.cause) === null || _e === void 0 ? void 0 : _e.errors) &&\n        error.cause !== undefined) {\n        return error.cause.message;\n    }\n    throw error;\n};\n/**\n *\tReturns the revert reason generated by the EVM if the transaction were to be executed.\n *\n * @param web3Context - ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n * @returns `undefined` if no revert reason was given, a revert reason object, a revert reason string, or an `unknown` error\n */\nfunction getRevertReason(web3Context, transaction, contractAbi, returnFormat = web3Context.defaultReturnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_2__.call)(web3Context, transaction, web3Context.defaultBlock, returnFormat);\n            return undefined;\n        }\n        catch (error) {\n            return parseTransactionError(error, contractAbi);\n        }\n    });\n}\n//# sourceMappingURL=get_revert_reason.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9nZXRfcmV2ZXJ0X3JlYXNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDa0c7QUFDdkI7QUFDM0U7QUFDaUQ7QUFDMUM7QUFDUDtBQUNBLHlCQUF5QiwrREFBc0IsMkJBQTJCLDZEQUFvQjtBQUM5RjtBQUNBLHdEQUF3RCxnRUFBa0I7QUFDMUUsWUFBWSxxRUFBdUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDZEQUFvQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsa0JBQWtCO0FBQzVDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGtCQUFrQiw2REFBSTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udC1lbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9nZXRfcmV2ZXJ0X3JlYXNvbi5qcz80ODExIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBDb250cmFjdEV4ZWN1dGlvbkVycm9yLCBFaXA4MzhFeGVjdXRpb25FcnJvciwgSW52YWxpZFJlc3BvbnNlRXJyb3IsIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuaW1wb3J0IHsgZGVjb2RlQ29udHJhY3RFcnJvckRhdGEsIGlzQWJpRXJyb3JGcmFnbWVudCB9IGZyb20gJ3dlYjMtZXRoLWFiaSc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWN5Y2xlXG5pbXBvcnQgeyBjYWxsIH0gZnJvbSAnLi4vcnBjX21ldGhvZF93cmFwcGVycy5qcyc7XG5leHBvcnQgY29uc3QgcGFyc2VUcmFuc2FjdGlvbkVycm9yID0gKGVycm9yLCBjb250cmFjdEFiaSkgPT4ge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2U7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgQ29udHJhY3RFeGVjdXRpb25FcnJvciAmJiBlcnJvci5jYXVzZSBpbnN0YW5jZW9mIEVpcDgzOEV4ZWN1dGlvbkVycm9yKSB7XG4gICAgICAgIGlmIChjb250cmFjdEFiaSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCBlcnJvcnNBYmkgPSBjb250cmFjdEFiaS5maWx0ZXIoYWJpID0+IGlzQWJpRXJyb3JGcmFnbWVudChhYmkpKTtcbiAgICAgICAgICAgIGRlY29kZUNvbnRyYWN0RXJyb3JEYXRhKGVycm9yc0FiaSwgZXJyb3IuY2F1c2UpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICByZWFzb246IGVycm9yLmNhdXNlLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgc2lnbmF0dXJlOiAoX2EgPSBlcnJvci5jYXVzZS5kYXRhKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euc2xpY2UoMCwgMTApLFxuICAgICAgICAgICAgICAgIGRhdGE6IChfYiA9IGVycm9yLmNhdXNlLmRhdGEpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5zdWJzdHJpbmcoMTApLFxuICAgICAgICAgICAgICAgIGN1c3RvbUVycm9yTmFtZTogZXJyb3IuY2F1c2UuZXJyb3JOYW1lLFxuICAgICAgICAgICAgICAgIGN1c3RvbUVycm9yRGVjb2RlZFNpZ25hdHVyZTogZXJyb3IuY2F1c2UuZXJyb3JTaWduYXR1cmUsXG4gICAgICAgICAgICAgICAgY3VzdG9tRXJyb3JBcmd1bWVudHM6IGVycm9yLmNhdXNlLmVycm9yQXJncyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlYXNvbjogZXJyb3IuY2F1c2UubWVzc2FnZSxcbiAgICAgICAgICAgIHNpZ25hdHVyZTogKF9jID0gZXJyb3IuY2F1c2UuZGF0YSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLnNsaWNlKDAsIDEwKSxcbiAgICAgICAgICAgIGRhdGE6IChfZCA9IGVycm9yLmNhdXNlLmRhdGEpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5zdWJzdHJpbmcoMTApLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBJbnZhbGlkUmVzcG9uc2VFcnJvciAmJlxuICAgICAgICAhQXJyYXkuaXNBcnJheSgoX2UgPSBlcnJvci5jYXVzZSkgPT09IG51bGwgfHwgX2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9lLmVycm9ycykgJiZcbiAgICAgICAgZXJyb3IuY2F1c2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gZXJyb3IuY2F1c2UubWVzc2FnZTtcbiAgICB9XG4gICAgdGhyb3cgZXJyb3I7XG59O1xuLyoqXG4gKlx0UmV0dXJucyB0aGUgcmV2ZXJ0IHJlYXNvbiBnZW5lcmF0ZWQgYnkgdGhlIEVWTSBpZiB0aGUgdHJhbnNhY3Rpb24gd2VyZSB0byBiZSBleGVjdXRlZC5cbiAqXG4gKiBAcGFyYW0gd2ViM0NvbnRleHQgLSAoe0BsaW5rIFdlYjNDb250ZXh0fSkgV2ViMyBjb25maWd1cmF0aW9uIG9iamVjdCB0aGF0IGNvbnRhaW5zIHRoaW5ncyBzdWNoIGFzIHRoZSBwcm92aWRlciwgcmVxdWVzdCBtYW5hZ2VyLCB3YWxsZXQsIGV0Yy5cbiAqIEBwYXJhbSB0cmFuc2FjdGlvbiAtIEEgdHJhbnNhY3Rpb24gb2JqZWN0IHdoZXJlIGFsbCBwcm9wZXJ0aWVzIGFyZSBvcHRpb25hbCBleGNlcHQgYHRvYCwgaG93ZXZlciBpdCdzIHJlY29tbWVuZGVkIHRvIGluY2x1ZGUgdGhlIGBmcm9tYCBwcm9wZXJ0eSBvciBpdCBtYXkgZGVmYXVsdCB0byBgMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYCBkZXBlbmRpbmcgb24geW91ciBub2RlIG9yIHByb3ZpZGVyLlxuICogQHJldHVybnMgYHVuZGVmaW5lZGAgaWYgbm8gcmV2ZXJ0IHJlYXNvbiB3YXMgZ2l2ZW4sIGEgcmV2ZXJ0IHJlYXNvbiBvYmplY3QsIGEgcmV2ZXJ0IHJlYXNvbiBzdHJpbmcsIG9yIGFuIGB1bmtub3duYCBlcnJvclxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmV2ZXJ0UmVhc29uKHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvbiwgY29udHJhY3RBYmksIHJldHVybkZvcm1hdCA9IHdlYjNDb250ZXh0LmRlZmF1bHRSZXR1cm5Gb3JtYXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgeWllbGQgY2FsbCh3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb24sIHdlYjNDb250ZXh0LmRlZmF1bHRCbG9jaywgcmV0dXJuRm9ybWF0KTtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VUcmFuc2FjdGlvbkVycm9yKGVycm9yLCBjb250cmFjdEFiaSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldF9yZXZlcnRfcmVhc29uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js":
/*!**********************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTransactionError: () => (/* binding */ getTransactionError)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _get_revert_reason_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get_revert_reason.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n// eslint-disable-next-line import/no-cycle\n\nfunction getTransactionError(web3Context, transactionFormatted, transactionReceiptFormatted, receivedError, contractAbi, knownReason) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let _reason = knownReason;\n        if (_reason === undefined) {\n            if (receivedError !== undefined) {\n                _reason = (0,_get_revert_reason_js__WEBPACK_IMPORTED_MODULE_1__.parseTransactionError)(receivedError);\n            }\n            else if (web3Context.handleRevert && transactionFormatted !== undefined) {\n                _reason = yield (0,_get_revert_reason_js__WEBPACK_IMPORTED_MODULE_1__.getRevertReason)(web3Context, transactionFormatted, contractAbi);\n            }\n        }\n        let error;\n        if (_reason === undefined) {\n            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertedWithoutReasonError(transactionReceiptFormatted);\n        }\n        else if (typeof _reason === 'string') {\n            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertInstructionError(_reason, undefined, transactionReceiptFormatted);\n        }\n        else if (_reason.customErrorName !== undefined &&\n            _reason.customErrorDecodedSignature !== undefined &&\n            _reason.customErrorArguments !== undefined) {\n            const reasonWithCustomError = _reason;\n            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertWithCustomError(reasonWithCustomError.reason, reasonWithCustomError.customErrorName, reasonWithCustomError.customErrorDecodedSignature, reasonWithCustomError.customErrorArguments, reasonWithCustomError.signature, transactionReceiptFormatted, reasonWithCustomError.data);\n        }\n        else {\n            error = new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionRevertInstructionError(_reason.reason, _reason.signature, transactionReceiptFormatted, _reason.data);\n        }\n        return error;\n    });\n}\n//# sourceMappingURL=get_transaction_error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9nZXRfdHJhbnNhY3Rpb25fZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUMwSTtBQUMxSTtBQUNnRjtBQUN6RTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDRFQUFxQjtBQUMvQztBQUNBO0FBQ0EsZ0NBQWdDLHNFQUFlO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDhFQUFxQztBQUM3RDtBQUNBO0FBQ0Esd0JBQXdCLDBFQUFpQztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlFQUFnQztBQUN4RDtBQUNBO0FBQ0Esd0JBQXdCLDBFQUFpQztBQUN6RDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udC1lbmQvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9nZXRfdHJhbnNhY3Rpb25fZXJyb3IuanM/YzZkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25SZXZlcnRlZFdpdGhvdXRSZWFzb25FcnJvciwgVHJhbnNhY3Rpb25SZXZlcnRJbnN0cnVjdGlvbkVycm9yLCBUcmFuc2FjdGlvblJldmVydFdpdGhDdXN0b21FcnJvciwgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWN5Y2xlXG5pbXBvcnQgeyBnZXRSZXZlcnRSZWFzb24sIHBhcnNlVHJhbnNhY3Rpb25FcnJvciB9IGZyb20gJy4vZ2V0X3JldmVydF9yZWFzb24uanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFRyYW5zYWN0aW9uRXJyb3Iod2ViM0NvbnRleHQsIHRyYW5zYWN0aW9uRm9ybWF0dGVkLCB0cmFuc2FjdGlvblJlY2VpcHRGb3JtYXR0ZWQsIHJlY2VpdmVkRXJyb3IsIGNvbnRyYWN0QWJpLCBrbm93blJlYXNvbikge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGxldCBfcmVhc29uID0ga25vd25SZWFzb247XG4gICAgICAgIGlmIChfcmVhc29uID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmIChyZWNlaXZlZEVycm9yICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBfcmVhc29uID0gcGFyc2VUcmFuc2FjdGlvbkVycm9yKHJlY2VpdmVkRXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAod2ViM0NvbnRleHQuaGFuZGxlUmV2ZXJ0ICYmIHRyYW5zYWN0aW9uRm9ybWF0dGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBfcmVhc29uID0geWllbGQgZ2V0UmV2ZXJ0UmVhc29uKHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvbkZvcm1hdHRlZCwgY29udHJhY3RBYmkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGxldCBlcnJvcjtcbiAgICAgICAgaWYgKF9yZWFzb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZXJyb3IgPSBuZXcgVHJhbnNhY3Rpb25SZXZlcnRlZFdpdGhvdXRSZWFzb25FcnJvcih0cmFuc2FjdGlvblJlY2VpcHRGb3JtYXR0ZWQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBfcmVhc29uID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgZXJyb3IgPSBuZXcgVHJhbnNhY3Rpb25SZXZlcnRJbnN0cnVjdGlvbkVycm9yKF9yZWFzb24sIHVuZGVmaW5lZCwgdHJhbnNhY3Rpb25SZWNlaXB0Rm9ybWF0dGVkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChfcmVhc29uLmN1c3RvbUVycm9yTmFtZSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBfcmVhc29uLmN1c3RvbUVycm9yRGVjb2RlZFNpZ25hdHVyZSAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBfcmVhc29uLmN1c3RvbUVycm9yQXJndW1lbnRzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlYXNvbldpdGhDdXN0b21FcnJvciA9IF9yZWFzb247XG4gICAgICAgICAgICBlcnJvciA9IG5ldyBUcmFuc2FjdGlvblJldmVydFdpdGhDdXN0b21FcnJvcihyZWFzb25XaXRoQ3VzdG9tRXJyb3IucmVhc29uLCByZWFzb25XaXRoQ3VzdG9tRXJyb3IuY3VzdG9tRXJyb3JOYW1lLCByZWFzb25XaXRoQ3VzdG9tRXJyb3IuY3VzdG9tRXJyb3JEZWNvZGVkU2lnbmF0dXJlLCByZWFzb25XaXRoQ3VzdG9tRXJyb3IuY3VzdG9tRXJyb3JBcmd1bWVudHMsIHJlYXNvbldpdGhDdXN0b21FcnJvci5zaWduYXR1cmUsIHRyYW5zYWN0aW9uUmVjZWlwdEZvcm1hdHRlZCwgcmVhc29uV2l0aEN1c3RvbUVycm9yLmRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZXJyb3IgPSBuZXcgVHJhbnNhY3Rpb25SZXZlcnRJbnN0cnVjdGlvbkVycm9yKF9yZWFzb24ucmVhc29uLCBfcmVhc29uLnNpZ25hdHVyZSwgdHJhbnNhY3Rpb25SZWNlaXB0Rm9ybWF0dGVkLCBfcmVhc29uLmRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlcnJvcjtcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldF90cmFuc2FjdGlvbl9lcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js":
/*!****************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTransactionGasPricing: () => (/* binding */ getTransactionGasPricing)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/* harmony import */ var _transaction_builder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./transaction_builder.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\nfunction getEip1559GasPricing(transaction, web3Context, returnFormat) {\n    var _a, _b, _c, _d;\n    return __awaiter(this, void 0, void 0, function* () {\n        const block = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_4__.getBlock)(web3Context, web3Context.defaultBlock, false, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(block.baseFeePerGas))\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.Eip1559NotSupportedError();\n        let gasPrice;\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) && BigInt(block.baseFeePerGas) === BigInt(0)) {\n            gasPrice = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_4__.getGasPrice)(web3Context, returnFormat);\n        }\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(gasPrice)) {\n            const convertedTransactionGasPrice = (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.format)({ format: 'uint' }, (_a = transaction.gasPrice) !== null && _a !== void 0 ? _a : gasPrice, returnFormat);\n            return {\n                maxPriorityFeePerGas: convertedTransactionGasPrice,\n                maxFeePerGas: convertedTransactionGasPrice,\n            };\n        }\n        return {\n            maxPriorityFeePerGas: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.format)({ format: 'uint' }, (_b = transaction.maxPriorityFeePerGas) !== null && _b !== void 0 ? _b : web3Context.defaultMaxPriorityFeePerGas, returnFormat),\n            maxFeePerGas: (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.format)({ format: 'uint' }, ((_c = transaction.maxFeePerGas) !== null && _c !== void 0 ? _c : BigInt(block.baseFeePerGas) * BigInt(2) +\n                BigInt((_d = transaction.maxPriorityFeePerGas) !== null && _d !== void 0 ? _d : web3Context.defaultMaxPriorityFeePerGas)), returnFormat),\n        };\n    });\n}\nfunction getTransactionGasPricing(transaction, web3Context, returnFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const transactionType = (0,_transaction_builder_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionType)(transaction, web3Context);\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionType)) {\n            if (transactionType.startsWith('-'))\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.UnsupportedTransactionTypeError(transactionType);\n            // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2718.md#transactions\n            if (Number(transactionType) < 0 || Number(transactionType) > 127)\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.UnsupportedTransactionTypeError(transactionType);\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) &&\n                (transactionType === '0x0' || transactionType === '0x1'))\n                return {\n                    gasPrice: yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_4__.getGasPrice)(web3Context, returnFormat),\n                    maxPriorityFeePerGas: undefined,\n                    maxFeePerGas: undefined,\n                };\n            if (transactionType === '0x2') {\n                return Object.assign({ gasPrice: undefined }, (yield getEip1559GasPricing(transaction, web3Context, returnFormat)));\n            }\n        }\n        return undefined;\n    });\n}\n//# sourceMappingURL=get_transaction_gas_pricing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy9nZXRfdHJhbnNhY3Rpb25fZ2FzX3ByaWNpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDOEM7QUFDSDtBQUM2QztBQUNwRDtBQUNwQztBQUNrRTtBQUNsRTtBQUM4RDtBQUM5RDtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsaUVBQVEsK0NBQStDLHVEQUFlO0FBQ2xHLFlBQVkseURBQVM7QUFDckIsc0JBQXNCLGlFQUF3QjtBQUM5QztBQUNBLFlBQVkseURBQVM7QUFDckIsNkJBQTZCLG9FQUFXO0FBQ3hDO0FBQ0EsYUFBYSx5REFBUywyQkFBMkIseURBQVM7QUFDMUQsaURBQWlELGtEQUFNLEdBQUcsZ0JBQWdCO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxrREFBTSxHQUFHLGdCQUFnQjtBQUMzRCwwQkFBMEIsa0RBQU0sR0FBRyxnQkFBZ0I7QUFDbkQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQSxnQ0FBZ0MsMkVBQWtCO0FBQ2xELGFBQWEseURBQVM7QUFDdEI7QUFDQSwwQkFBMEIsd0VBQStCO0FBQ3pEO0FBQ0E7QUFDQSwwQkFBMEIsd0VBQStCO0FBQ3pELGdCQUFnQix5REFBUztBQUN6QjtBQUNBO0FBQ0Esb0NBQW9DLG9FQUFXO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHFCQUFxQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250LWVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL3V0aWxzL2dldF90cmFuc2FjdGlvbl9nYXNfcHJpY2luZy5qcz85MTM0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBFVEhfREFUQV9GT1JNQVQsIH0gZnJvbSAnd2ViMy10eXBlcyc7XG5pbXBvcnQgeyBpc051bGxpc2ggfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG5pbXBvcnQgeyBFaXAxNTU5Tm90U3VwcG9ydGVkRXJyb3IsIFVuc3VwcG9ydGVkVHJhbnNhY3Rpb25UeXBlRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyBmb3JtYXQgfSBmcm9tICd3ZWIzLXV0aWxzJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tY3ljbGVcbmltcG9ydCB7IGdldEJsb2NrLCBnZXRHYXNQcmljZSB9IGZyb20gJy4uL3JwY19tZXRob2Rfd3JhcHBlcnMuanMnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuaW1wb3J0IHsgZ2V0VHJhbnNhY3Rpb25UeXBlIH0gZnJvbSAnLi90cmFuc2FjdGlvbl9idWlsZGVyLmpzJztcbmZ1bmN0aW9uIGdldEVpcDE1NTlHYXNQcmljaW5nKHRyYW5zYWN0aW9uLCB3ZWIzQ29udGV4dCwgcmV0dXJuRm9ybWF0KSB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IGJsb2NrID0geWllbGQgZ2V0QmxvY2sod2ViM0NvbnRleHQsIHdlYjNDb250ZXh0LmRlZmF1bHRCbG9jaywgZmFsc2UsIEVUSF9EQVRBX0ZPUk1BVCk7XG4gICAgICAgIGlmIChpc051bGxpc2goYmxvY2suYmFzZUZlZVBlckdhcykpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRWlwMTU1OU5vdFN1cHBvcnRlZEVycm9yKCk7XG4gICAgICAgIGxldCBnYXNQcmljZTtcbiAgICAgICAgaWYgKGlzTnVsbGlzaCh0cmFuc2FjdGlvbi5nYXNQcmljZSkgJiYgQmlnSW50KGJsb2NrLmJhc2VGZWVQZXJHYXMpID09PSBCaWdJbnQoMCkpIHtcbiAgICAgICAgICAgIGdhc1ByaWNlID0geWllbGQgZ2V0R2FzUHJpY2Uod2ViM0NvbnRleHQsIHJldHVybkZvcm1hdCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc051bGxpc2godHJhbnNhY3Rpb24uZ2FzUHJpY2UpIHx8ICFpc051bGxpc2goZ2FzUHJpY2UpKSB7XG4gICAgICAgICAgICBjb25zdCBjb252ZXJ0ZWRUcmFuc2FjdGlvbkdhc1ByaWNlID0gZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgKF9hID0gdHJhbnNhY3Rpb24uZ2FzUHJpY2UpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGdhc1ByaWNlLCByZXR1cm5Gb3JtYXQpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhczogY29udmVydGVkVHJhbnNhY3Rpb25HYXNQcmljZSxcbiAgICAgICAgICAgICAgICBtYXhGZWVQZXJHYXM6IGNvbnZlcnRlZFRyYW5zYWN0aW9uR2FzUHJpY2UsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhczogZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgKF9iID0gdHJhbnNhY3Rpb24ubWF4UHJpb3JpdHlGZWVQZXJHYXMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHdlYjNDb250ZXh0LmRlZmF1bHRNYXhQcmlvcml0eUZlZVBlckdhcywgcmV0dXJuRm9ybWF0KSxcbiAgICAgICAgICAgIG1heEZlZVBlckdhczogZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgKChfYyA9IHRyYW5zYWN0aW9uLm1heEZlZVBlckdhcykgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogQmlnSW50KGJsb2NrLmJhc2VGZWVQZXJHYXMpICogQmlnSW50KDIpICtcbiAgICAgICAgICAgICAgICBCaWdJbnQoKF9kID0gdHJhbnNhY3Rpb24ubWF4UHJpb3JpdHlGZWVQZXJHYXMpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IHdlYjNDb250ZXh0LmRlZmF1bHRNYXhQcmlvcml0eUZlZVBlckdhcykpLCByZXR1cm5Gb3JtYXQpLFxuICAgICAgICB9O1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFRyYW5zYWN0aW9uR2FzUHJpY2luZyh0cmFuc2FjdGlvbiwgd2ViM0NvbnRleHQsIHJldHVybkZvcm1hdCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uVHlwZSA9IGdldFRyYW5zYWN0aW9uVHlwZSh0cmFuc2FjdGlvbiwgd2ViM0NvbnRleHQpO1xuICAgICAgICBpZiAoIWlzTnVsbGlzaCh0cmFuc2FjdGlvblR5cGUpKSB7XG4gICAgICAgICAgICBpZiAodHJhbnNhY3Rpb25UeXBlLnN0YXJ0c1dpdGgoJy0nKSlcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVW5zdXBwb3J0ZWRUcmFuc2FjdGlvblR5cGVFcnJvcih0cmFuc2FjdGlvblR5cGUpO1xuICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZXVtL0VJUHMvYmxvYi9tYXN0ZXIvRUlQUy9laXAtMjcxOC5tZCN0cmFuc2FjdGlvbnNcbiAgICAgICAgICAgIGlmIChOdW1iZXIodHJhbnNhY3Rpb25UeXBlKSA8IDAgfHwgTnVtYmVyKHRyYW5zYWN0aW9uVHlwZSkgPiAxMjcpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFVuc3VwcG9ydGVkVHJhbnNhY3Rpb25UeXBlRXJyb3IodHJhbnNhY3Rpb25UeXBlKTtcbiAgICAgICAgICAgIGlmIChpc051bGxpc2godHJhbnNhY3Rpb24uZ2FzUHJpY2UpICYmXG4gICAgICAgICAgICAgICAgKHRyYW5zYWN0aW9uVHlwZSA9PT0gJzB4MCcgfHwgdHJhbnNhY3Rpb25UeXBlID09PSAnMHgxJykpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgZ2FzUHJpY2U6IHlpZWxkIGdldEdhc1ByaWNlKHdlYjNDb250ZXh0LCByZXR1cm5Gb3JtYXQpLFxuICAgICAgICAgICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhczogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgICAgICBtYXhGZWVQZXJHYXM6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKHRyYW5zYWN0aW9uVHlwZSA9PT0gJzB4MicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7IGdhc1ByaWNlOiB1bmRlZmluZWQgfSwgKHlpZWxkIGdldEVpcDE1NTlHYXNQcmljaW5nKHRyYW5zYWN0aW9uLCB3ZWIzQ29udGV4dCwgcmV0dXJuRm9ybWF0KSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRfdHJhbnNhY3Rpb25fZ2FzX3ByaWNpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js":
/*!********************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareTransactionForSigning: () => (/* binding */ prepareTransactionForSigning)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-eth-accounts */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../validation.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/validation.js\");\n/* harmony import */ var _format_transaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./format_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\");\n/* harmony import */ var _transaction_builder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transaction_builder.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\nconst getEthereumjsTxDataFromTransaction = (transaction) => {\n    var _a, _b;\n    return ({\n        nonce: transaction.nonce,\n        gasPrice: transaction.gasPrice,\n        gasLimit: (_a = transaction.gasLimit) !== null && _a !== void 0 ? _a : transaction.gas,\n        to: transaction.to,\n        value: transaction.value,\n        data: (_b = transaction.data) !== null && _b !== void 0 ? _b : transaction.input,\n        type: transaction.type,\n        chainId: transaction.chainId,\n        accessList: transaction.accessList,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        maxFeePerGas: transaction.maxFeePerGas,\n    });\n};\nconst getEthereumjsTransactionOptions = (transaction, web3Context) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n    const hasTransactionSigningOptions = (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.chain) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.hardfork)) ||\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.common);\n    let common;\n    if (!hasTransactionSigningOptions) {\n        // if defaultcommon is specified, use that.\n        if (web3Context.defaultCommon) {\n            common = Object.assign({}, web3Context.defaultCommon);\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(common.hardfork))\n                common.hardfork = (_a = transaction.hardfork) !== null && _a !== void 0 ? _a : web3Context.defaultHardfork;\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(common.baseChain))\n                common.baseChain = web3Context.defaultChain;\n        }\n        else {\n            common = web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__.Common.custom({\n                name: 'custom-network',\n                chainId: (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)(transaction.chainId),\n                networkId: !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(transaction.networkId)\n                    ? (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)(transaction.networkId)\n                    : undefined,\n                defaultHardfork: (_b = transaction.hardfork) !== null && _b !== void 0 ? _b : web3Context.defaultHardfork,\n            }, {\n                baseChain: web3Context.defaultChain,\n            });\n        }\n    }\n    else {\n        const name = (_f = (_e = (_d = (_c = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _c === void 0 ? void 0 : _c.customChain) === null || _d === void 0 ? void 0 : _d.name) !== null && _e !== void 0 ? _e : transaction.chain) !== null && _f !== void 0 ? _f : 'custom-network';\n        const chainId = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)((_j = (_h = (_g = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _g === void 0 ? void 0 : _g.customChain) === null || _h === void 0 ? void 0 : _h.chainId) !== null && _j !== void 0 ? _j : transaction === null || transaction === void 0 ? void 0 : transaction.chainId);\n        const networkId = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.toNumber)((_m = (_l = (_k = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _k === void 0 ? void 0 : _k.customChain) === null || _l === void 0 ? void 0 : _l.networkId) !== null && _m !== void 0 ? _m : transaction === null || transaction === void 0 ? void 0 : transaction.networkId);\n        const defaultHardfork = (_q = (_p = (_o = transaction === null || transaction === void 0 ? void 0 : transaction.common) === null || _o === void 0 ? void 0 : _o.hardfork) !== null && _p !== void 0 ? _p : transaction === null || transaction === void 0 ? void 0 : transaction.hardfork) !== null && _q !== void 0 ? _q : web3Context.defaultHardfork;\n        const baseChain = (_t = (_s = (_r = transaction.common) === null || _r === void 0 ? void 0 : _r.baseChain) !== null && _s !== void 0 ? _s : transaction.chain) !== null && _t !== void 0 ? _t : web3Context.defaultChain;\n        if (chainId && networkId && name) {\n            common = web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__.Common.custom({\n                name,\n                chainId,\n                networkId,\n                defaultHardfork,\n            }, {\n                baseChain,\n            });\n        }\n    }\n    return { common };\n};\nconst prepareTransactionForSigning = (transaction, web3Context, privateKey, fillGasPrice = false, fillGasLimit = true) => __awaiter(void 0, void 0, void 0, function* () {\n    const populatedTransaction = (yield (0,_transaction_builder_js__WEBPACK_IMPORTED_MODULE_6__.transactionBuilder)({\n        transaction,\n        web3Context,\n        privateKey,\n        fillGasPrice,\n        fillGasLimit,\n    }));\n    const formattedTransaction = (0,_format_transaction_js__WEBPACK_IMPORTED_MODULE_5__.formatTransaction)(populatedTransaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n    (0,_validation_js__WEBPACK_IMPORTED_MODULE_4__.validateTransactionForSigning)(formattedTransaction);\n    return web3_eth_accounts__WEBPACK_IMPORTED_MODULE_2__.TransactionFactory.fromTxData(getEthereumjsTxDataFromTransaction(formattedTransaction), getEthereumjsTransactionOptions(formattedTransaction, web3Context));\n});\n//# sourceMappingURL=prepare_transaction_for_signing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/prepare_transaction_for_signing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rejectIfBlockTimeout: () => (/* binding */ rejectIfBlockTimeout)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n// eslint-disable-next-line import/no-cycle\n\nfunction resolveByPolling(web3Context, starterBlockNumber, transactionHash) {\n    const pollingInterval = web3Context.transactionPollingInterval;\n    const [intervalId, promiseToError] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.rejectIfConditionAtInterval)(() => __awaiter(this, void 0, void 0, function* () {\n        let lastBlockNumber;\n        try {\n            lastBlockNumber = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getBlockNumber)(web3Context, _constants_js__WEBPACK_IMPORTED_MODULE_2__.NUMBER_DATA_FORMAT);\n        }\n        catch (error) {\n            console.warn('An error happen while trying to get the block number', error);\n            return undefined;\n        }\n        const numberOfBlocks = lastBlockNumber - starterBlockNumber;\n        if (numberOfBlocks >= web3Context.transactionBlockTimeout) {\n            return new web3_errors__WEBPACK_IMPORTED_MODULE_1__.TransactionBlockTimeoutError({\n                starterBlockNumber,\n                numberOfBlocks,\n                transactionHash,\n            });\n        }\n        return undefined;\n    }), pollingInterval);\n    const clean = () => {\n        clearInterval(intervalId);\n    };\n    return [promiseToError, { clean }];\n}\nfunction resolveBySubscription(web3Context, starterBlockNumber, transactionHash) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        // The following variable will stay true except if the data arrived,\n        //\tor if watching started after an error had occurred.\n        let needToWatchLater = true;\n        let subscription;\n        let resourceCleaner;\n        // internal helper function\n        function revertToPolling(reject, previousError) {\n            if (previousError) {\n                console.warn('error happened at subscription. So revert to polling...', previousError);\n            }\n            resourceCleaner.clean();\n            needToWatchLater = false;\n            const [promiseToError, newResourceCleaner] = resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n            resourceCleaner.clean = newResourceCleaner.clean;\n            promiseToError.catch(error => reject(error));\n        }\n        try {\n            subscription = (yield ((_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.subscribe('newHeads')));\n            resourceCleaner = {\n                clean: () => {\n                    var _a;\n                    // Remove the subscription, if it was not removed somewhere\n                    // \telse by calling, for example, subscriptionManager.clear()\n                    if (subscription.id) {\n                        (_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.removeSubscription(subscription).then(() => {\n                            // Subscription ended successfully\n                        }).catch(() => {\n                            // An error happened while ending subscription. But no need to take any action.\n                        });\n                    }\n                },\n            };\n        }\n        catch (error) {\n            return resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n        }\n        const promiseToError = new Promise((_, reject) => {\n            try {\n                subscription.on('data', (lastBlockHeader) => {\n                    needToWatchLater = false;\n                    if (!(lastBlockHeader === null || lastBlockHeader === void 0 ? void 0 : lastBlockHeader.number)) {\n                        return;\n                    }\n                    const numberOfBlocks = Number(BigInt(lastBlockHeader.number) - BigInt(starterBlockNumber));\n                    if (numberOfBlocks >= web3Context.transactionBlockTimeout) {\n                        // Transaction Block Timeout is known to be reached by subscribing to new heads\n                        reject(new web3_errors__WEBPACK_IMPORTED_MODULE_1__.TransactionBlockTimeoutError({\n                            starterBlockNumber,\n                            numberOfBlocks,\n                            transactionHash,\n                        }));\n                    }\n                });\n                subscription.on('error', error => {\n                    revertToPolling(reject, error);\n                });\n            }\n            catch (error) {\n                revertToPolling(reject, error);\n            }\n            // Fallback to polling if tx receipt didn't arrived in \"blockHeaderTimeout\" [10 seconds]\n            setTimeout(() => {\n                if (needToWatchLater) {\n                    revertToPolling(reject);\n                }\n            }, web3Context.blockHeaderTimeout * 1000);\n        });\n        return [promiseToError, resourceCleaner];\n    });\n}\n/* TODO: After merge, there will be constant block mining time (exactly 12 second each block, except slot missed that currently happens in <1% of slots. ) so we can optimize following function\nfor POS NWs, we can skip checking getBlockNumber(); after interval and calculate only based on time  that certain num of blocked are mined after that for internal double check, can do one getBlockNumber() call and timeout.\n*/\nfunction rejectIfBlockTimeout(web3Context, transactionHash) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        const { provider } = web3Context.requestManager;\n        let callingRes;\n        const starterBlockNumber = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getBlockNumber)(web3Context, _constants_js__WEBPACK_IMPORTED_MODULE_2__.NUMBER_DATA_FORMAT);\n        // TODO: once https://github.com/web3/web3.js/issues/5521 is implemented, remove checking for `enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout`\n        if (((_b = (_a = provider).supportsSubscriptions) === null || _b === void 0 ? void 0 : _b.call(_a)) &&\n            web3Context.enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout) {\n            callingRes = yield resolveBySubscription(web3Context, starterBlockNumber, transactionHash);\n        }\n        else {\n            callingRes = resolveByPolling(web3Context, starterBlockNumber, transactionHash);\n        }\n        return callingRes;\n    });\n}\n//# sourceMappingURL=reject_if_block_timeout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js":
/*!***************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SendTxHelper: () => (/* binding */ SendTxHelper)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-rpc-methods */ \"(ssr)/./node_modules/web3-rpc-methods/lib/esm/index.js\");\n/* harmony import */ var _get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./get_transaction_gas_pricing.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js\");\n/* harmony import */ var _try_send_transaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./try_send_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js\");\n/* harmony import */ var _watch_transaction_for_confirmations_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./watch_transaction_for_confirmations.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/* harmony import */ var _get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./get_transaction_error.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_error.js\");\n/* harmony import */ var _get_revert_reason_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./get_revert_reason.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/get_revert_reason.js\");\n/* harmony import */ var _decoding_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./decoding.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/decoding.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n\nclass SendTxHelper {\n    constructor({ options, web3Context, promiEvent, returnFormat, }) {\n        this.options = {\n            checkRevertBeforeSending: true,\n        };\n        this.options = options;\n        this.web3Context = web3Context;\n        this.promiEvent = promiEvent;\n        this.returnFormat = returnFormat;\n    }\n    getReceiptWithEvents(data) {\n        var _a, _b;\n        const result = Object.assign({}, (data !== null && data !== void 0 ? data : {}));\n        if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.contractAbi) && result.logs && result.logs.length > 0) {\n            result.events = {};\n            for (const log of result.logs) {\n                const event = (0,_decoding_js__WEBPACK_IMPORTED_MODULE_10__.decodeEventABI)(_constants_js__WEBPACK_IMPORTED_MODULE_7__.ALL_EVENTS_ABI, log, (_b = this.options) === null || _b === void 0 ? void 0 : _b.contractAbi, this.returnFormat);\n                if (event.event) {\n                    result.events[event.event] = event;\n                }\n            }\n        }\n        return result;\n    }\n    checkRevertBeforeSending(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.options.checkRevertBeforeSending !== false) {\n                let formatTx = tx;\n                if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(tx.data) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(tx.input) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(tx.gas)) { // eth.call runs into error if data isnt filled and gas is not defined, its a simple transaction so we fill it with 21000\n                    formatTx = Object.assign(Object.assign({}, tx), { gas: 21000 });\n                }\n                const reason = yield (0,_get_revert_reason_js__WEBPACK_IMPORTED_MODULE_9__.getRevertReason)(this.web3Context, formatTx, this.options.contractAbi);\n                if (reason !== undefined) {\n                    throw yield (0,_get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__.getTransactionError)(this.web3Context, tx, undefined, undefined, this.options.contractAbi, reason);\n                }\n            }\n        });\n    }\n    emitSending(tx) {\n        if (this.promiEvent.listenerCount('sending') > 0) {\n            this.promiEvent.emit('sending', tx);\n        }\n    }\n    populateGasPrice({ transactionFormatted, transaction, }) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            let result = transactionFormatted;\n            if (!((_a = this.options) === null || _a === void 0 ? void 0 : _a.ignoreGasPricing) &&\n                (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionFormatted.gasPrice) &&\n                ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas) ||\n                    (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas))) {\n                result = Object.assign(Object.assign({}, transactionFormatted), (yield (0,_get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_4__.getTransactionGasPricing)(transactionFormatted, this.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT)));\n            }\n            return result;\n        });\n    }\n    signAndSend({ wallet, tx, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (wallet) {\n                const signedTransaction = yield wallet.signTransaction(tx);\n                return (0,_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_5__.trySendTransaction)(this.web3Context, () => __awaiter(this, void 0, void 0, function* () {\n                    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_3__.ethRpcMethods.sendRawTransaction(this.web3Context.requestManager, signedTransaction.rawTransaction);\n                }), signedTransaction.transactionHash);\n            }\n            return (0,_try_send_transaction_js__WEBPACK_IMPORTED_MODULE_5__.trySendTransaction)(this.web3Context, () => __awaiter(this, void 0, void 0, function* () {\n                return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_3__.ethRpcMethods.sendTransaction(this.web3Context.requestManager, tx);\n            }));\n        });\n    }\n    emitSent(tx) {\n        if (this.promiEvent.listenerCount('sent') > 0) {\n            this.promiEvent.emit('sent', tx);\n        }\n    }\n    emitTransactionHash(hash) {\n        if (this.promiEvent.listenerCount('transactionHash') > 0) {\n            this.promiEvent.emit('transactionHash', hash);\n        }\n    }\n    emitReceipt(receipt) {\n        if (this.promiEvent.listenerCount('receipt') > 0) {\n            this.promiEvent.emit('receipt', \n            // @ts-expect-error unknown type fix\n            receipt);\n        }\n    }\n    handleError({ error, tx }) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            let _error = error;\n            if (_error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.ContractExecutionError && this.web3Context.handleRevert) {\n                _error = yield (0,_get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__.getTransactionError)(this.web3Context, tx, undefined, undefined, (_a = this.options) === null || _a === void 0 ? void 0 : _a.contractAbi);\n            }\n            if ((_error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidResponseError ||\n                _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.ContractExecutionError ||\n                _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionRevertWithCustomError ||\n                _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionRevertedWithoutReasonError ||\n                _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionRevertInstructionError ||\n                _error instanceof web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionPollingTimeoutError) &&\n                this.promiEvent.listenerCount('error') > 0) {\n                this.promiEvent.emit('error', _error);\n            }\n            return _error;\n        });\n    }\n    emitConfirmation({ receipt, transactionHash, customTransactionReceiptSchema, }) {\n        if (this.promiEvent.listenerCount('confirmation') > 0) {\n            (0,_watch_transaction_for_confirmations_js__WEBPACK_IMPORTED_MODULE_6__.watchTransactionForConfirmations)(this.web3Context, this.promiEvent, receipt, transactionHash, this.returnFormat, customTransactionReceiptSchema);\n        }\n    }\n    handleResolve({ receipt, tx }) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.transactionResolver) {\n                return (_b = this.options) === null || _b === void 0 ? void 0 : _b.transactionResolver(receipt);\n            }\n            if (receipt.status === BigInt(0)) {\n                const error = yield (0,_get_transaction_error_js__WEBPACK_IMPORTED_MODULE_8__.getTransactionError)(this.web3Context, tx, \n                // @ts-expect-error unknown type fix\n                receipt, undefined, (_c = this.options) === null || _c === void 0 ? void 0 : _c.contractAbi);\n                if (this.promiEvent.listenerCount('error') > 0) {\n                    this.promiEvent.emit('error', error);\n                }\n                throw error;\n            }\n            else {\n                return receipt;\n            }\n        });\n    }\n}\n//# sourceMappingURL=send_tx_helper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/send_tx_helper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/transaction_builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultTransactionBuilder: () => (/* binding */ defaultTransactionBuilder),\n/* harmony export */   getTransactionFromOrToAttr: () => (/* binding */ getTransactionFromOrToAttr),\n/* harmony export */   getTransactionNonce: () => (/* binding */ getTransactionNonce),\n/* harmony export */   getTransactionType: () => (/* binding */ getTransactionType),\n/* harmony export */   transactionBuilder: () => (/* binding */ transactionBuilder)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth-accounts */ \"(ssr)/./node_modules/web3-eth-accounts/lib/esm/index.js\");\n/* harmony import */ var web3_net__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-net */ \"(ssr)/./node_modules/web3-net/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/constants.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/* harmony import */ var _detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./detect_transaction_type.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/detect_transaction_type.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./get_transaction_gas_pricing.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/get_transaction_gas_pricing.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n// eslint-disable-next-line import/no-cycle\n\n\n\n// eslint-disable-next-line import/no-cycle\n\nconst getTransactionFromOrToAttr = (attr, web3Context, transaction, privateKey) => {\n    if (transaction !== undefined && attr in transaction && transaction[attr] !== undefined) {\n        if (typeof transaction[attr] === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(transaction[attr])) {\n            return transaction[attr];\n        }\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(transaction[attr]) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNumber)(transaction[attr])) {\n            if (web3Context.wallet) {\n                const account = web3Context.wallet.get((0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({ format: 'uint' }, transaction[attr], _constants_js__WEBPACK_IMPORTED_MODULE_6__.NUMBER_DATA_FORMAT));\n                if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(account)) {\n                    return account.address;\n                }\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.LocalWalletNotAvailableError();\n            }\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.LocalWalletNotAvailableError();\n        }\n        else {\n            throw attr === 'from'\n                ? new web3_errors__WEBPACK_IMPORTED_MODULE_4__.InvalidTransactionWithSender(transaction.from)\n                : // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                    new web3_errors__WEBPACK_IMPORTED_MODULE_4__.InvalidTransactionWithReceiver(transaction.to);\n        }\n    }\n    if (attr === 'from') {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(privateKey))\n            return (0,web3_eth_accounts__WEBPACK_IMPORTED_MODULE_1__.privateKeyToAddress)(privateKey);\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(web3Context.defaultAccount))\n            return web3Context.defaultAccount;\n    }\n    return undefined;\n};\nconst getTransactionNonce = (web3Context, address, returnFormat = web3Context.defaultReturnFormat) => __awaiter(void 0, void 0, void 0, function* () {\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(address)) {\n        // TODO if (web3.eth.accounts.wallet) use address from local wallet\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.UnableToPopulateNonceError();\n    }\n    return (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getTransactionCount)(web3Context, address, web3Context.defaultBlock, returnFormat);\n});\nconst getTransactionType = (transaction, web3Context) => {\n    const inferredType = (0,_detect_transaction_type_js__WEBPACK_IMPORTED_MODULE_8__.detectTransactionType)(transaction, web3Context);\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(inferredType))\n        return inferredType;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(web3Context.defaultTransactionType))\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({ format: 'uint' }, web3Context.defaultTransactionType, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n    return undefined;\n};\n// Keep in mind that the order the properties of populateTransaction get populated matters\n// as some of the properties are dependent on others\nfunction defaultTransactionBuilder(options) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        let populatedTransaction = (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_9__.transactionSchema, options.transaction, options.web3Context.defaultReturnFormat);\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.from)) {\n            populatedTransaction.from = getTransactionFromOrToAttr('from', options.web3Context, undefined, options.privateKey);\n        }\n        // TODO: Debug why need to typecase getTransactionNonce\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.nonce)) {\n            populatedTransaction.nonce = yield getTransactionNonce(options.web3Context, populatedTransaction.from, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.value)) {\n            populatedTransaction.value = '0x0';\n        }\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.data)) {\n            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.input) &&\n                populatedTransaction.data !== populatedTransaction.input)\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_4__.TransactionDataAndInputError({\n                    data: (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(populatedTransaction.data),\n                    input: (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)(populatedTransaction.input),\n                });\n            if (!populatedTransaction.data.startsWith('0x'))\n                populatedTransaction.data = `0x${populatedTransaction.data}`;\n        }\n        else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.input)) {\n            if (!populatedTransaction.input.startsWith('0x'))\n                populatedTransaction.input = `0x${populatedTransaction.input}`;\n        }\n        else {\n            populatedTransaction.input = '0x';\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.common)) {\n            if (options.web3Context.defaultCommon) {\n                const common = options.web3Context.defaultCommon;\n                const chainId = common.customChain.chainId;\n                const networkId = common.customChain.networkId;\n                const name = common.customChain.name;\n                populatedTransaction.common = Object.assign(Object.assign({}, common), { customChain: { chainId, networkId, name } });\n            }\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.chain)) {\n                populatedTransaction.chain = options.web3Context.defaultChain;\n            }\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.hardfork)) {\n                populatedTransaction.hardfork = options.web3Context.defaultHardfork;\n            }\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.chainId) &&\n            (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)((_a = populatedTransaction.common) === null || _a === void 0 ? void 0 : _a.customChain.chainId)) {\n            populatedTransaction.chainId = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.getChainId)(options.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.networkId)) {\n            populatedTransaction.networkId =\n                (_b = options.web3Context.defaultNetworkId) !== null && _b !== void 0 ? _b : (yield (0,web3_net__WEBPACK_IMPORTED_MODULE_2__.getId)(options.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT));\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gasLimit) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gas)) {\n            populatedTransaction.gasLimit = populatedTransaction.gas;\n        }\n        populatedTransaction.type = getTransactionType(populatedTransaction, options.web3Context);\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.accessList) &&\n            (populatedTransaction.type === '0x1' || populatedTransaction.type === '0x2')) {\n            populatedTransaction.accessList = [];\n        }\n        if (options.fillGasPrice)\n            populatedTransaction = Object.assign(Object.assign({}, populatedTransaction), (yield (0,_get_transaction_gas_pricing_js__WEBPACK_IMPORTED_MODULE_10__.getTransactionGasPricing)(populatedTransaction, options.web3Context, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT)));\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gas) &&\n            (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(populatedTransaction.gasLimit) &&\n            options.fillGasLimit) {\n            const fillGasLimit = yield (0,_rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_7__.estimateGas)(options.web3Context, populatedTransaction, 'latest', web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n            populatedTransaction = Object.assign(Object.assign({}, populatedTransaction), { gas: (0,web3_utils__WEBPACK_IMPORTED_MODULE_5__.format)({ format: 'uint' }, fillGasLimit, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT) });\n        }\n        return populatedTransaction;\n    });\n}\nconst transactionBuilder = (options) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    return ((_a = options.web3Context.transactionBuilder) !== null && _a !== void 0 ? _a : defaultTransactionBuilder)(Object.assign(Object.assign({}, options), { transaction: options.transaction }));\n});\n//# sourceMappingURL=transaction_builder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/transaction_builder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js":
/*!*********************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trySendTransaction: () => (/* binding */ trySendTransaction)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reject_if_block_timeout.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n// eslint-disable-next-line import/no-cycle\n\n/**\n * An internal function to send a transaction or throws if sending did not finish during the timeout during the blocks-timeout.\n * @param web3Context - the context to read the configurations from\n * @param sendTransactionFunc - the function that will send the transaction (could be sendTransaction or sendRawTransaction)\n * @param transactionHash - to be used inside the exception message if there will be any exceptions.\n * @returns the Promise<string> returned by the `sendTransactionFunc`.\n */\nfunction trySendTransaction(web3Context, sendTransactionFunc, transactionHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [timeoutId, rejectOnTimeout] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.rejectIfTimeout)(web3Context.transactionSendTimeout, new web3_errors__WEBPACK_IMPORTED_MODULE_1__.TransactionSendTimeoutError({\n            numberOfSeconds: web3Context.transactionSendTimeout / 1000,\n            transactionHash,\n        }));\n        const [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = yield (0,_reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__.rejectIfBlockTimeout)(web3Context, transactionHash);\n        try {\n            // If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n            return yield Promise.race([\n                sendTransactionFunc(),\n                rejectOnTimeout,\n                rejectOnBlockTimeout, // this will throw an error on Transaction Block Timeout\n            ]);\n        }\n        finally {\n            clearTimeout(timeoutId);\n            blockTimeoutResourceCleaner.clean();\n        }\n    });\n}\n//# sourceMappingURL=try_send_transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy90cnlfc2VuZF90cmFuc2FjdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQzZDO0FBQ2E7QUFDMUQ7QUFDb0U7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsNkNBQTZDLDJEQUFlLHlDQUF5QyxvRUFBMkI7QUFDaEk7QUFDQTtBQUNBLFNBQVM7QUFDVCwwRUFBMEUsaUZBQW9CO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnQtZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoL2xpYi9lc20vdXRpbHMvdHJ5X3NlbmRfdHJhbnNhY3Rpb24uanM/ZjViMiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IHJlamVjdElmVGltZW91dCB9IGZyb20gJ3dlYjMtdXRpbHMnO1xuaW1wb3J0IHsgVHJhbnNhY3Rpb25TZW5kVGltZW91dEVycm9yIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby1jeWNsZVxuaW1wb3J0IHsgcmVqZWN0SWZCbG9ja1RpbWVvdXQgfSBmcm9tICcuL3JlamVjdF9pZl9ibG9ja190aW1lb3V0LmpzJztcbi8qKlxuICogQW4gaW50ZXJuYWwgZnVuY3Rpb24gdG8gc2VuZCBhIHRyYW5zYWN0aW9uIG9yIHRocm93cyBpZiBzZW5kaW5nIGRpZCBub3QgZmluaXNoIGR1cmluZyB0aGUgdGltZW91dCBkdXJpbmcgdGhlIGJsb2Nrcy10aW1lb3V0LlxuICogQHBhcmFtIHdlYjNDb250ZXh0IC0gdGhlIGNvbnRleHQgdG8gcmVhZCB0aGUgY29uZmlndXJhdGlvbnMgZnJvbVxuICogQHBhcmFtIHNlbmRUcmFuc2FjdGlvbkZ1bmMgLSB0aGUgZnVuY3Rpb24gdGhhdCB3aWxsIHNlbmQgdGhlIHRyYW5zYWN0aW9uIChjb3VsZCBiZSBzZW5kVHJhbnNhY3Rpb24gb3Igc2VuZFJhd1RyYW5zYWN0aW9uKVxuICogQHBhcmFtIHRyYW5zYWN0aW9uSGFzaCAtIHRvIGJlIHVzZWQgaW5zaWRlIHRoZSBleGNlcHRpb24gbWVzc2FnZSBpZiB0aGVyZSB3aWxsIGJlIGFueSBleGNlcHRpb25zLlxuICogQHJldHVybnMgdGhlIFByb21pc2U8c3RyaW5nPiByZXR1cm5lZCBieSB0aGUgYHNlbmRUcmFuc2FjdGlvbkZ1bmNgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdHJ5U2VuZFRyYW5zYWN0aW9uKHdlYjNDb250ZXh0LCBzZW5kVHJhbnNhY3Rpb25GdW5jLCB0cmFuc2FjdGlvbkhhc2gpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBbdGltZW91dElkLCByZWplY3RPblRpbWVvdXRdID0gcmVqZWN0SWZUaW1lb3V0KHdlYjNDb250ZXh0LnRyYW5zYWN0aW9uU2VuZFRpbWVvdXQsIG5ldyBUcmFuc2FjdGlvblNlbmRUaW1lb3V0RXJyb3Ioe1xuICAgICAgICAgICAgbnVtYmVyT2ZTZWNvbmRzOiB3ZWIzQ29udGV4dC50cmFuc2FjdGlvblNlbmRUaW1lb3V0IC8gMTAwMCxcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uSGFzaCxcbiAgICAgICAgfSkpO1xuICAgICAgICBjb25zdCBbcmVqZWN0T25CbG9ja1RpbWVvdXQsIGJsb2NrVGltZW91dFJlc291cmNlQ2xlYW5lcl0gPSB5aWVsZCByZWplY3RJZkJsb2NrVGltZW91dCh3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb25IYXNoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIElmIGFuIGVycm9yIGhhcHBlbmVkIGhlcmUsIGRvIG5vdCBjYXRjaCBpdCwganVzdCBjbGVhciB0aGUgcmVzb3VyY2VzIGJlZm9yZSByYWlzaW5nIGl0IHRvIHRoZSBjYWxsZXIgZnVuY3Rpb24uXG4gICAgICAgICAgICByZXR1cm4geWllbGQgUHJvbWlzZS5yYWNlKFtcbiAgICAgICAgICAgICAgICBzZW5kVHJhbnNhY3Rpb25GdW5jKCksXG4gICAgICAgICAgICAgICAgcmVqZWN0T25UaW1lb3V0LFxuICAgICAgICAgICAgICAgIHJlamVjdE9uQmxvY2tUaW1lb3V0LCAvLyB0aGlzIHdpbGwgdGhyb3cgYW4gZXJyb3Igb24gVHJhbnNhY3Rpb24gQmxvY2sgVGltZW91dFxuICAgICAgICAgICAgXSk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICAgICAgICAgIGJsb2NrVGltZW91dFJlc291cmNlQ2xlYW5lci5jbGVhbigpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cnlfc2VuZF90cmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/try_send_transaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   waitForTransactionReceipt: () => (/* binding */ waitForTransactionReceipt)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reject_if_block_timeout.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/reject_if_block_timeout.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\n// eslint-disable-next-line import/no-cycle\n\nfunction waitForTransactionReceipt(web3Context, transactionHash, returnFormat, customGetTransactionReceipt) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const pollingInterval = (_a = web3Context.transactionReceiptPollingInterval) !== null && _a !== void 0 ? _a : web3Context.transactionPollingInterval;\n        const [awaitableTransactionReceipt, IntervalId] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.pollTillDefinedAndReturnIntervalId)(() => __awaiter(this, void 0, void 0, function* () {\n            try {\n                return (customGetTransactionReceipt !== null && customGetTransactionReceipt !== void 0 ? customGetTransactionReceipt : _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_3__.getTransactionReceipt)(web3Context, transactionHash, returnFormat);\n            }\n            catch (error) {\n                console.warn('An error happen while trying to get the transaction receipt', error);\n                return undefined;\n            }\n        }), pollingInterval);\n        const [timeoutId, rejectOnTimeout] = (0,web3_utils__WEBPACK_IMPORTED_MODULE_1__.rejectIfTimeout)(web3Context.transactionPollingTimeout, new web3_errors__WEBPACK_IMPORTED_MODULE_0__.TransactionPollingTimeoutError({\n            numberOfSeconds: web3Context.transactionPollingTimeout / 1000,\n            transactionHash,\n        }));\n        const [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = yield (0,_reject_if_block_timeout_js__WEBPACK_IMPORTED_MODULE_2__.rejectIfBlockTimeout)(web3Context, transactionHash);\n        try {\n            // If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n            return yield Promise.race([\n                awaitableTransactionReceipt,\n                rejectOnTimeout,\n                rejectOnBlockTimeout, // this will throw an error on Transaction Block Timeout\n            ]);\n        }\n        finally {\n            if (timeoutId)\n                clearTimeout(timeoutId);\n            if (IntervalId)\n                clearInterval(IntervalId);\n            blockTimeoutResourceCleaner.clean();\n        }\n    });\n}\n//# sourceMappingURL=wait_for_transaction_receipt.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy93YWl0X2Zvcl90cmFuc2FjdGlvbl9yZWNlaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUM2RDtBQUM3RDtBQUNpRjtBQUNqRjtBQUNvRTtBQUNwRTtBQUNrRTtBQUMzRDtBQUNQO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCw4RUFBa0M7QUFDNUY7QUFDQSx1SUFBdUksMEVBQXFCO0FBQzVKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsNkNBQTZDLDJEQUFlLDRDQUE0Qyx1RUFBOEI7QUFDdEk7QUFDQTtBQUNBLFNBQVM7QUFDVCwwRUFBMEUsaUZBQW9CO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnQtZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoL2xpYi9lc20vdXRpbHMvd2FpdF9mb3JfdHJhbnNhY3Rpb25fcmVjZWlwdC5qcz9kOWU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBUcmFuc2FjdGlvblBvbGxpbmdUaW1lb3V0RXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWN5Y2xlXG5pbXBvcnQgeyBwb2xsVGlsbERlZmluZWRBbmRSZXR1cm5JbnRlcnZhbElkLCByZWplY3RJZlRpbWVvdXQgfSBmcm9tICd3ZWIzLXV0aWxzJztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tY3ljbGVcbmltcG9ydCB7IHJlamVjdElmQmxvY2tUaW1lb3V0IH0gZnJvbSAnLi9yZWplY3RfaWZfYmxvY2tfdGltZW91dC5qcyc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLWN5Y2xlXG5pbXBvcnQgeyBnZXRUcmFuc2FjdGlvblJlY2VpcHQgfSBmcm9tICcuLi9ycGNfbWV0aG9kX3dyYXBwZXJzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiB3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0KHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvbkhhc2gsIHJldHVybkZvcm1hdCwgY3VzdG9tR2V0VHJhbnNhY3Rpb25SZWNlaXB0KSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IHBvbGxpbmdJbnRlcnZhbCA9IChfYSA9IHdlYjNDb250ZXh0LnRyYW5zYWN0aW9uUmVjZWlwdFBvbGxpbmdJbnRlcnZhbCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogd2ViM0NvbnRleHQudHJhbnNhY3Rpb25Qb2xsaW5nSW50ZXJ2YWw7XG4gICAgICAgIGNvbnN0IFthd2FpdGFibGVUcmFuc2FjdGlvblJlY2VpcHQsIEludGVydmFsSWRdID0gcG9sbFRpbGxEZWZpbmVkQW5kUmV0dXJuSW50ZXJ2YWxJZCgoKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJldHVybiAoY3VzdG9tR2V0VHJhbnNhY3Rpb25SZWNlaXB0ICE9PSBudWxsICYmIGN1c3RvbUdldFRyYW5zYWN0aW9uUmVjZWlwdCAhPT0gdm9pZCAwID8gY3VzdG9tR2V0VHJhbnNhY3Rpb25SZWNlaXB0IDogZ2V0VHJhbnNhY3Rpb25SZWNlaXB0KSh3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb25IYXNoLCByZXR1cm5Gb3JtYXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdBbiBlcnJvciBoYXBwZW4gd2hpbGUgdHJ5aW5nIHRvIGdldCB0aGUgdHJhbnNhY3Rpb24gcmVjZWlwdCcsIGVycm9yKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSwgcG9sbGluZ0ludGVydmFsKTtcbiAgICAgICAgY29uc3QgW3RpbWVvdXRJZCwgcmVqZWN0T25UaW1lb3V0XSA9IHJlamVjdElmVGltZW91dCh3ZWIzQ29udGV4dC50cmFuc2FjdGlvblBvbGxpbmdUaW1lb3V0LCBuZXcgVHJhbnNhY3Rpb25Qb2xsaW5nVGltZW91dEVycm9yKHtcbiAgICAgICAgICAgIG51bWJlck9mU2Vjb25kczogd2ViM0NvbnRleHQudHJhbnNhY3Rpb25Qb2xsaW5nVGltZW91dCAvIDEwMDAsXG4gICAgICAgICAgICB0cmFuc2FjdGlvbkhhc2gsXG4gICAgICAgIH0pKTtcbiAgICAgICAgY29uc3QgW3JlamVjdE9uQmxvY2tUaW1lb3V0LCBibG9ja1RpbWVvdXRSZXNvdXJjZUNsZWFuZXJdID0geWllbGQgcmVqZWN0SWZCbG9ja1RpbWVvdXQod2ViM0NvbnRleHQsIHRyYW5zYWN0aW9uSGFzaCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBJZiBhbiBlcnJvciBoYXBwZW5lZCBoZXJlLCBkbyBub3QgY2F0Y2ggaXQsIGp1c3QgY2xlYXIgdGhlIHJlc291cmNlcyBiZWZvcmUgcmFpc2luZyBpdCB0byB0aGUgY2FsbGVyIGZ1bmN0aW9uLlxuICAgICAgICAgICAgcmV0dXJuIHlpZWxkIFByb21pc2UucmFjZShbXG4gICAgICAgICAgICAgICAgYXdhaXRhYmxlVHJhbnNhY3Rpb25SZWNlaXB0LFxuICAgICAgICAgICAgICAgIHJlamVjdE9uVGltZW91dCxcbiAgICAgICAgICAgICAgICByZWplY3RPbkJsb2NrVGltZW91dCwgLy8gdGhpcyB3aWxsIHRocm93IGFuIGVycm9yIG9uIFRyYW5zYWN0aW9uIEJsb2NrIFRpbWVvdXRcbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgaWYgKHRpbWVvdXRJZClcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICAgICAgICAgIGlmIChJbnRlcnZhbElkKVxuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoSW50ZXJ2YWxJZCk7XG4gICAgICAgICAgICBibG9ja1RpbWVvdXRSZXNvdXJjZUNsZWFuZXIuY2xlYW4oKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2FpdF9mb3JfdHJhbnNhY3Rpb25fcmVjZWlwdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/wait_for_transaction_receipt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchTransactionByPolling: () => (/* binding */ watchTransactionByPolling)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-rpc-methods */ \"(ssr)/./node_modules/web3-rpc-methods/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n/**\n * This function watches a Transaction by subscribing to new heads.\n * It is used by `watchTransactionForConfirmations`, in case the provider does not support subscription.\n * And it is also used by `watchTransactionBySubscription`, as a fallback, if the subscription failed for any reason.\n */\nconst watchTransactionByPolling = ({ web3Context, transactionReceipt, transactionPromiEvent, customTransactionReceiptSchema, returnFormat, }) => {\n    var _a;\n    // Having a transactionReceipt means that the transaction has already been included\n    // in at least one block, so we start with 1\n    let confirmations = 1;\n    const intervalId = setInterval(() => {\n        (() => __awaiter(void 0, void 0, void 0, function* () {\n            if (confirmations >= web3Context.transactionConfirmationBlocks)\n                clearInterval(intervalId);\n            const nextBlock = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_1__.ethRpcMethods.getBlockByNumber(web3Context.requestManager, (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.numberToHex)(BigInt(transactionReceipt.blockNumber) + BigInt(confirmations)), false);\n            if (nextBlock === null || nextBlock === void 0 ? void 0 : nextBlock.hash) {\n                confirmations += 1;\n                transactionPromiEvent.emit('confirmation', {\n                    confirmations: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, confirmations, returnFormat),\n                    receipt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(customTransactionReceiptSchema !== null && customTransactionReceiptSchema !== void 0 ? customTransactionReceiptSchema : _schemas_js__WEBPACK_IMPORTED_MODULE_2__.transactionReceiptSchema, transactionReceipt, returnFormat),\n                    latestBlockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes32' }, nextBlock.hash, returnFormat),\n                });\n            }\n        }))();\n    }, (_a = web3Context.transactionReceiptPollingInterval) !== null && _a !== void 0 ? _a : web3Context.transactionPollingInterval);\n};\n//# sourceMappingURL=watch_transaction_by_polling.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy93YXRjaF90cmFuc2FjdGlvbl9ieV9wb2xsaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDaUQ7QUFDQTtBQUNRO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxxQ0FBcUMsdUdBQXVHO0FBQ25KO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNEVBQThCLDZCQUE2Qix1REFBVztBQUMxRztBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0RBQU0sR0FBRyxnQkFBZ0I7QUFDNUQsNkJBQTZCLGtEQUFNLHlIQUF5SCxpRUFBd0I7QUFDcEwscUNBQXFDLGtEQUFNLEdBQUcsbUJBQW1CO0FBQ2pFLGlCQUFpQjtBQUNqQjtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250LWVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL3V0aWxzL3dhdGNoX3RyYW5zYWN0aW9uX2J5X3BvbGxpbmcuanM/MzRlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IGZvcm1hdCwgbnVtYmVyVG9IZXggfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IGV0aFJwY01ldGhvZHMgfSBmcm9tICd3ZWIzLXJwYy1tZXRob2RzJztcbmltcG9ydCB7IHRyYW5zYWN0aW9uUmVjZWlwdFNjaGVtYSB9IGZyb20gJy4uL3NjaGVtYXMuanMnO1xuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIHdhdGNoZXMgYSBUcmFuc2FjdGlvbiBieSBzdWJzY3JpYmluZyB0byBuZXcgaGVhZHMuXG4gKiBJdCBpcyB1c2VkIGJ5IGB3YXRjaFRyYW5zYWN0aW9uRm9yQ29uZmlybWF0aW9uc2AsIGluIGNhc2UgdGhlIHByb3ZpZGVyIGRvZXMgbm90IHN1cHBvcnQgc3Vic2NyaXB0aW9uLlxuICogQW5kIGl0IGlzIGFsc28gdXNlZCBieSBgd2F0Y2hUcmFuc2FjdGlvbkJ5U3Vic2NyaXB0aW9uYCwgYXMgYSBmYWxsYmFjaywgaWYgdGhlIHN1YnNjcmlwdGlvbiBmYWlsZWQgZm9yIGFueSByZWFzb24uXG4gKi9cbmV4cG9ydCBjb25zdCB3YXRjaFRyYW5zYWN0aW9uQnlQb2xsaW5nID0gKHsgd2ViM0NvbnRleHQsIHRyYW5zYWN0aW9uUmVjZWlwdCwgdHJhbnNhY3Rpb25Qcm9taUV2ZW50LCBjdXN0b21UcmFuc2FjdGlvblJlY2VpcHRTY2hlbWEsIHJldHVybkZvcm1hdCwgfSkgPT4ge1xuICAgIHZhciBfYTtcbiAgICAvLyBIYXZpbmcgYSB0cmFuc2FjdGlvblJlY2VpcHQgbWVhbnMgdGhhdCB0aGUgdHJhbnNhY3Rpb24gaGFzIGFscmVhZHkgYmVlbiBpbmNsdWRlZFxuICAgIC8vIGluIGF0IGxlYXN0IG9uZSBibG9jaywgc28gd2Ugc3RhcnQgd2l0aCAxXG4gICAgbGV0IGNvbmZpcm1hdGlvbnMgPSAxO1xuICAgIGNvbnN0IGludGVydmFsSWQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICgoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmIChjb25maXJtYXRpb25zID49IHdlYjNDb250ZXh0LnRyYW5zYWN0aW9uQ29uZmlybWF0aW9uQmxvY2tzKVxuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZCk7XG4gICAgICAgICAgICBjb25zdCBuZXh0QmxvY2sgPSB5aWVsZCBldGhScGNNZXRob2RzLmdldEJsb2NrQnlOdW1iZXIod2ViM0NvbnRleHQucmVxdWVzdE1hbmFnZXIsIG51bWJlclRvSGV4KEJpZ0ludCh0cmFuc2FjdGlvblJlY2VpcHQuYmxvY2tOdW1iZXIpICsgQmlnSW50KGNvbmZpcm1hdGlvbnMpKSwgZmFsc2UpO1xuICAgICAgICAgICAgaWYgKG5leHRCbG9jayA9PT0gbnVsbCB8fCBuZXh0QmxvY2sgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG5leHRCbG9jay5oYXNoKSB7XG4gICAgICAgICAgICAgICAgY29uZmlybWF0aW9ucyArPSAxO1xuICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uUHJvbWlFdmVudC5lbWl0KCdjb25maXJtYXRpb24nLCB7XG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm1hdGlvbnM6IGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIGNvbmZpcm1hdGlvbnMsIHJldHVybkZvcm1hdCksXG4gICAgICAgICAgICAgICAgICAgIHJlY2VpcHQ6IGZvcm1hdChjdXN0b21UcmFuc2FjdGlvblJlY2VpcHRTY2hlbWEgIT09IG51bGwgJiYgY3VzdG9tVHJhbnNhY3Rpb25SZWNlaXB0U2NoZW1hICE9PSB2b2lkIDAgPyBjdXN0b21UcmFuc2FjdGlvblJlY2VpcHRTY2hlbWEgOiB0cmFuc2FjdGlvblJlY2VpcHRTY2hlbWEsIHRyYW5zYWN0aW9uUmVjZWlwdCwgcmV0dXJuRm9ybWF0KSxcbiAgICAgICAgICAgICAgICAgICAgbGF0ZXN0QmxvY2tIYXNoOiBmb3JtYXQoeyBmb3JtYXQ6ICdieXRlczMyJyB9LCBuZXh0QmxvY2suaGFzaCwgcmV0dXJuRm9ybWF0KSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkpKCk7XG4gICAgfSwgKF9hID0gd2ViM0NvbnRleHQudHJhbnNhY3Rpb25SZWNlaXB0UG9sbGluZ0ludGVydmFsKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB3ZWIzQ29udGV4dC50cmFuc2FjdGlvblBvbGxpbmdJbnRlcnZhbCk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2hfdHJhbnNhY3Rpb25fYnlfcG9sbGluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchTransactionBySubscription: () => (/* binding */ watchTransactionBySubscription)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./watch_transaction_by_polling.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n/**\n * This function watches a Transaction by subscribing to new heads.\n * It is used by `watchTransactionForConfirmations`, in case the provider supports subscription.\n */\nconst watchTransactionBySubscription = ({ web3Context, transactionReceipt, transactionPromiEvent, customTransactionReceiptSchema, returnFormat, }) => {\n    // The following variable will stay true except if the data arrived,\n    //\tor if watching started after an error had occurred.\n    let needToWatchLater = true;\n    let lastCaughtBlockHash;\n    setImmediate(() => {\n        var _a;\n        (_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.subscribe('newHeads').then((subscription) => {\n            subscription.on('data', (newBlockHeader) => __awaiter(void 0, void 0, void 0, function* () {\n                var _a;\n                needToWatchLater = false;\n                if (!(newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.number) ||\n                    // For some cases, the on-data event is fired couple times for the same block!\n                    // This needs investigation but seems to be because of multiple `subscription.on('data'...)` even this should not cause that.\n                    lastCaughtBlockHash === (newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.parentHash)) {\n                    return;\n                }\n                lastCaughtBlockHash = newBlockHeader === null || newBlockHeader === void 0 ? void 0 : newBlockHeader.parentHash;\n                const confirmations = BigInt(newBlockHeader.number) -\n                    BigInt(transactionReceipt.blockNumber) +\n                    BigInt(1);\n                transactionPromiEvent.emit('confirmation', {\n                    confirmations: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, confirmations, returnFormat),\n                    receipt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(customTransactionReceiptSchema !== null && customTransactionReceiptSchema !== void 0 ? customTransactionReceiptSchema : _schemas_js__WEBPACK_IMPORTED_MODULE_1__.transactionReceiptSchema, transactionReceipt, returnFormat),\n                    latestBlockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes32' }, newBlockHeader.parentHash, returnFormat),\n                });\n                if (confirmations >= web3Context.transactionConfirmationBlocks) {\n                    yield ((_a = web3Context.subscriptionManager) === null || _a === void 0 ? void 0 : _a.removeSubscription(subscription));\n                }\n            }));\n            subscription.on('error', () => __awaiter(void 0, void 0, void 0, function* () {\n                var _b;\n                yield ((_b = web3Context.subscriptionManager) === null || _b === void 0 ? void 0 : _b.removeSubscription(subscription));\n                needToWatchLater = false;\n                (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__.watchTransactionByPolling)({\n                    web3Context,\n                    transactionReceipt,\n                    transactionPromiEvent,\n                    customTransactionReceiptSchema,\n                    returnFormat,\n                });\n            }));\n        }).catch(() => {\n            needToWatchLater = false;\n            (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__.watchTransactionByPolling)({\n                web3Context,\n                transactionReceipt,\n                customTransactionReceiptSchema,\n                transactionPromiEvent,\n                returnFormat,\n            });\n        });\n    });\n    // Fallback to polling if tx receipt didn't arrived in \"blockHeaderTimeout\" [10 seconds]\n    setTimeout(() => {\n        if (needToWatchLater) {\n            (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_2__.watchTransactionByPolling)({\n                web3Context,\n                transactionReceipt,\n                transactionPromiEvent,\n                returnFormat,\n            });\n        }\n    }, web3Context.blockHeaderTimeout * 1000);\n};\n//# sourceMappingURL=watch_transaction_by_subscription.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy93YXRjaF90cmFuc2FjdGlvbl9ieV9zdWJzY3JpcHRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNvQztBQUNxQjtBQUNxQjtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBDQUEwQyx1R0FBdUc7QUFDeEo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGtEQUFNLEdBQUcsZ0JBQWdCO0FBQzVELDZCQUE2QixrREFBTSx5SEFBeUgsaUVBQXdCO0FBQ3BMLHFDQUFxQyxrREFBTSxHQUFHLG1CQUFtQjtBQUNqRSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDJGQUF5QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSxZQUFZLDJGQUF5QjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyRkFBeUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250LWVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL3V0aWxzL3dhdGNoX3RyYW5zYWN0aW9uX2J5X3N1YnNjcmlwdGlvbi5qcz8wZTJkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAnd2ViMy11dGlscyc7XG5pbXBvcnQgeyB0cmFuc2FjdGlvblJlY2VpcHRTY2hlbWEgfSBmcm9tICcuLi9zY2hlbWFzLmpzJztcbmltcG9ydCB7IHdhdGNoVHJhbnNhY3Rpb25CeVBvbGxpbmcgfSBmcm9tICcuL3dhdGNoX3RyYW5zYWN0aW9uX2J5X3BvbGxpbmcuanMnO1xuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIHdhdGNoZXMgYSBUcmFuc2FjdGlvbiBieSBzdWJzY3JpYmluZyB0byBuZXcgaGVhZHMuXG4gKiBJdCBpcyB1c2VkIGJ5IGB3YXRjaFRyYW5zYWN0aW9uRm9yQ29uZmlybWF0aW9uc2AsIGluIGNhc2UgdGhlIHByb3ZpZGVyIHN1cHBvcnRzIHN1YnNjcmlwdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IHdhdGNoVHJhbnNhY3Rpb25CeVN1YnNjcmlwdGlvbiA9ICh7IHdlYjNDb250ZXh0LCB0cmFuc2FjdGlvblJlY2VpcHQsIHRyYW5zYWN0aW9uUHJvbWlFdmVudCwgY3VzdG9tVHJhbnNhY3Rpb25SZWNlaXB0U2NoZW1hLCByZXR1cm5Gb3JtYXQsIH0pID0+IHtcbiAgICAvLyBUaGUgZm9sbG93aW5nIHZhcmlhYmxlIHdpbGwgc3RheSB0cnVlIGV4Y2VwdCBpZiB0aGUgZGF0YSBhcnJpdmVkLFxuICAgIC8vXHRvciBpZiB3YXRjaGluZyBzdGFydGVkIGFmdGVyIGFuIGVycm9yIGhhZCBvY2N1cnJlZC5cbiAgICBsZXQgbmVlZFRvV2F0Y2hMYXRlciA9IHRydWU7XG4gICAgbGV0IGxhc3RDYXVnaHRCbG9ja0hhc2g7XG4gICAgc2V0SW1tZWRpYXRlKCgpID0+IHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICAoX2EgPSB3ZWIzQ29udGV4dC5zdWJzY3JpcHRpb25NYW5hZ2VyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euc3Vic2NyaWJlKCduZXdIZWFkcycpLnRoZW4oKHN1YnNjcmlwdGlvbikgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uLm9uKCdkYXRhJywgKG5ld0Jsb2NrSGVhZGVyKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgbmVlZFRvV2F0Y2hMYXRlciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmICghKG5ld0Jsb2NrSGVhZGVyID09PSBudWxsIHx8IG5ld0Jsb2NrSGVhZGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBuZXdCbG9ja0hlYWRlci5udW1iZXIpIHx8XG4gICAgICAgICAgICAgICAgICAgIC8vIEZvciBzb21lIGNhc2VzLCB0aGUgb24tZGF0YSBldmVudCBpcyBmaXJlZCBjb3VwbGUgdGltZXMgZm9yIHRoZSBzYW1lIGJsb2NrIVxuICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIG5lZWRzIGludmVzdGlnYXRpb24gYnV0IHNlZW1zIHRvIGJlIGJlY2F1c2Ugb2YgbXVsdGlwbGUgYHN1YnNjcmlwdGlvbi5vbignZGF0YScuLi4pYCBldmVuIHRoaXMgc2hvdWxkIG5vdCBjYXVzZSB0aGF0LlxuICAgICAgICAgICAgICAgICAgICBsYXN0Q2F1Z2h0QmxvY2tIYXNoID09PSAobmV3QmxvY2tIZWFkZXIgPT09IG51bGwgfHwgbmV3QmxvY2tIZWFkZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG5ld0Jsb2NrSGVhZGVyLnBhcmVudEhhc2gpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGFzdENhdWdodEJsb2NrSGFzaCA9IG5ld0Jsb2NrSGVhZGVyID09PSBudWxsIHx8IG5ld0Jsb2NrSGVhZGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBuZXdCbG9ja0hlYWRlci5wYXJlbnRIYXNoO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpcm1hdGlvbnMgPSBCaWdJbnQobmV3QmxvY2tIZWFkZXIubnVtYmVyKSAtXG4gICAgICAgICAgICAgICAgICAgIEJpZ0ludCh0cmFuc2FjdGlvblJlY2VpcHQuYmxvY2tOdW1iZXIpICtcbiAgICAgICAgICAgICAgICAgICAgQmlnSW50KDEpO1xuICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uUHJvbWlFdmVudC5lbWl0KCdjb25maXJtYXRpb24nLCB7XG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm1hdGlvbnM6IGZvcm1hdCh7IGZvcm1hdDogJ3VpbnQnIH0sIGNvbmZpcm1hdGlvbnMsIHJldHVybkZvcm1hdCksXG4gICAgICAgICAgICAgICAgICAgIHJlY2VpcHQ6IGZvcm1hdChjdXN0b21UcmFuc2FjdGlvblJlY2VpcHRTY2hlbWEgIT09IG51bGwgJiYgY3VzdG9tVHJhbnNhY3Rpb25SZWNlaXB0U2NoZW1hICE9PSB2b2lkIDAgPyBjdXN0b21UcmFuc2FjdGlvblJlY2VpcHRTY2hlbWEgOiB0cmFuc2FjdGlvblJlY2VpcHRTY2hlbWEsIHRyYW5zYWN0aW9uUmVjZWlwdCwgcmV0dXJuRm9ybWF0KSxcbiAgICAgICAgICAgICAgICAgICAgbGF0ZXN0QmxvY2tIYXNoOiBmb3JtYXQoeyBmb3JtYXQ6ICdieXRlczMyJyB9LCBuZXdCbG9ja0hlYWRlci5wYXJlbnRIYXNoLCByZXR1cm5Gb3JtYXQpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGlmIChjb25maXJtYXRpb25zID49IHdlYjNDb250ZXh0LnRyYW5zYWN0aW9uQ29uZmlybWF0aW9uQmxvY2tzKSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkICgoX2EgPSB3ZWIzQ29udGV4dC5zdWJzY3JpcHRpb25NYW5hZ2VyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucmVtb3ZlU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbikpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHN1YnNjcmlwdGlvbi5vbignZXJyb3InLCAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2I7XG4gICAgICAgICAgICAgICAgeWllbGQgKChfYiA9IHdlYjNDb250ZXh0LnN1YnNjcmlwdGlvbk1hbmFnZXIpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5yZW1vdmVTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uKSk7XG4gICAgICAgICAgICAgICAgbmVlZFRvV2F0Y2hMYXRlciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHdhdGNoVHJhbnNhY3Rpb25CeVBvbGxpbmcoe1xuICAgICAgICAgICAgICAgICAgICB3ZWIzQ29udGV4dCxcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNhY3Rpb25SZWNlaXB0LFxuICAgICAgICAgICAgICAgICAgICB0cmFuc2FjdGlvblByb21pRXZlbnQsXG4gICAgICAgICAgICAgICAgICAgIGN1c3RvbVRyYW5zYWN0aW9uUmVjZWlwdFNjaGVtYSxcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuRm9ybWF0LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9KS5jYXRjaCgoKSA9PiB7XG4gICAgICAgICAgICBuZWVkVG9XYXRjaExhdGVyID0gZmFsc2U7XG4gICAgICAgICAgICB3YXRjaFRyYW5zYWN0aW9uQnlQb2xsaW5nKHtcbiAgICAgICAgICAgICAgICB3ZWIzQ29udGV4dCxcbiAgICAgICAgICAgICAgICB0cmFuc2FjdGlvblJlY2VpcHQsXG4gICAgICAgICAgICAgICAgY3VzdG9tVHJhbnNhY3Rpb25SZWNlaXB0U2NoZW1hLFxuICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uUHJvbWlFdmVudCxcbiAgICAgICAgICAgICAgICByZXR1cm5Gb3JtYXQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgLy8gRmFsbGJhY2sgdG8gcG9sbGluZyBpZiB0eCByZWNlaXB0IGRpZG4ndCBhcnJpdmVkIGluIFwiYmxvY2tIZWFkZXJUaW1lb3V0XCIgWzEwIHNlY29uZHNdXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGlmIChuZWVkVG9XYXRjaExhdGVyKSB7XG4gICAgICAgICAgICB3YXRjaFRyYW5zYWN0aW9uQnlQb2xsaW5nKHtcbiAgICAgICAgICAgICAgICB3ZWIzQ29udGV4dCxcbiAgICAgICAgICAgICAgICB0cmFuc2FjdGlvblJlY2VpcHQsXG4gICAgICAgICAgICAgICAgdHJhbnNhY3Rpb25Qcm9taUV2ZW50LFxuICAgICAgICAgICAgICAgIHJldHVybkZvcm1hdCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSwgd2ViM0NvbnRleHQuYmxvY2tIZWFkZXJUaW1lb3V0ICogMTAwMCk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2hfdHJhbnNhY3Rpb25fYnlfc3Vic2NyaXB0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js":
/*!************************************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchTransactionForConfirmations: () => (/* binding */ watchTransactionForConfirmations)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/* harmony import */ var _watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./watch_transaction_by_polling.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_polling.js\");\n/* harmony import */ var _watch_transaction_by_subscription_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./watch_transaction_by_subscription.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_by_subscription.js\");\n\n\n\n\n\n\nfunction watchTransactionForConfirmations(web3Context, transactionPromiEvent, transactionReceipt, transactionHash, returnFormat, customTransactionReceiptSchema) {\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionReceipt) || (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transactionReceipt.blockHash))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionMissingReceiptOrBlockHashError({\n            receipt: transactionReceipt,\n            blockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes32' }, transactionReceipt === null || transactionReceipt === void 0 ? void 0 : transactionReceipt.blockHash, returnFormat),\n            transactionHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes32' }, transactionHash, returnFormat),\n        });\n    if (!transactionReceipt.blockNumber)\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionReceiptMissingBlockNumberError({ receipt: transactionReceipt });\n    // As we have the receipt, it's the first confirmation that tx is accepted.\n    transactionPromiEvent.emit('confirmation', {\n        confirmations: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'uint' }, 1, returnFormat),\n        receipt: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(customTransactionReceiptSchema !== null && customTransactionReceiptSchema !== void 0 ? customTransactionReceiptSchema : _schemas_js__WEBPACK_IMPORTED_MODULE_3__.transactionReceiptSchema, transactionReceipt, returnFormat),\n        latestBlockHash: (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'bytes32' }, transactionReceipt.blockHash, returnFormat),\n    });\n    // so a subscription for newBlockHeaders can be made instead of polling\n    const provider = web3Context.requestManager.provider;\n    if (provider && 'supportsSubscriptions' in provider && provider.supportsSubscriptions()) {\n        (0,_watch_transaction_by_subscription_js__WEBPACK_IMPORTED_MODULE_5__.watchTransactionBySubscription)({\n            web3Context,\n            transactionReceipt,\n            transactionPromiEvent,\n            customTransactionReceiptSchema,\n            returnFormat,\n        });\n    }\n    else {\n        (0,_watch_transaction_by_polling_js__WEBPACK_IMPORTED_MODULE_4__.watchTransactionByPolling)({\n            web3Context,\n            transactionReceipt,\n            transactionPromiEvent,\n            customTransactionReceiptSchema,\n            returnFormat,\n        });\n    }\n}\n//# sourceMappingURL=watch_transaction_for_confirmations.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS91dGlscy93YXRjaF90cmFuc2FjdGlvbl9mb3JfY29uZmlybWF0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW9DO0FBQ087QUFDeUU7QUFDM0Q7QUFDc0I7QUFDUztBQUNqRjtBQUNQLFFBQVEseURBQVMsd0JBQXdCLHlEQUFTO0FBQ2xELGtCQUFrQixrRkFBeUM7QUFDM0Q7QUFDQSx1QkFBdUIsa0RBQU0sR0FBRyxtQkFBbUI7QUFDbkQsNkJBQTZCLGtEQUFNLEdBQUcsbUJBQW1CO0FBQ3pELFNBQVM7QUFDVDtBQUNBLGtCQUFrQixrRkFBeUMsR0FBRyw2QkFBNkI7QUFDM0Y7QUFDQTtBQUNBLHVCQUF1QixrREFBTSxHQUFHLGdCQUFnQjtBQUNoRCxpQkFBaUIsa0RBQU0seUhBQXlILGlFQUF3QjtBQUN4Syx5QkFBeUIsa0RBQU0sR0FBRyxtQkFBbUI7QUFDckQsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFFBQVEscUdBQThCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFFBQVEsMkZBQXlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnQtZW5kLy4vbm9kZV9tb2R1bGVzL3dlYjMtZXRoL2xpYi9lc20vdXRpbHMvd2F0Y2hfdHJhbnNhY3Rpb25fZm9yX2NvbmZpcm1hdGlvbnMuanM/YzUyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3JtYXQgfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IGlzTnVsbGlzaCB9IGZyb20gJ3dlYjMtdmFsaWRhdG9yJztcbmltcG9ydCB7IFRyYW5zYWN0aW9uTWlzc2luZ1JlY2VpcHRPckJsb2NrSGFzaEVycm9yLCBUcmFuc2FjdGlvblJlY2VpcHRNaXNzaW5nQmxvY2tOdW1iZXJFcnJvciwgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyB0cmFuc2FjdGlvblJlY2VpcHRTY2hlbWEgfSBmcm9tICcuLi9zY2hlbWFzLmpzJztcbmltcG9ydCB7IHdhdGNoVHJhbnNhY3Rpb25CeVBvbGxpbmcsIH0gZnJvbSAnLi93YXRjaF90cmFuc2FjdGlvbl9ieV9wb2xsaW5nLmpzJztcbmltcG9ydCB7IHdhdGNoVHJhbnNhY3Rpb25CeVN1YnNjcmlwdGlvbiB9IGZyb20gJy4vd2F0Y2hfdHJhbnNhY3Rpb25fYnlfc3Vic2NyaXB0aW9uLmpzJztcbmV4cG9ydCBmdW5jdGlvbiB3YXRjaFRyYW5zYWN0aW9uRm9yQ29uZmlybWF0aW9ucyh3ZWIzQ29udGV4dCwgdHJhbnNhY3Rpb25Qcm9taUV2ZW50LCB0cmFuc2FjdGlvblJlY2VpcHQsIHRyYW5zYWN0aW9uSGFzaCwgcmV0dXJuRm9ybWF0LCBjdXN0b21UcmFuc2FjdGlvblJlY2VpcHRTY2hlbWEpIHtcbiAgICBpZiAoaXNOdWxsaXNoKHRyYW5zYWN0aW9uUmVjZWlwdCkgfHwgaXNOdWxsaXNoKHRyYW5zYWN0aW9uUmVjZWlwdC5ibG9ja0hhc2gpKVxuICAgICAgICB0aHJvdyBuZXcgVHJhbnNhY3Rpb25NaXNzaW5nUmVjZWlwdE9yQmxvY2tIYXNoRXJyb3Ioe1xuICAgICAgICAgICAgcmVjZWlwdDogdHJhbnNhY3Rpb25SZWNlaXB0LFxuICAgICAgICAgICAgYmxvY2tIYXNoOiBmb3JtYXQoeyBmb3JtYXQ6ICdieXRlczMyJyB9LCB0cmFuc2FjdGlvblJlY2VpcHQgPT09IG51bGwgfHwgdHJhbnNhY3Rpb25SZWNlaXB0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0cmFuc2FjdGlvblJlY2VpcHQuYmxvY2tIYXNoLCByZXR1cm5Gb3JtYXQpLFxuICAgICAgICAgICAgdHJhbnNhY3Rpb25IYXNoOiBmb3JtYXQoeyBmb3JtYXQ6ICdieXRlczMyJyB9LCB0cmFuc2FjdGlvbkhhc2gsIHJldHVybkZvcm1hdCksXG4gICAgICAgIH0pO1xuICAgIGlmICghdHJhbnNhY3Rpb25SZWNlaXB0LmJsb2NrTnVtYmVyKVxuICAgICAgICB0aHJvdyBuZXcgVHJhbnNhY3Rpb25SZWNlaXB0TWlzc2luZ0Jsb2NrTnVtYmVyRXJyb3IoeyByZWNlaXB0OiB0cmFuc2FjdGlvblJlY2VpcHQgfSk7XG4gICAgLy8gQXMgd2UgaGF2ZSB0aGUgcmVjZWlwdCwgaXQncyB0aGUgZmlyc3QgY29uZmlybWF0aW9uIHRoYXQgdHggaXMgYWNjZXB0ZWQuXG4gICAgdHJhbnNhY3Rpb25Qcm9taUV2ZW50LmVtaXQoJ2NvbmZpcm1hdGlvbicsIHtcbiAgICAgICAgY29uZmlybWF0aW9uczogZm9ybWF0KHsgZm9ybWF0OiAndWludCcgfSwgMSwgcmV0dXJuRm9ybWF0KSxcbiAgICAgICAgcmVjZWlwdDogZm9ybWF0KGN1c3RvbVRyYW5zYWN0aW9uUmVjZWlwdFNjaGVtYSAhPT0gbnVsbCAmJiBjdXN0b21UcmFuc2FjdGlvblJlY2VpcHRTY2hlbWEgIT09IHZvaWQgMCA/IGN1c3RvbVRyYW5zYWN0aW9uUmVjZWlwdFNjaGVtYSA6IHRyYW5zYWN0aW9uUmVjZWlwdFNjaGVtYSwgdHJhbnNhY3Rpb25SZWNlaXB0LCByZXR1cm5Gb3JtYXQpLFxuICAgICAgICBsYXRlc3RCbG9ja0hhc2g6IGZvcm1hdCh7IGZvcm1hdDogJ2J5dGVzMzInIH0sIHRyYW5zYWN0aW9uUmVjZWlwdC5ibG9ja0hhc2gsIHJldHVybkZvcm1hdCksXG4gICAgfSk7XG4gICAgLy8gc28gYSBzdWJzY3JpcHRpb24gZm9yIG5ld0Jsb2NrSGVhZGVycyBjYW4gYmUgbWFkZSBpbnN0ZWFkIG9mIHBvbGxpbmdcbiAgICBjb25zdCBwcm92aWRlciA9IHdlYjNDb250ZXh0LnJlcXVlc3RNYW5hZ2VyLnByb3ZpZGVyO1xuICAgIGlmIChwcm92aWRlciAmJiAnc3VwcG9ydHNTdWJzY3JpcHRpb25zJyBpbiBwcm92aWRlciAmJiBwcm92aWRlci5zdXBwb3J0c1N1YnNjcmlwdGlvbnMoKSkge1xuICAgICAgICB3YXRjaFRyYW5zYWN0aW9uQnlTdWJzY3JpcHRpb24oe1xuICAgICAgICAgICAgd2ViM0NvbnRleHQsXG4gICAgICAgICAgICB0cmFuc2FjdGlvblJlY2VpcHQsXG4gICAgICAgICAgICB0cmFuc2FjdGlvblByb21pRXZlbnQsXG4gICAgICAgICAgICBjdXN0b21UcmFuc2FjdGlvblJlY2VpcHRTY2hlbWEsXG4gICAgICAgICAgICByZXR1cm5Gb3JtYXQsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgd2F0Y2hUcmFuc2FjdGlvbkJ5UG9sbGluZyh7XG4gICAgICAgICAgICB3ZWIzQ29udGV4dCxcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uUmVjZWlwdCxcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uUHJvbWlFdmVudCxcbiAgICAgICAgICAgIGN1c3RvbVRyYW5zYWN0aW9uUmVjZWlwdFNjaGVtYSxcbiAgICAgICAgICAgIHJldHVybkZvcm1hdCxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2hfdHJhbnNhY3Rpb25fZm9yX2NvbmZpcm1hdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/utils/watch_transaction_for_confirmations.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/validation.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/validation.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAccessList: () => (/* binding */ isAccessList),\n/* harmony export */   isAccessListEntry: () => (/* binding */ isAccessListEntry),\n/* harmony export */   isBaseTransaction: () => (/* binding */ isBaseTransaction),\n/* harmony export */   isTransaction1559Unsigned: () => (/* binding */ isTransaction1559Unsigned),\n/* harmony export */   isTransaction2930Unsigned: () => (/* binding */ isTransaction2930Unsigned),\n/* harmony export */   isTransactionCall: () => (/* binding */ isTransactionCall),\n/* harmony export */   isTransactionLegacyUnsigned: () => (/* binding */ isTransactionLegacyUnsigned),\n/* harmony export */   isTransactionWithSender: () => (/* binding */ isTransactionWithSender),\n/* harmony export */   validateBaseChain: () => (/* binding */ validateBaseChain),\n/* harmony export */   validateChainInfo: () => (/* binding */ validateChainInfo),\n/* harmony export */   validateCustomChainInfo: () => (/* binding */ validateCustomChainInfo),\n/* harmony export */   validateFeeMarketGas: () => (/* binding */ validateFeeMarketGas),\n/* harmony export */   validateGas: () => (/* binding */ validateGas),\n/* harmony export */   validateHardfork: () => (/* binding */ validateHardfork),\n/* harmony export */   validateLegacyGas: () => (/* binding */ validateLegacyGas),\n/* harmony export */   validateTransactionCall: () => (/* binding */ validateTransactionCall),\n/* harmony export */   validateTransactionForSigning: () => (/* binding */ validateTransactionForSigning),\n/* harmony export */   validateTransactionWithSender: () => (/* binding */ validateTransactionWithSender)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/format_transaction.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/utils/format_transaction.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\nfunction isBaseTransaction(value) {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.to) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.to))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.type) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.type) && value.type.length !== 2)\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.nonce))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gas))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.value))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.input))\n        return false;\n    if (value.chainId && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.chainId))\n        return false;\n    return true;\n}\nfunction isAccessListEntry(value) {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.address) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.address))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.storageKeys) &&\n        !value.storageKeys.every(storageKey => (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexString32Bytes)(storageKey)))\n        return false;\n    return true;\n}\nfunction isAccessList(value) {\n    if (!Array.isArray(value) ||\n        !value.every(accessListEntry => isAccessListEntry(accessListEntry)))\n        return false;\n    return true;\n}\nfunction isTransaction1559Unsigned(value) {\n    if (!isBaseTransaction(value))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.maxFeePerGas))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.maxPriorityFeePerGas))\n        return false;\n    if (!isAccessList(value.accessList))\n        return false;\n    return true;\n}\nfunction isTransaction2930Unsigned(value) {\n    if (!isBaseTransaction(value))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gasPrice))\n        return false;\n    if (!isAccessList(value.accessList))\n        return false;\n    return true;\n}\nfunction isTransactionLegacyUnsigned(value) {\n    if (!isBaseTransaction(value))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gasPrice))\n        return false;\n    return true;\n}\nfunction isTransactionWithSender(value) {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.from))\n        return false;\n    if (!isBaseTransaction(value))\n        return false;\n    if (!isTransaction1559Unsigned(value) &&\n        !isTransaction2930Unsigned(value) &&\n        !isTransactionLegacyUnsigned(value))\n        return false;\n    return true;\n}\nfunction validateTransactionWithSender(value) {\n    if (!isTransactionWithSender(value))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidTransactionWithSender(value);\n}\nfunction isTransactionCall(value) {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.from) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.from))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress)(value.to))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.gas) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gas))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.gasPrice) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.gasPrice))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.value))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.data) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.data))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.input) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value.input))\n        return false;\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(value.type))\n        return false;\n    if (isTransaction1559Unsigned(value))\n        return false;\n    if (isTransaction2930Unsigned(value))\n        return false;\n    return true;\n}\nfunction validateTransactionCall(value) {\n    if (!isTransactionCall(value))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidTransactionCall(value);\n}\nconst validateCustomChainInfo = (transaction) => {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common)) {\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.customChain))\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingCustomChainError();\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.customChain.chainId))\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingCustomChainIdError();\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chainId) &&\n            transaction.chainId !== transaction.common.customChain.chainId)\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.ChainIdMismatchError({\n                txChainId: transaction.chainId,\n                customChainId: transaction.common.customChain.chainId,\n            });\n    }\n};\nconst validateChainInfo = (transaction) => {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common) &&\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain) &&\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.CommonOrChainAndHardforkError();\n    }\n    if ((!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork)) ||\n        (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain)))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingChainOrHardforkError({\n            chain: transaction.chain,\n            hardfork: transaction.hardfork,\n        });\n};\nconst validateBaseChain = (transaction) => {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common))\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.baseChain))\n            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.chain) &&\n                transaction.chain !== transaction.common.baseChain) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.ChainMismatchError({\n                    txChain: transaction.chain,\n                    baseChain: transaction.common.baseChain,\n                });\n            }\n};\nconst validateHardfork = (transaction) => {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common))\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.common.hardfork))\n            if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.hardfork) &&\n                transaction.hardfork !== transaction.common.hardfork) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.HardforkMismatchError({\n                    txHardfork: transaction.hardfork,\n                    commonHardfork: transaction.common.hardfork,\n                });\n            }\n};\nconst validateLegacyGas = (transaction) => {\n    if (\n    // This check is verifying gas and gasPrice aren't less than 0.\n    (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gas) ||\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.gas) ||\n        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) ||\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.gasPrice))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidGasOrGasPrice({\n            gas: transaction.gas,\n            gasPrice: transaction.gasPrice,\n        });\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.UnsupportedFeeMarketError({\n            maxFeePerGas: transaction.maxFeePerGas,\n            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        });\n};\nconst validateFeeMarketGas = (transaction) => {\n    // These errors come from 1.x, so they must be checked before\n    // InvalidMaxPriorityFeePerGasOrMaxFeePerGas to throw the same error\n    // for the same code executing in 1.x\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice) && transaction.type === '0x2')\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.Eip1559GasPriceError(transaction.gasPrice);\n    if (transaction.type === '0x0' || transaction.type === '0x1')\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.UnsupportedFeeMarketError({\n            maxFeePerGas: transaction.maxFeePerGas,\n            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        });\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas) ||\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.maxFeePerGas) ||\n        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas) ||\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUInt)(transaction.maxPriorityFeePerGas))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidMaxPriorityFeePerGasOrMaxFeePerGas({\n            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n            maxFeePerGas: transaction.maxFeePerGas,\n        });\n};\n/**\n * This method checks if all required gas properties are present for either\n * legacy gas (type 0x0 and 0x1) OR fee market transactions (0x2)\n */\nconst validateGas = (transaction) => {\n    const gasPresent = !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gas) || !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasLimit);\n    const legacyGasPresent = gasPresent && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.gasPrice);\n    const feeMarketGasPresent = gasPresent &&\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxPriorityFeePerGas) &&\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.maxFeePerGas);\n    if (!legacyGasPresent && !feeMarketGasPresent)\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.MissingGasError({\n            gas: transaction.gas,\n            gasPrice: transaction.gasPrice,\n            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n            maxFeePerGas: transaction.maxFeePerGas,\n        });\n    if (legacyGasPresent && feeMarketGasPresent)\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionGasMismatchError({\n            gas: transaction.gas,\n            gasPrice: transaction.gasPrice,\n            maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n            maxFeePerGas: transaction.maxFeePerGas,\n        });\n    (legacyGasPresent ? validateLegacyGas : validateFeeMarketGas)(transaction);\n    (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction.type) && transaction.type > '0x1'\n        ? validateFeeMarketGas\n        : validateLegacyGas)(transaction);\n};\nconst validateTransactionForSigning = (transaction, overrideMethod) => {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(overrideMethod)) {\n        overrideMethod(transaction);\n        return;\n    }\n    if (typeof transaction !== 'object' || (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(transaction))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidTransactionObjectError(transaction);\n    validateCustomChainInfo(transaction);\n    validateChainInfo(transaction);\n    validateBaseChain(transaction);\n    validateHardfork(transaction);\n    const formattedTransaction = (0,_utils_format_transaction_js__WEBPACK_IMPORTED_MODULE_3__.formatTransaction)(transaction, web3_types__WEBPACK_IMPORTED_MODULE_0__.ETH_DATA_FORMAT);\n    validateGas(formattedTransaction);\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.nonce) ||\n        (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(formattedTransaction.chainId) ||\n        formattedTransaction.nonce.startsWith('-') ||\n        formattedTransaction.chainId.startsWith('-'))\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidNonceOrChainIdError({\n            nonce: transaction.nonce,\n            chainId: transaction.chainId,\n        });\n};\n//# sourceMappingURL=validation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2VzbS92YWxpZGF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQzhDO0FBQ2lEO0FBQ2lZO0FBQzlaO0FBQzNEO0FBQ1AsU0FBUyx5REFBUyxlQUFlLHlEQUFTO0FBQzFDO0FBQ0EsU0FBUywyREFBVyxpQkFBaUIseURBQVM7QUFDOUM7QUFDQSxTQUFTLDJEQUFXO0FBQ3BCO0FBQ0EsU0FBUywyREFBVztBQUNwQjtBQUNBLFNBQVMsMkRBQVc7QUFDcEI7QUFDQSxTQUFTLDJEQUFXO0FBQ3BCO0FBQ0EsMEJBQTBCLDJEQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsU0FBUyx5REFBUyxvQkFBb0IseURBQVM7QUFDL0M7QUFDQSxTQUFTLHlEQUFTO0FBQ2xCLCtDQUErQyxrRUFBa0I7QUFDakU7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsU0FBUywyREFBVztBQUNwQjtBQUNBLFNBQVMsMkRBQVc7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLFNBQVMsMkRBQVc7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLFNBQVMsMkRBQVc7QUFDcEI7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLHlEQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxrQkFBa0IscUVBQTRCO0FBQzlDO0FBQ087QUFDUCxTQUFTLHlEQUFTLGlCQUFpQix5REFBUztBQUM1QztBQUNBLFNBQVMseURBQVM7QUFDbEI7QUFDQSxTQUFTLHlEQUFTLGdCQUFnQiwyREFBVztBQUM3QztBQUNBLFNBQVMseURBQVMscUJBQXFCLDJEQUFXO0FBQ2xEO0FBQ0EsU0FBUyx5REFBUyxrQkFBa0IsMkRBQVc7QUFDL0M7QUFDQSxTQUFTLHlEQUFTLGlCQUFpQiwyREFBVztBQUM5QztBQUNBLFNBQVMseURBQVMsa0JBQWtCLDJEQUFXO0FBQy9DO0FBQ0EsU0FBUyx5REFBUztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxrQkFBa0IsK0RBQXNCO0FBQ3hDO0FBQ087QUFDUCxTQUFTLHlEQUFTO0FBQ2xCLFlBQVkseURBQVM7QUFDckIsc0JBQXNCLGdFQUF1QjtBQUM3QyxZQUFZLHlEQUFTO0FBQ3JCLHNCQUFzQixrRUFBeUI7QUFDL0MsYUFBYSx5REFBUztBQUN0QjtBQUNBLHNCQUFzQiw2REFBb0I7QUFDMUM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxTQUFTLHlEQUFTO0FBQ2xCLFNBQVMseURBQVM7QUFDbEIsU0FBUyx5REFBUztBQUNsQixrQkFBa0Isc0VBQTZCO0FBQy9DO0FBQ0EsVUFBVSx5REFBUyx1QkFBdUIseURBQVM7QUFDbkQsVUFBVSx5REFBUywwQkFBMEIseURBQVM7QUFDdEQsa0JBQWtCLG9FQUEyQjtBQUM3QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ087QUFDUCxTQUFTLHlEQUFTO0FBQ2xCLGFBQWEseURBQVM7QUFDdEIsaUJBQWlCLHlEQUFTO0FBQzFCO0FBQ0EsMEJBQTBCLDJEQUFrQjtBQUM1QztBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDTztBQUNQLFNBQVMseURBQVM7QUFDbEIsYUFBYSx5REFBUztBQUN0QixpQkFBaUIseURBQVM7QUFDMUI7QUFDQSwwQkFBMEIsOERBQXFCO0FBQy9DO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLElBQUkseURBQVM7QUFDYixTQUFTLHNEQUFNO0FBQ2YsUUFBUSx5REFBUztBQUNqQixTQUFTLHNEQUFNO0FBQ2Ysa0JBQWtCLDZEQUFvQjtBQUN0QztBQUNBO0FBQ0EsU0FBUztBQUNULFNBQVMseURBQVMsK0JBQStCLHlEQUFTO0FBQzFELGtCQUFrQixrRUFBeUI7QUFDM0M7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsU0FBUyx5REFBUztBQUNsQixrQkFBa0IsNkRBQW9CO0FBQ3RDO0FBQ0Esa0JBQWtCLGtFQUF5QjtBQUMzQztBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVEseURBQVM7QUFDakIsU0FBUyxzREFBTTtBQUNmLFFBQVEseURBQVM7QUFDakIsU0FBUyxzREFBTTtBQUNmLGtCQUFrQixrRkFBeUM7QUFDM0Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCx3QkFBd0IseURBQVMsc0JBQXNCLHlEQUFTO0FBQ2hFLDRDQUE0Qyx5REFBUztBQUNyRDtBQUNBLFNBQVMseURBQVM7QUFDbEIsU0FBUyx5REFBUztBQUNsQjtBQUNBLGtCQUFrQix3REFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLGtCQUFrQixvRUFBMkI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxNQUFNLHlEQUFTO0FBQ2Y7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLHlEQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyx5REFBUztBQUNwRCxrQkFBa0Isc0VBQTZCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLCtFQUFpQixjQUFjLHVEQUFlO0FBQy9FO0FBQ0EsUUFBUSx5REFBUztBQUNqQixRQUFRLHlEQUFTO0FBQ2pCO0FBQ0E7QUFDQSxrQkFBa0IsbUVBQTBCO0FBQzVDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250LWVuZC8uL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZXNtL3ZhbGlkYXRpb24uanM/YWQ2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbmltcG9ydCB7IEVUSF9EQVRBX0ZPUk1BVCwgfSBmcm9tICd3ZWIzLXR5cGVzJztcbmltcG9ydCB7IGlzQWRkcmVzcywgaXNIZXhTdHJpY3QsIGlzSGV4U3RyaW5nMzJCeXRlcywgaXNOdWxsaXNoLCBpc1VJbnQgfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG5pbXBvcnQgeyBDaGFpbk1pc21hdGNoRXJyb3IsIEhhcmRmb3JrTWlzbWF0Y2hFcnJvciwgQ2hhaW5JZE1pc21hdGNoRXJyb3IsIENvbW1vbk9yQ2hhaW5BbmRIYXJkZm9ya0Vycm9yLCBFaXAxNTU5R2FzUHJpY2VFcnJvciwgSW52YWxpZEdhc09yR2FzUHJpY2UsIEludmFsaWRNYXhQcmlvcml0eUZlZVBlckdhc09yTWF4RmVlUGVyR2FzLCBJbnZhbGlkTm9uY2VPckNoYWluSWRFcnJvciwgSW52YWxpZFRyYW5zYWN0aW9uQ2FsbCwgSW52YWxpZFRyYW5zYWN0aW9uT2JqZWN0RXJyb3IsIEludmFsaWRUcmFuc2FjdGlvbldpdGhTZW5kZXIsIE1pc3NpbmdDaGFpbk9ySGFyZGZvcmtFcnJvciwgTWlzc2luZ0N1c3RvbUNoYWluRXJyb3IsIE1pc3NpbmdDdXN0b21DaGFpbklkRXJyb3IsIE1pc3NpbmdHYXNFcnJvciwgVHJhbnNhY3Rpb25HYXNNaXNtYXRjaEVycm9yLCBVbnN1cHBvcnRlZEZlZU1hcmtldEVycm9yLCB9IGZyb20gJ3dlYjMtZXJyb3JzJztcbmltcG9ydCB7IGZvcm1hdFRyYW5zYWN0aW9uIH0gZnJvbSAnLi91dGlscy9mb3JtYXRfdHJhbnNhY3Rpb24uanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGlzQmFzZVRyYW5zYWN0aW9uKHZhbHVlKSB7XG4gICAgaWYgKCFpc051bGxpc2godmFsdWUudG8pICYmICFpc0FkZHJlc3ModmFsdWUudG8pKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFpc0hleFN0cmljdCh2YWx1ZS50eXBlKSAmJiAhaXNOdWxsaXNoKHZhbHVlLnR5cGUpICYmIHZhbHVlLnR5cGUubGVuZ3RoICE9PSAyKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFpc0hleFN0cmljdCh2YWx1ZS5ub25jZSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIWlzSGV4U3RyaWN0KHZhbHVlLmdhcykpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIWlzSGV4U3RyaWN0KHZhbHVlLnZhbHVlKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghaXNIZXhTdHJpY3QodmFsdWUuaW5wdXQpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHZhbHVlLmNoYWluSWQgJiYgIWlzSGV4U3RyaWN0KHZhbHVlLmNoYWluSWQpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNBY2Nlc3NMaXN0RW50cnkodmFsdWUpIHtcbiAgICBpZiAoIWlzTnVsbGlzaCh2YWx1ZS5hZGRyZXNzKSAmJiAhaXNBZGRyZXNzKHZhbHVlLmFkZHJlc3MpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFpc051bGxpc2godmFsdWUuc3RvcmFnZUtleXMpICYmXG4gICAgICAgICF2YWx1ZS5zdG9yYWdlS2V5cy5ldmVyeShzdG9yYWdlS2V5ID0+IGlzSGV4U3RyaW5nMzJCeXRlcyhzdG9yYWdlS2V5KSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0FjY2Vzc0xpc3QodmFsdWUpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpIHx8XG4gICAgICAgICF2YWx1ZS5ldmVyeShhY2Nlc3NMaXN0RW50cnkgPT4gaXNBY2Nlc3NMaXN0RW50cnkoYWNjZXNzTGlzdEVudHJ5KSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1RyYW5zYWN0aW9uMTU1OVVuc2lnbmVkKHZhbHVlKSB7XG4gICAgaWYgKCFpc0Jhc2VUcmFuc2FjdGlvbih2YWx1ZSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIWlzSGV4U3RyaWN0KHZhbHVlLm1heEZlZVBlckdhcykpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIWlzSGV4U3RyaWN0KHZhbHVlLm1heFByaW9yaXR5RmVlUGVyR2FzKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghaXNBY2Nlc3NMaXN0KHZhbHVlLmFjY2Vzc0xpc3QpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNUcmFuc2FjdGlvbjI5MzBVbnNpZ25lZCh2YWx1ZSkge1xuICAgIGlmICghaXNCYXNlVHJhbnNhY3Rpb24odmFsdWUpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFpc0hleFN0cmljdCh2YWx1ZS5nYXNQcmljZSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIWlzQWNjZXNzTGlzdCh2YWx1ZS5hY2Nlc3NMaXN0KSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVHJhbnNhY3Rpb25MZWdhY3lVbnNpZ25lZCh2YWx1ZSkge1xuICAgIGlmICghaXNCYXNlVHJhbnNhY3Rpb24odmFsdWUpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFpc0hleFN0cmljdCh2YWx1ZS5nYXNQcmljZSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1RyYW5zYWN0aW9uV2l0aFNlbmRlcih2YWx1ZSkge1xuICAgIGlmICghaXNBZGRyZXNzKHZhbHVlLmZyb20pKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFpc0Jhc2VUcmFuc2FjdGlvbih2YWx1ZSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIWlzVHJhbnNhY3Rpb24xNTU5VW5zaWduZWQodmFsdWUpICYmXG4gICAgICAgICFpc1RyYW5zYWN0aW9uMjkzMFVuc2lnbmVkKHZhbHVlKSAmJlxuICAgICAgICAhaXNUcmFuc2FjdGlvbkxlZ2FjeVVuc2lnbmVkKHZhbHVlKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlVHJhbnNhY3Rpb25XaXRoU2VuZGVyKHZhbHVlKSB7XG4gICAgaWYgKCFpc1RyYW5zYWN0aW9uV2l0aFNlbmRlcih2YWx1ZSkpXG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkVHJhbnNhY3Rpb25XaXRoU2VuZGVyKHZhbHVlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1RyYW5zYWN0aW9uQ2FsbCh2YWx1ZSkge1xuICAgIGlmICghaXNOdWxsaXNoKHZhbHVlLmZyb20pICYmICFpc0FkZHJlc3ModmFsdWUuZnJvbSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIWlzQWRkcmVzcyh2YWx1ZS50bykpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIWlzTnVsbGlzaCh2YWx1ZS5nYXMpICYmICFpc0hleFN0cmljdCh2YWx1ZS5nYXMpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFpc051bGxpc2godmFsdWUuZ2FzUHJpY2UpICYmICFpc0hleFN0cmljdCh2YWx1ZS5nYXNQcmljZSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoIWlzTnVsbGlzaCh2YWx1ZS52YWx1ZSkgJiYgIWlzSGV4U3RyaWN0KHZhbHVlLnZhbHVlKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghaXNOdWxsaXNoKHZhbHVlLmRhdGEpICYmICFpc0hleFN0cmljdCh2YWx1ZS5kYXRhKSlcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghaXNOdWxsaXNoKHZhbHVlLmlucHV0KSAmJiAhaXNIZXhTdHJpY3QodmFsdWUuaW5wdXQpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFpc051bGxpc2godmFsdWUudHlwZSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoaXNUcmFuc2FjdGlvbjE1NTlVbnNpZ25lZCh2YWx1ZSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoaXNUcmFuc2FjdGlvbjI5MzBVbnNpZ25lZCh2YWx1ZSkpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVRyYW5zYWN0aW9uQ2FsbCh2YWx1ZSkge1xuICAgIGlmICghaXNUcmFuc2FjdGlvbkNhbGwodmFsdWUpKVxuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFRyYW5zYWN0aW9uQ2FsbCh2YWx1ZSk7XG59XG5leHBvcnQgY29uc3QgdmFsaWRhdGVDdXN0b21DaGFpbkluZm8gPSAodHJhbnNhY3Rpb24pID0+IHtcbiAgICBpZiAoIWlzTnVsbGlzaCh0cmFuc2FjdGlvbi5jb21tb24pKSB7XG4gICAgICAgIGlmIChpc051bGxpc2godHJhbnNhY3Rpb24uY29tbW9uLmN1c3RvbUNoYWluKSlcbiAgICAgICAgICAgIHRocm93IG5ldyBNaXNzaW5nQ3VzdG9tQ2hhaW5FcnJvcigpO1xuICAgICAgICBpZiAoaXNOdWxsaXNoKHRyYW5zYWN0aW9uLmNvbW1vbi5jdXN0b21DaGFpbi5jaGFpbklkKSlcbiAgICAgICAgICAgIHRocm93IG5ldyBNaXNzaW5nQ3VzdG9tQ2hhaW5JZEVycm9yKCk7XG4gICAgICAgIGlmICghaXNOdWxsaXNoKHRyYW5zYWN0aW9uLmNoYWluSWQpICYmXG4gICAgICAgICAgICB0cmFuc2FjdGlvbi5jaGFpbklkICE9PSB0cmFuc2FjdGlvbi5jb21tb24uY3VzdG9tQ2hhaW4uY2hhaW5JZClcbiAgICAgICAgICAgIHRocm93IG5ldyBDaGFpbklkTWlzbWF0Y2hFcnJvcih7XG4gICAgICAgICAgICAgICAgdHhDaGFpbklkOiB0cmFuc2FjdGlvbi5jaGFpbklkLFxuICAgICAgICAgICAgICAgIGN1c3RvbUNoYWluSWQ6IHRyYW5zYWN0aW9uLmNvbW1vbi5jdXN0b21DaGFpbi5jaGFpbklkLFxuICAgICAgICAgICAgfSk7XG4gICAgfVxufTtcbmV4cG9ydCBjb25zdCB2YWxpZGF0ZUNoYWluSW5mbyA9ICh0cmFuc2FjdGlvbikgPT4ge1xuICAgIGlmICghaXNOdWxsaXNoKHRyYW5zYWN0aW9uLmNvbW1vbikgJiZcbiAgICAgICAgIWlzTnVsbGlzaCh0cmFuc2FjdGlvbi5jaGFpbikgJiZcbiAgICAgICAgIWlzTnVsbGlzaCh0cmFuc2FjdGlvbi5oYXJkZm9yaykpIHtcbiAgICAgICAgdGhyb3cgbmV3IENvbW1vbk9yQ2hhaW5BbmRIYXJkZm9ya0Vycm9yKCk7XG4gICAgfVxuICAgIGlmICgoIWlzTnVsbGlzaCh0cmFuc2FjdGlvbi5jaGFpbikgJiYgaXNOdWxsaXNoKHRyYW5zYWN0aW9uLmhhcmRmb3JrKSkgfHxcbiAgICAgICAgKCFpc051bGxpc2godHJhbnNhY3Rpb24uaGFyZGZvcmspICYmIGlzTnVsbGlzaCh0cmFuc2FjdGlvbi5jaGFpbikpKVxuICAgICAgICB0aHJvdyBuZXcgTWlzc2luZ0NoYWluT3JIYXJkZm9ya0Vycm9yKHtcbiAgICAgICAgICAgIGNoYWluOiB0cmFuc2FjdGlvbi5jaGFpbixcbiAgICAgICAgICAgIGhhcmRmb3JrOiB0cmFuc2FjdGlvbi5oYXJkZm9yayxcbiAgICAgICAgfSk7XG59O1xuZXhwb3J0IGNvbnN0IHZhbGlkYXRlQmFzZUNoYWluID0gKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgaWYgKCFpc051bGxpc2godHJhbnNhY3Rpb24uY29tbW9uKSlcbiAgICAgICAgaWYgKCFpc051bGxpc2godHJhbnNhY3Rpb24uY29tbW9uLmJhc2VDaGFpbikpXG4gICAgICAgICAgICBpZiAoIWlzTnVsbGlzaCh0cmFuc2FjdGlvbi5jaGFpbikgJiZcbiAgICAgICAgICAgICAgICB0cmFuc2FjdGlvbi5jaGFpbiAhPT0gdHJhbnNhY3Rpb24uY29tbW9uLmJhc2VDaGFpbikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBDaGFpbk1pc21hdGNoRXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICB0eENoYWluOiB0cmFuc2FjdGlvbi5jaGFpbixcbiAgICAgICAgICAgICAgICAgICAgYmFzZUNoYWluOiB0cmFuc2FjdGlvbi5jb21tb24uYmFzZUNoYWluLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxufTtcbmV4cG9ydCBjb25zdCB2YWxpZGF0ZUhhcmRmb3JrID0gKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgaWYgKCFpc051bGxpc2godHJhbnNhY3Rpb24uY29tbW9uKSlcbiAgICAgICAgaWYgKCFpc051bGxpc2godHJhbnNhY3Rpb24uY29tbW9uLmhhcmRmb3JrKSlcbiAgICAgICAgICAgIGlmICghaXNOdWxsaXNoKHRyYW5zYWN0aW9uLmhhcmRmb3JrKSAmJlxuICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uLmhhcmRmb3JrICE9PSB0cmFuc2FjdGlvbi5jb21tb24uaGFyZGZvcmspIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgSGFyZGZvcmtNaXNtYXRjaEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgdHhIYXJkZm9yazogdHJhbnNhY3Rpb24uaGFyZGZvcmssXG4gICAgICAgICAgICAgICAgICAgIGNvbW1vbkhhcmRmb3JrOiB0cmFuc2FjdGlvbi5jb21tb24uaGFyZGZvcmssXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG59O1xuZXhwb3J0IGNvbnN0IHZhbGlkYXRlTGVnYWN5R2FzID0gKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgaWYgKFxuICAgIC8vIFRoaXMgY2hlY2sgaXMgdmVyaWZ5aW5nIGdhcyBhbmQgZ2FzUHJpY2UgYXJlbid0IGxlc3MgdGhhbiAwLlxuICAgIGlzTnVsbGlzaCh0cmFuc2FjdGlvbi5nYXMpIHx8XG4gICAgICAgICFpc1VJbnQodHJhbnNhY3Rpb24uZ2FzKSB8fFxuICAgICAgICBpc051bGxpc2godHJhbnNhY3Rpb24uZ2FzUHJpY2UpIHx8XG4gICAgICAgICFpc1VJbnQodHJhbnNhY3Rpb24uZ2FzUHJpY2UpKVxuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZEdhc09yR2FzUHJpY2Uoe1xuICAgICAgICAgICAgZ2FzOiB0cmFuc2FjdGlvbi5nYXMsXG4gICAgICAgICAgICBnYXNQcmljZTogdHJhbnNhY3Rpb24uZ2FzUHJpY2UsXG4gICAgICAgIH0pO1xuICAgIGlmICghaXNOdWxsaXNoKHRyYW5zYWN0aW9uLm1heEZlZVBlckdhcykgfHwgIWlzTnVsbGlzaCh0cmFuc2FjdGlvbi5tYXhQcmlvcml0eUZlZVBlckdhcykpXG4gICAgICAgIHRocm93IG5ldyBVbnN1cHBvcnRlZEZlZU1hcmtldEVycm9yKHtcbiAgICAgICAgICAgIG1heEZlZVBlckdhczogdHJhbnNhY3Rpb24ubWF4RmVlUGVyR2FzLFxuICAgICAgICAgICAgbWF4UHJpb3JpdHlGZWVQZXJHYXM6IHRyYW5zYWN0aW9uLm1heFByaW9yaXR5RmVlUGVyR2FzLFxuICAgICAgICB9KTtcbn07XG5leHBvcnQgY29uc3QgdmFsaWRhdGVGZWVNYXJrZXRHYXMgPSAodHJhbnNhY3Rpb24pID0+IHtcbiAgICAvLyBUaGVzZSBlcnJvcnMgY29tZSBmcm9tIDEueCwgc28gdGhleSBtdXN0IGJlIGNoZWNrZWQgYmVmb3JlXG4gICAgLy8gSW52YWxpZE1heFByaW9yaXR5RmVlUGVyR2FzT3JNYXhGZWVQZXJHYXMgdG8gdGhyb3cgdGhlIHNhbWUgZXJyb3JcbiAgICAvLyBmb3IgdGhlIHNhbWUgY29kZSBleGVjdXRpbmcgaW4gMS54XG4gICAgaWYgKCFpc051bGxpc2godHJhbnNhY3Rpb24uZ2FzUHJpY2UpICYmIHRyYW5zYWN0aW9uLnR5cGUgPT09ICcweDInKVxuICAgICAgICB0aHJvdyBuZXcgRWlwMTU1OUdhc1ByaWNlRXJyb3IodHJhbnNhY3Rpb24uZ2FzUHJpY2UpO1xuICAgIGlmICh0cmFuc2FjdGlvbi50eXBlID09PSAnMHgwJyB8fCB0cmFuc2FjdGlvbi50eXBlID09PSAnMHgxJylcbiAgICAgICAgdGhyb3cgbmV3IFVuc3VwcG9ydGVkRmVlTWFya2V0RXJyb3Ioe1xuICAgICAgICAgICAgbWF4RmVlUGVyR2FzOiB0cmFuc2FjdGlvbi5tYXhGZWVQZXJHYXMsXG4gICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhczogdHJhbnNhY3Rpb24ubWF4UHJpb3JpdHlGZWVQZXJHYXMsXG4gICAgICAgIH0pO1xuICAgIGlmIChpc051bGxpc2godHJhbnNhY3Rpb24ubWF4RmVlUGVyR2FzKSB8fFxuICAgICAgICAhaXNVSW50KHRyYW5zYWN0aW9uLm1heEZlZVBlckdhcykgfHxcbiAgICAgICAgaXNOdWxsaXNoKHRyYW5zYWN0aW9uLm1heFByaW9yaXR5RmVlUGVyR2FzKSB8fFxuICAgICAgICAhaXNVSW50KHRyYW5zYWN0aW9uLm1heFByaW9yaXR5RmVlUGVyR2FzKSlcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWRNYXhQcmlvcml0eUZlZVBlckdhc09yTWF4RmVlUGVyR2FzKHtcbiAgICAgICAgICAgIG1heFByaW9yaXR5RmVlUGVyR2FzOiB0cmFuc2FjdGlvbi5tYXhQcmlvcml0eUZlZVBlckdhcyxcbiAgICAgICAgICAgIG1heEZlZVBlckdhczogdHJhbnNhY3Rpb24ubWF4RmVlUGVyR2FzLFxuICAgICAgICB9KTtcbn07XG4vKipcbiAqIFRoaXMgbWV0aG9kIGNoZWNrcyBpZiBhbGwgcmVxdWlyZWQgZ2FzIHByb3BlcnRpZXMgYXJlIHByZXNlbnQgZm9yIGVpdGhlclxuICogbGVnYWN5IGdhcyAodHlwZSAweDAgYW5kIDB4MSkgT1IgZmVlIG1hcmtldCB0cmFuc2FjdGlvbnMgKDB4MilcbiAqL1xuZXhwb3J0IGNvbnN0IHZhbGlkYXRlR2FzID0gKHRyYW5zYWN0aW9uKSA9PiB7XG4gICAgY29uc3QgZ2FzUHJlc2VudCA9ICFpc051bGxpc2godHJhbnNhY3Rpb24uZ2FzKSB8fCAhaXNOdWxsaXNoKHRyYW5zYWN0aW9uLmdhc0xpbWl0KTtcbiAgICBjb25zdCBsZWdhY3lHYXNQcmVzZW50ID0gZ2FzUHJlc2VudCAmJiAhaXNOdWxsaXNoKHRyYW5zYWN0aW9uLmdhc1ByaWNlKTtcbiAgICBjb25zdCBmZWVNYXJrZXRHYXNQcmVzZW50ID0gZ2FzUHJlc2VudCAmJlxuICAgICAgICAhaXNOdWxsaXNoKHRyYW5zYWN0aW9uLm1heFByaW9yaXR5RmVlUGVyR2FzKSAmJlxuICAgICAgICAhaXNOdWxsaXNoKHRyYW5zYWN0aW9uLm1heEZlZVBlckdhcyk7XG4gICAgaWYgKCFsZWdhY3lHYXNQcmVzZW50ICYmICFmZWVNYXJrZXRHYXNQcmVzZW50KVxuICAgICAgICB0aHJvdyBuZXcgTWlzc2luZ0dhc0Vycm9yKHtcbiAgICAgICAgICAgIGdhczogdHJhbnNhY3Rpb24uZ2FzLFxuICAgICAgICAgICAgZ2FzUHJpY2U6IHRyYW5zYWN0aW9uLmdhc1ByaWNlLFxuICAgICAgICAgICAgbWF4UHJpb3JpdHlGZWVQZXJHYXM6IHRyYW5zYWN0aW9uLm1heFByaW9yaXR5RmVlUGVyR2FzLFxuICAgICAgICAgICAgbWF4RmVlUGVyR2FzOiB0cmFuc2FjdGlvbi5tYXhGZWVQZXJHYXMsXG4gICAgICAgIH0pO1xuICAgIGlmIChsZWdhY3lHYXNQcmVzZW50ICYmIGZlZU1hcmtldEdhc1ByZXNlbnQpXG4gICAgICAgIHRocm93IG5ldyBUcmFuc2FjdGlvbkdhc01pc21hdGNoRXJyb3Ioe1xuICAgICAgICAgICAgZ2FzOiB0cmFuc2FjdGlvbi5nYXMsXG4gICAgICAgICAgICBnYXNQcmljZTogdHJhbnNhY3Rpb24uZ2FzUHJpY2UsXG4gICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhczogdHJhbnNhY3Rpb24ubWF4UHJpb3JpdHlGZWVQZXJHYXMsXG4gICAgICAgICAgICBtYXhGZWVQZXJHYXM6IHRyYW5zYWN0aW9uLm1heEZlZVBlckdhcyxcbiAgICAgICAgfSk7XG4gICAgKGxlZ2FjeUdhc1ByZXNlbnQgPyB2YWxpZGF0ZUxlZ2FjeUdhcyA6IHZhbGlkYXRlRmVlTWFya2V0R2FzKSh0cmFuc2FjdGlvbik7XG4gICAgKCFpc051bGxpc2godHJhbnNhY3Rpb24udHlwZSkgJiYgdHJhbnNhY3Rpb24udHlwZSA+ICcweDEnXG4gICAgICAgID8gdmFsaWRhdGVGZWVNYXJrZXRHYXNcbiAgICAgICAgOiB2YWxpZGF0ZUxlZ2FjeUdhcykodHJhbnNhY3Rpb24pO1xufTtcbmV4cG9ydCBjb25zdCB2YWxpZGF0ZVRyYW5zYWN0aW9uRm9yU2lnbmluZyA9ICh0cmFuc2FjdGlvbiwgb3ZlcnJpZGVNZXRob2QpID0+IHtcbiAgICBpZiAoIWlzTnVsbGlzaChvdmVycmlkZU1ldGhvZCkpIHtcbiAgICAgICAgb3ZlcnJpZGVNZXRob2QodHJhbnNhY3Rpb24pO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdHJhbnNhY3Rpb24gIT09ICdvYmplY3QnIHx8IGlzTnVsbGlzaCh0cmFuc2FjdGlvbikpXG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkVHJhbnNhY3Rpb25PYmplY3RFcnJvcih0cmFuc2FjdGlvbik7XG4gICAgdmFsaWRhdGVDdXN0b21DaGFpbkluZm8odHJhbnNhY3Rpb24pO1xuICAgIHZhbGlkYXRlQ2hhaW5JbmZvKHRyYW5zYWN0aW9uKTtcbiAgICB2YWxpZGF0ZUJhc2VDaGFpbih0cmFuc2FjdGlvbik7XG4gICAgdmFsaWRhdGVIYXJkZm9yayh0cmFuc2FjdGlvbik7XG4gICAgY29uc3QgZm9ybWF0dGVkVHJhbnNhY3Rpb24gPSBmb3JtYXRUcmFuc2FjdGlvbih0cmFuc2FjdGlvbiwgRVRIX0RBVEFfRk9STUFUKTtcbiAgICB2YWxpZGF0ZUdhcyhmb3JtYXR0ZWRUcmFuc2FjdGlvbik7XG4gICAgaWYgKGlzTnVsbGlzaChmb3JtYXR0ZWRUcmFuc2FjdGlvbi5ub25jZSkgfHxcbiAgICAgICAgaXNOdWxsaXNoKGZvcm1hdHRlZFRyYW5zYWN0aW9uLmNoYWluSWQpIHx8XG4gICAgICAgIGZvcm1hdHRlZFRyYW5zYWN0aW9uLm5vbmNlLnN0YXJ0c1dpdGgoJy0nKSB8fFxuICAgICAgICBmb3JtYXR0ZWRUcmFuc2FjdGlvbi5jaGFpbklkLnN0YXJ0c1dpdGgoJy0nKSlcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWROb25jZU9yQ2hhaW5JZEVycm9yKHtcbiAgICAgICAgICAgIG5vbmNlOiB0cmFuc2FjdGlvbi5ub25jZSxcbiAgICAgICAgICAgIGNoYWluSWQ6IHRyYW5zYWN0aW9uLmNoYWluSWQsXG4gICAgICAgIH0pO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbGlkYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/validation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/web3_eth.js":
/*!***************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/web3_eth.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Web3Eth: () => (/* binding */ Web3Eth),\n/* harmony export */   registeredSubscriptions: () => (/* binding */ registeredSubscriptions)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(ssr)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-rpc-methods */ \"(ssr)/./node_modules/web3-rpc-methods/lib/esm/index.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/rpc_method_wrappers.js\");\n/* harmony import */ var _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./web3_subscriptions.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/web3_subscriptions.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// Disabling because returnTypes must be last param to match 1.x params\n/* eslint-disable default-param-last */\n\n\n\n\n\n\n\nconst registeredSubscriptions = {\n    logs: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.LogsSubscription,\n    newPendingTransactions: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.NewPendingTransactionsSubscription,\n    newHeads: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.NewHeadsSubscription,\n    syncing: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.SyncingSubscription,\n    pendingTransactions: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.NewPendingTransactionsSubscription,\n    newBlockHeaders: _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.NewHeadsSubscription, // the same as newHeads. just for support API like in version 1.x\n};\n/**\n *\n * The Web3Eth allows you to interact with an Ethereum blockchain.\n *\n * For using Web3 Eth functions, first install Web3 package using `npm i web3` or `yarn add web3` based on your package manager usage.\n * After that, Web3 Eth functions will be available as mentioned in following snippet.\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3('https://mainnet.infura.io/v3/<YOURPROJID>');\n *\n * const block = await web3.eth.getBlock(0);\n *\n * ```\n *\n * For using individual package install `web3-eth` package using `npm i web3-eth` or `yarn add web3-eth` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import { Web3Eth } from 'web3-eth';\n *\n * const eth = new Web3Eth('https://mainnet.infura.io/v3/<YOURPROJID>');\n * const block = await eth.getBlock(0);\n *\n * ```\n */\nclass Web3Eth extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Context {\n    constructor(providerOrContext) {\n        if (typeof providerOrContext === 'string' ||\n            (0,web3_core__WEBPACK_IMPORTED_MODULE_1__.isSupportedProvider)(providerOrContext)) {\n            // @ts-expect-error disable the error: \"A 'super' call must be a root-level statement within a constructor of a derived class that contains initialized properties, parameter properties, or private identifiers.\"\n            super({\n                provider: providerOrContext,\n                registeredSubscriptions,\n            });\n            return;\n        }\n        if (providerOrContext.registeredSubscriptions) {\n            super(providerOrContext);\n            return;\n        }\n        super(Object.assign(Object.assign({}, providerOrContext), { registeredSubscriptions }));\n        // an alias for calculateFeeData\n        // eslint-disable-next-line\n        this.getFeeData = this.calculateFeeData;\n    }\n    setTransactionMiddleware(transactionMiddleware) {\n        this.transactionMiddleware = transactionMiddleware;\n    }\n    getTransactionMiddleware() {\n        return this.transactionMiddleware;\n    }\n    /**\n     * @returns Returns the ethereum protocol version of the node.\n     *\n     * ```ts\n     * web3.eth.getProtocolVersion().then(console.log);\n     * > \"63\"\n     * ```\n     */\n    getProtocolVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getProtocolVersion(this.requestManager);\n        });\n    }\n    // TODO Add returnFormat parameter\n    /**\n     * Checks if the node is currently syncing.\n     *\n     * @returns Either a {@link SyncingStatusAPI}, or `false`.\n     *\n     * ```ts\n     * web3.eth.isSyncing().then(console.log);\n     * > {\n     *     startingBlock: 100,\n     *     currentBlock: 312,\n     *     highestBlock: 512,\n     *     knownStates: 234566,\n     *     pulledStates: 123455\n     * }\n     * ```\n     */\n    isSyncing() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getSyncing(this.requestManager);\n        });\n    }\n    // TODO consider adding returnFormat parameter (to format address as bytes)\n    /**\n     * @returns Returns the coinbase address to which mining rewards will go.\n     *\n     * ```ts\n     * web3.eth.getCoinbase().then(console.log);\n     * > \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\"\n     * ```\n     */\n    getCoinbase() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getCoinbase(this.requestManager);\n        });\n    }\n    /**\n     * Checks whether the node is mining or not.\n     *\n     * @returns `true` if the node is mining, otherwise `false`.\n     *\n     * ```ts\n     * web3.eth.isMining().then(console.log);\n     * > true\n     * ```\n     */\n    isMining() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getMining(this.requestManager);\n        });\n    }\n    /**\n     * @deprecated Will be removed in the future, please use {@link Web3Eth.getHashRate} method instead.\n     *\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of hashes per second that the node is mining with.\n     *\n     * ```ts\n     * web3.eth.getHashrate().then(console.log);\n     * > 493736n\n     *\n     * web3.eth.getHashrate({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x788a8\"\n     * ```\n     */\n    getHashrate(returnFormat) {\n        var _a;\n        if (returnFormat === void 0) { returnFormat = ((_a = this.defaultReturnFormat) !== null && _a !== void 0 ? _a : web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT); }\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getHashRate(returnFormat);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of hashes per second that the node is mining with.\n     *\n     * ```ts\n     * web3.eth.getHashRate().then(console.log);\n     * > 493736n\n     *\n     * web3.eth.getHashRate({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x788a8\"\n     * ```\n     */\n    getHashRate(returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getHashRate(this, returnFormat);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The gas price determined by the last few blocks median gas price.\n     *\n     * ```ts\n     * web3.eth.getGasPrice().then(console.log);\n     * > 20000000000n\n     *\n     * web3.eth.getGasPrice({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x4a817c800\"\n     * ```\n     */\n    getGasPrice(returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getGasPrice(this, returnFormat);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns the current maxPriorityFeePerGas per gas in wei.\n     *\n     * ```ts\n     * web3.eth.getMaxPriorityFeePerGas().then(console.log);\n     * > 20000000000n\n     *\n     * web3.eth.getMaxPriorityFeePerGas({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0x4a817c800\"\n     * ```\n     */\n    getMaxPriorityFeePerGas(returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getMaxPriorityFeePerGas(this, returnFormat);\n        });\n    }\n    /**\n     * Calculates the current Fee Data.\n     * If the node supports EIP-1559, then the `maxFeePerGas` and `maxPriorityFeePerGas` will be calculated.\n     * If the node does not support EIP-1559, then the `gasPrice` will be returned and the rest are `null`s.\n     *\n     * @param baseFeePerGasFactor The factor to multiply the baseFeePerGas with, if the node supports EIP-1559.\n     * @param alternativeMaxPriorityFeePerGas The alternative maxPriorityFeePerGas to use, if the node supports EIP-1559, but does not support the method `eth_maxPriorityFeePerGas`.\n     * @returns The current fee data.\n     *\n     * ```ts\n     * web3.eth.calculateFeeData().then(console.log);\n     * > {\n     *     gasPrice: 20000000000n,\n     *     maxFeePerGas: 20000000000n,\n     *     maxPriorityFeePerGas: 20000000000n,\n     * \t   baseFeePerGas: 20000000000n\n     * }\n     *\n     * web3.eth.calculateFeeData(ethUnitMap.Gwei, 2n).then(console.log);\n     * > {\n     *     gasPrice: 20000000000n,\n     *     maxFeePerGas: 40000000000n,\n     *     maxPriorityFeePerGas: 20000000000n,\n     * \t   baseFeePerGas: 20000000000n\n     * }\n     * ```\n     */\n    calculateFeeData(baseFeePerGasFactor = BigInt(2), alternativeMaxPriorityFeePerGas = web3_utils__WEBPACK_IMPORTED_MODULE_3__.ethUnitMap.Gwei) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const block = yield this.getBlock(undefined, false);\n            const baseFeePerGas = (_a = block === null || block === void 0 ? void 0 : block.baseFeePerGas) !== null && _a !== void 0 ? _a : undefined; // use undefined if it was null\n            let gasPrice;\n            try {\n                gasPrice = yield this.getGasPrice();\n            }\n            catch (error) {\n                // do nothing\n            }\n            let maxPriorityFeePerGas;\n            try {\n                maxPriorityFeePerGas = yield this.getMaxPriorityFeePerGas();\n            }\n            catch (error) {\n                // do nothing\n            }\n            let maxFeePerGas;\n            // if the `block.baseFeePerGas` is available, then EIP-1559 is supported\n            // and we can calculate the `maxFeePerGas` from the `block.baseFeePerGas`\n            if (baseFeePerGas) {\n                // tip the miner with alternativeMaxPriorityFeePerGas, if no value available from getMaxPriorityFeePerGas\n                maxPriorityFeePerGas = maxPriorityFeePerGas !== null && maxPriorityFeePerGas !== void 0 ? maxPriorityFeePerGas : alternativeMaxPriorityFeePerGas;\n                // basically maxFeePerGas = (baseFeePerGas +- 12.5%) + maxPriorityFeePerGas\n                // and we multiply the `baseFeePerGas` by `baseFeePerGasFactor`, to allow\n                // trying to include the transaction in the next few blocks even if the\n                // baseFeePerGas is increasing fast\n                maxFeePerGas = baseFeePerGas * baseFeePerGasFactor + maxPriorityFeePerGas;\n            }\n            return { gasPrice, maxFeePerGas, maxPriorityFeePerGas, baseFeePerGas };\n        });\n    }\n    /**\n     * @returns A list of accounts the node controls (addresses are checksummed).\n     *\n     * ```ts\n     * web3.eth.getAccounts().then(console.log);\n     * > [\"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\", \"0xDCc6960376d6C6dEa93647383FfB245CfCed97Cf\"]\n     * ```\n     */\n    getAccounts() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const hexAddresses = (_a = (yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getAccounts(this.requestManager))) !== null && _a !== void 0 ? _a : [];\n            return hexAddresses.map(address => (0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.toChecksumAddress)(address));\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The current block number.\n     *\n     * ```ts\n     * web3.eth.getBlockNumber().then(console.log);\n     * > 2744n\n     *\n     * web3.eth.getBlockNumber({ number: FMT_NUMBER.HEX , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > \"0xab8\"\n     * ```\n     */\n    getBlockNumber(returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlockNumber(this, returnFormat);\n        });\n    }\n    /**\n     * Get the balance of an address at a given block.\n     *\n     * @param address The address to get the balance of.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the balance query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The current balance for the given address in `wei`.\n     *\n     * ```ts\n     * web3.eth.getBalance(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1000000000000n\n     *\n     * web3.eth.getBalance(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > \"0xe8d4a51000\"\n     * ```\n     */\n    getBalance(address, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBalance(this, address, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Get the storage at a specific position of an address.\n     *\n     * @param address The address to get the storage from.\n     * @param storageSlot The index position of the storage.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the storage query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The value in storage at the given position.\n     *\n     * ```ts\n     * web3.eth.getStorageAt(\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\", 0).then(console.log);\n     * > \"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"\n     *\n     * web3.eth.getStorageAt(\n     *      \"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\",\n     *      0,\n     *      undefined,\n     *      { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.UINT8ARRAY }\n     * ).then(console.log);\n     * > Uint8Array(31) [\n     *       3, 52,  86, 115,  33,  35, 255, 255,\n     *       35, 66,  52,  45, 209,  35,  66,  67,\n     *       67, 36,  35,  66,  52, 253,  35,  79,\n     *       210, 63, 212, 242,  61,  66,  52\n     *    ]\n     * ```\n     */\n    getStorageAt(address, storageSlot, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getStorageAt(this, address, storageSlot, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Get the code at a specific address.\n     *\n     * @param address The address to get the code from.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the code query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The [data](https://ethereum.org/en/developers/docs/transactions/#the-data-field) at the provided `address`.\n     *\n     * ```ts\n     * web3.eth.getCode(\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\").then(console.log);\n     * > \"0x600160008035811a818181146012578301005b601b6001356025565b8060005260206000f25b600060078202905091905056\"\n     *\n     * web3.eth.getCode(\n     *      \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *      undefined,\n     *      { number: FMT_NUMBER.HEX , bytes: FMT_BYTES.UINT8ARRAY }\n     * ).then(console.log);\n     * > Uint8Array(50) [\n     *   96,  1,  96,   0, 128, 53, 129, 26, 129, 129, 129,\n     *   20, 96,  18,  87, 131,  1,   0, 91,  96,  27,  96,\n     *   1, 53,  96,  37,  86, 91, 128, 96,   0,  82,  96,\n     *   32, 96,   0, 242,  91, 96,   0, 96,   7, 130,   2,\n     *   144, 80, 145, 144,  80, 86\n     * ]\n     * ```\n     */\n    getCode(address, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getCode(this, address, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Retrieves a {@link Block} matching the provided block number, block hash or block tag.\n     *\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param hydrated If specified `true`, the returned block will contain all transactions as objects. If `false` it will only contain transaction hashes.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted (does not format transaction objects or hashes).\n     * @returns A {@link Block} object matching the provided block number or block hash.\n     *\n     * ```ts\n     * web3.eth.getBlock(0).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1n,\n     *    number: 0n,\n     *    gasLimit: 30000000n,\n     *    gasUsed: 0n,\n     *    timestamp: 1658281638n,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0n,\n     *    totalDifficulty: 1n,\n     *    baseFeePerGas: 1000000000n,\n     *    size: 514n,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     *\n     * web3.eth.getBlock(\n     *      \"0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d\",\n     *      false,\n     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1,\n     *    number: 0,\n     *    gasLimit: 30000000,\n     *    gasUsed: 0,\n     *    timestamp: 1658281638,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0,\n     *    totalDifficulty: 1,\n     *    baseFeePerGas: 1000000000,\n     *    size: 514,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     * ```\n     */\n    getBlock(block = this.defaultBlock, hydrated = false, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlock(this, block, hydrated, returnFormat);\n        });\n    }\n    /**\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of transactions in the provided block.\n     *\n     * ```ts\n     * web3.eth.getBlockTransactionCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1n\n     *\n     * web3.eth.getBlockTransactionCount(\n     *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > 1\n     * ```\n     */\n    getBlockTransactionCount(block = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlockTransactionCount(this, block, returnFormat);\n        });\n    }\n    /**\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of [uncles](https://ethereum.org/en/glossary/#ommer) in the provided block.\n     *\n     * ```ts\n     * web3.eth.getBlockUncleCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1n\n     *\n     * web3.eth.getBlockUncleCount(\n     *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > 1\n     * ```\n     */\n    getBlockUncleCount(block = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getBlockUncleCount(this, block, returnFormat);\n        });\n    }\n    /**\n     *\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param uncleIndex The index position of the uncle.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns A blocks [uncle](https://ethereum.org/en/glossary/#ommer) by a given uncle index position.\n     *\n     * ```ts\n     * web3.eth.getUncle(0, 1).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1n,\n     *    number: 0n,\n     *    gasLimit: 30000000n,\n     *    gasUsed: 0n,\n     *    timestamp: 1658281638n,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0n,\n     *    totalDifficulty: 1n,\n     *    baseFeePerGas: 1000000000n,\n     *    size: 514n,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     *\n     * web3.eth.getUncle(\n     *      \"0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d\",\n     *      1,\n     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *    hash: '0x7dbfdc6a7a67a670cb9b0c3f81ca60c007762f1e4e598cb027a470678ff26d0d',\n     *    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     *    miner: '0x0000000000000000000000000000000000000000',\n     *    stateRoot: '0x5ed9882897d363c4632a6e67fba6203df61bd994813dcf048da59be442a9c6c4',\n     *    transactionsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    receiptsRoot: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421',\n     *    logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *    difficulty: 1,\n     *    number: 0,\n     *    gasLimit: 30000000,\n     *    gasUsed: 0,\n     *    timestamp: 1658281638,\n     *    extraData: '0x',\n     *    mixHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *    nonce: 0,\n     *    totalDifficulty: 1,\n     *    baseFeePerGas: 1000000000,\n     *    size: 514,\n     *    transactions: [],\n     *    uncles: []\n     *  }\n     * ```\n     */\n    getUncle(block = this.defaultBlock, uncleIndex, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getUncle(this, block, uncleIndex, returnFormat);\n        });\n    }\n    /**\n     * @param transactionHash The hash of the desired transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The desired transaction object.\n     *\n     * ```ts\n     * web3.eth.getTransaction('0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc').then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0n,\n     *    nonce: 0n,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1n,\n     *    transactionIndex: 0n,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1n,\n     *    gas: 90000n,\n     *    gasPrice: 2000000000n,\n     *    input: '0x',\n     *    v: 2709n,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     *\n     * web3.eth.getTransaction(\n     *     web3.utils.hexToBytes(\"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"),\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0,\n     *    nonce: 0,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1,\n     *    transactionIndex: 0,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1,\n     *    gas: 90000,\n     *    gasPrice: 2000000000,\n     *    input: '0x',\n     *    v: 2709,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     * ```\n     */\n    getTransaction(transactionHash, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransaction(this, transactionHash, returnFormat);\n            if (!response)\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionNotFound();\n            return response;\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns A list of pending transactions.\n     *\n     * ```ts\n     * web3.eth.getPendingTransactions().then(console.log);\n     * > [\n     *      {\n     *          hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *          type: 0n,\n     *          nonce: 0n,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0n,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1n,\n     *          gas: 90000n,\n     *          gasPrice: 2000000000n,\n     *          input: '0x',\n     *          v: 2709n,\n     *          r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *          s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *      },\n     *      {\n     *          hash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *          type: 0n,\n     *          nonce: 1n,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0n,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1n,\n     *          gas: 90000n,\n     *          gasPrice: 2000000000n,\n     *          input: '0x',\n     *          v: 2710n,\n     *          r: '0x55ac19fade21db035a1b7ea0a8d49e265e05dbb926e75f273f836ad67ce5c96a',\n     *          s: '0x6550036a7c3fd426d5c3d35d96a7075cd673957620b7889846a980d2d017ec08'\n     *      }\n     *   ]\n     *\n     * * web3.eth.getPendingTransactions({ number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > [\n     *      {\n     *          hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *          type: 0,\n     *          nonce: 0,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1,\n     *          gas: 90000,\n     *          gasPrice: 2000000000,\n     *          input: '0x',\n     *          v: 2709,\n     *          r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *          s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *      },\n     *      {\n     *          hash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *          type: 0,\n     *          nonce: 1,\n     *          blockHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n     *          blockNumber: null,\n     *          transactionIndex: 0,\n     *          from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *          to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *          value: 1,\n     *          gas: 90000,\n     *          gasPrice: 2000000000,\n     *          input: '0x',\n     *          v: 2710,\n     *          r: '0x55ac19fade21db035a1b7ea0a8d49e265e05dbb926e75f273f836ad67ce5c96a',\n     *          s: '0x6550036a7c3fd426d5c3d35d96a7075cd673957620b7889846a980d2d017ec08'\n     *      }\n     *   ]\n     * ```\n     */\n    getPendingTransactions(returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getPendingTransactions(this, returnFormat);\n        });\n    }\n    /**\n     * @param block The {@link BlockNumberOrTag} (defaults to {@link Web3Eth.defaultBlock}) or block hash of the desired block.\n     * @param transactionIndex The index position of the transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The desired transaction object.\n     *\n     * ```ts\n     * web3.eth.getTransactionFromBlock('0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00', 0).then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0n,\n     *    nonce: 0n,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1n,\n     *    transactionIndex: 0n,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1n,\n     *    gas: 90000n,\n     *    gasPrice: 2000000000n,\n     *    input: '0x',\n     *    v: 2709n,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     *\n     * web3.eth.getTransactionFromBlock(\n     *     hexToBytes(\"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"),\n     *     0,\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * {\n     *    hash: '0x73aea70e969941f23f9d24103e91aa1f55c7964eb13daf1c9360c308a72686dc',\n     *    type: 0,\n     *    nonce: 0,\n     *    blockHash: '0x43202bd16b6bd54bea1b310736bd78bdbe93a64ad940f7586739d9eb25ad8d00',\n     *    blockNumber: 1,\n     *    transactionIndex: 0,\n     *    from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *    to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *    value: 1,\n     *    gas: 90000,\n     *    gasPrice: 2000000000,\n     *    input: '0x',\n     *    v: 2709,\n     *    r: '0x8b336c290f6d7b2af3ccb2c02203a8356cc7d5b150ab19cce549d55636a3a78c',\n     *    s: '0x5a83c6f816befc5cd4b0c997a347224a8aa002e5799c4b082a3ec726d0e9531d'\n     *  }\n     * ```\n     */\n    getTransactionFromBlock(block = this.defaultBlock, transactionIndex, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionFromBlock(this, block, transactionIndex, returnFormat);\n        });\n    }\n    /**\n     * @param transactionHash Hash of the transaction to retrieve the receipt for.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The desired {@link TransactionReceipt} object.\n     *\n     * ```ts\n     * web3.eth.getTransactionReceipt(\"0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\").then(console.log);\n     * > {\n     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *      transactionIndex: 0n,\n     *      blockNumber: 2n,\n     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      cumulativeGasUsed: 21000n,\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      effectiveGasPrice: 2000000000n,\n     *      type: 0n\n     *  }\n     *\n     * web3.eth.getTransactionReceipt(\n     *      \"0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\",\n     *      { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *      transactionIndex: 0,\n     *      blockNumber: 2,\n     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      cumulativeGasUsed: 21000,\n     *      gasUsed: 21000,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1,\n     *      effectiveGasPrice: 2000000000,\n     *      type: 0n\n     *  }\n     * ```\n     */\n    getTransactionReceipt(transactionHash, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionReceipt(this, transactionHash, returnFormat);\n            if (!response)\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.TransactionNotFound();\n            return response;\n        });\n    }\n    /**\n     * @param address The address to get the number of transactions for.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) Specifies what block to use as the current state for the query.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The number of transactions sent from the provided address.\n     *\n     * ```ts\n     * web3.eth.getTransactionCount(\"0x407d73d8a49eeb85d32cf465507dd71d507100c1\").then(console.log);\n     * > 1n\n     *\n     * web3.eth.getTransactionCount(\n     *     \"0x407d73d8a49eeb85d32cf465507dd71d507100c1\",\n     *     undefined,\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > 1\n     * ```\n     */\n    getTransactionCount(address, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getTransactionCount(this, address, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * @param transaction The {@link Transaction}, {@link TransactionWithFromLocalWalletIndex}, {@link TransactionWithToLocalWalletIndex} or {@link TransactionWithFromAndToLocalWalletIndex} to send. __Note:__ In the `to` and `from` fields when hex strings are used, it is assumed they are addresses, for any other form (number, string number, etc.) it is assumed they are wallet indexes.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @param options A configuration object used to change the behavior of the `sendTransaction` method.\n     * @returns If `await`ed or `.then`d (i.e. the promise resolves), the transaction hash is returned.\n     * ```ts\n     * const transaction = {\n     *   from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *   to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n     *   value: '0x1'\n     * }\n     *\n     * const transactionHash = await web3.eth.sendTransaction(transaction);\n     * console.log(transactionHash);\n     * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n     *\n     * web3.eth.sendTransaction(transaction).then(console.log);\n     * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n     *\n     * web3.eth.sendTransaction(transaction).catch(console.log);\n     * > <Some TransactionError>\n     *\n     * // Example using options.ignoreGasPricing = true\n     * web3.eth.sendTransaction(transaction, undefined, { ignoreGasPricing: true }).then(console.log);\n     * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n     * ```\n     *\n     *\n     * Otherwise, a {@link Web3PromiEvent} is returned which has several events than can be listened to using the `.on` syntax, such as:\n     * - `sending`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('sending', transactionToBeSent => console.log(transactionToBeSent));\n     * > {\n     *    from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *    to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n     *    value: '0x1',\n     *    gasPrice: '0x77359400',\n     *    maxPriorityFeePerGas: undefined,\n     *    maxFeePerGas: undefined\n     * }\n     * ```\n     * - `sent`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('sent', sentTransaction => console.log(sentTransaction));\n     * > {\n     *    from: '0x6E599DA0bfF7A6598AC1224E4985430Bf16458a4',\n     *    to: '0x6f1DF96865D09d21e8f3f9a7fbA3b17A11c7C53C',\n     *    value: '0x1',\n     *    gasPrice: '0x77359400',\n     *    maxPriorityFeePerGas: undefined,\n     *    maxFeePerGas: undefined\n     * }\n     * ```\n     * - `transactionHash`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('transactionHash', transactionHash => console.log(transactionHash));\n     * > 0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f\n     * ```\n     * - `receipt`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('receipt', receipt => console.log(receipt));\n     * > {\n     *      transactionHash: '0xdf7756865c2056ce34c4eabe4eff42ad251a9f920a1c620c00b4ea0988731d3f',\n     *      transactionIndex: 0n,\n     *      blockNumber: 2n,\n     *      blockHash: '0xeb1565a08b23429552dafa92e32409f42eb43944f7611963c63ce40e7243941a',\n     *      from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *      to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *      cumulativeGasUsed: 21000n,\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      effectiveGasPrice: 2000000000n,\n     *      type: 0n\n     * }\n     * ```\n     * - `confirmation`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('confirmation', confirmation => console.log(confirmation));\n     * > {\n     *     confirmations: 1n,\n     *     receipt: {\n     *         transactionHash: '0xb4a3a35ae0f3e77ef0ff7be42010d948d011b21a4e341072ee18717b67e99ab8',\n     *         transactionIndex: 0n,\n     *         blockNumber: 5n,\n     *         blockHash: '0xb57fbe6f145cefd86a305a9a024a4351d15d4d39607d7af53d69a319bc3b5548',\n     *         from: '0x6e599da0bff7a6598ac1224e4985430bf16458a4',\n     *         to: '0x6f1df96865d09d21e8f3f9a7fba3b17a11c7c53c',\n     *         cumulativeGasUsed: 21000n,\n     *         gasUsed: 21000n,\n     *         logs: [],\n     *         logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *         status: 1n,\n     *         effectiveGasPrice: 2000000000n,\n     *         type: 0n\n     *     },\n     *     latestBlockHash: '0xb57fbe6f145cefd86a305a9a024a4351d15d4d39607d7af53d69a319bc3b5548'\n     * }\n     * ```\n     * - `error`\n     * ```ts\n     * web3.eth.sendTransaction(transaction).on('error', error => console.log);\n     * > <Some TransactionError>\n     * ```\n     */\n    sendTransaction(transaction, returnFormat = this.defaultReturnFormat, options) {\n        return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.sendTransaction(this, transaction, returnFormat, options, this.transactionMiddleware);\n    }\n    /**\n     * @param transaction Signed transaction in one of the valid {@link Bytes} format.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @param options A configuration object used to change the behavior of the method\n     * @returns If `await`ed or `.then`d (i.e. the promise resolves), the transaction hash is returned.\n     * ```ts\n     * const signedTransaction = \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n     *\n     * const transactionHash = await web3.eth.sendSignedTransaction(signedTransaction);\n     * console.log(transactionHash);\n     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n     *\n     * web3.eth.sendSignedTransaction(signedTransaction).then(console.log);\n     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n     *\n     * web3.eth.sendSignedTransaction(signedTransaction).catch(console.log);\n     * > <Some TransactionError>\n     * ```\n     *\n     *\n     * Otherwise, a {@link Web3PromiEvent} is returned which has several events than can be listened to using the `.on` syntax, such as:\n     * - `sending`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('sending', transactionToBeSent => console.log(transactionToBeSent));\n     * > \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n     * ```\n     * - `sent`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('sent', sentTransaction => console.log(sentTransaction));\n     * > \"0xf86580843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a95a03a42d53ca5b71f845e1cd4c65359b05446a85d16881372d3bfaab8980935cb04a0711497bc8dd3b541152e2fed14fe650a647f1f0edab0d386ad9506f0e642410f\"\n     * ```\n     * - `transactionHash`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('transactionHash', transactionHash => console.log(transactionHash));\n     * > 0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700\n     * ```\n     * - `receipt`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('receipt', receipt => console.log(receipt));\n     * > {\n     *      blockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081',\n     *      blockNumber: 1n,\n     *      cumulativeGasUsed: 21000n,\n     *      effectiveGasPrice: 1000000001n,\n     *      from: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      gasUsed: 21000n,\n     *      logs: [],\n     *      logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *      status: 1n,\n     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      transactionHash: '0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700',\n     *      transactionIndex: 0n,\n     *      type: 0n\n     * }\n     * ```\n     * - `confirmation`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('confirmation', confirmation => console.log(confirmation));\n     * > {\n     *     confirmations: 1n,\n     *     receipt: {\n     *          blockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081',\n     *          blockNumber: 1n,\n     *          cumulativeGasUsed: 21000n,\n     *          effectiveGasPrice: 1000000001n,\n     *          from: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *          gasUsed: 21000n,\n     *          logs: [],\n     *          logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     *          status: 1n,\n     *          to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *          transactionHash: '0xed8c241ea44d57f4605dc22c63500de46254d6c7844fd65fa438b128c80cf700',\n     *          transactionIndex: 0n,\n     *          type: 0n\n     *     },\n     *     latestBlockHash: '0xff2b1687995d81066361bc6affe4455746120a7d4bb75fc938211a2692a50081'\n     * }\n     * ```\n     * - `error`\n     * ```ts\n     * web3.eth.sendSignedTransaction(signedTransaction).on('error', error => console.log(error));\n     * > <Some TransactionError>\n     * ```\n     */\n    sendSignedTransaction(transaction, returnFormat = this.defaultReturnFormat, options) {\n        return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.sendSignedTransaction(this, transaction, returnFormat, options);\n    }\n    /**\n     * @param message Data to sign in one of the valid {@link Bytes} format.\n     * @param address Address to sign data with, can be an address or the index of a local wallet.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns The signed `message`.\n     *\n     * ```ts\n     * // Using an unlocked account managed by connected RPC client\n     * web3.eth.sign(\"0x48656c6c6f20776f726c64\", \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\").then(console.log);\n     * > \"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"\n     *\n     * // Using an unlocked account managed by connected RPC client\n     * web3.eth.sign(\"0x48656c6c6f20776f726c64\", \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\", { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.UINT8ARRAY }).then(console.log);\n     * > Uint8Array(65) [\n     *    48, 117,  94, 214,  83, 150, 250, 207, 134, 197,  62,\n     *    98,  23, 197,  43,  77, 174, 190, 114, 170,  73,  65,\n     *   216, 150,  53,  64, 157, 228, 201, 199, 249,  70, 109,\n     *    78, 154, 174, 199, 151, 127,   5, 233,  35, 136, 155,\n     *    51, 192, 208, 221,  39, 215,  34, 107, 110, 111,  86,\n     *   206, 115, 116, 101, 197, 207, 208,  75, 228,   0\n     * ]\n     * ```\n     *\n     * // Using an indexed account managed by local Web3 wallet\n     * web3.eth.sign(\"0x48656c6c6f20776f726c64\", 0).then(console.log);\n     * > \"0x30755ed65396facf86c53e6217c52b4daebe72aa4941d89635409de4c9c7f9466d4e9aaec7977f05e923889b33c0d0dd27d7226b6e6f56ce737465c5cfd04be400\"\n     */\n    sign(message, addressOrIndex, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.sign(this, message, addressOrIndex, returnFormat);\n        });\n    }\n    /**\n     * @param transaction The transaction object to sign.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) Specifies how the return data should be formatted.\n     * @returns {@link SignedTransactionInfoAPI}, an object containing the [RLP](https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/#top) encoded signed transaction (accessed via the `raw` property) and the signed transaction object (accessed via the `tx` property).\n     *\n     * ```ts\n     * const transaction = {\n     *      from: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *      to: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *      value: '0x1',\n     *      gas: '21000',\n     *      gasPrice: await web3Eth.getGasPrice(),\n     *      nonce: '0x1',\n     *      type: '0x0'\n     * }\n     *\n     * web3.eth.signTransaction(transaction).then(console.log);\n     * > {\n     *   raw: '0xf86501843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a96a0adb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679a027d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *   tx: {\n     *      type: 0n,\n     *      nonce: 1n,\n     *      gasPrice: 1000000001n,\n     *      gas: 21000n,\n     *      value: 1n,\n     *      v: 2710n,\n     *      r: '0xadb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679',\n     *      s: '0x27d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      data: '0x'\n     *   }\n     * }\n     *\n     * web3.eth.signTransaction(transaction, { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > {\n     *   raw: '0xf86501843b9aca0182520894e899f0130fd099c0b896b2ce4e5e15a25b23139a0180820a96a0adb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679a027d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *   tx: {\n     *      type: 0,\n     *      nonce: 1,\n     *      gasPrice: 1000000001,\n     *      gas: 21000,\n     *      value: 1,\n     *      v: 2710,\n     *      r: '0xadb3468dbb4dce89fe1785ea9182e85fb56b399b378f82b93af7a8a12a4f9679',\n     *      s: '0x27d37d736e9bcf00121f78b2d10e4404fa5c45856d62b746574345f5cd278097',\n     *      to: '0xe899f0130fd099c0b896b2ce4e5e15a25b23139a',\n     *      data: '0x'\n     *   }\n     * }\n     * ```\n     */\n    signTransaction(transaction, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.signTransaction(this, transaction, returnFormat);\n        });\n    }\n    // TODO Decide what to do with transaction.to\n    // https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076\n    /**\n     * Executes a message call within the EVM without creating a transaction.\n     * It does not publish anything to the blockchain and does not consume any gas.\n     *\n     * @param transaction - A transaction object where all properties are optional except `to`, however it's recommended to include the `from` property or it may default to `0x0000000000000000000000000000000000000000` depending on your node or provider.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The returned data of the call, e.g. a smart contract function's return value.\n     */\n    call(transaction, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.call(this, transaction, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Simulates the transaction within the EVM to estimate the amount of gas to be used by the transaction.\n     * The transaction will not be added to the blockchain, and actual gas usage can vary when interacting\n     * with a contract as a result of updating the contract's state.\n     *\n     * @param transaction The {@link Transaction} object to estimate the gas for.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the gas estimation.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The used gas for the simulated transaction execution.\n     *\n     * ```ts\n     * const transaction = {\n     *       from: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *       to: '0xe899f0130FD099c0b896B2cE4E5E15A25b23139a',\n     *       value: '0x1',\n     *       nonce: '0x1',\n     *       type: '0x0'\n     * }\n     *\n     * web3.eth.estimateGas(transaction).then(console.log);\n     * > 21000n\n     *\n     * web3.eth.estimateGas(transaction, { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > 21000\n     * ```\n     */\n    estimateGas(transaction, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.estimateGas(this, transaction, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * Gets past logs, matching the provided `filter`.\n     *\n     * @param filter A {@link Filter} object containing the properties for the desired logs.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns {@link FilterResultsAPI}, an array of {@link Log} objects.\n     *\n     * ```ts\n     * web3.eth.getPastLogs({\n     *      address: \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n     *      topics: [\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"]\n     *  }).then(console.log);\n     * > [{\n     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n     *       logIndex: 0n,\n     *       transactionIndex: 0n,\n     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n     *       blockNumber: 1234n,\n     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n     *   },\n     *   {...}]\n     *\n     * web3.eth.getPastLogs(\n     *     {\n     *       address: \"0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe\",\n     *       topics: [\"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"]\n     *     },\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > [{\n     *       data: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       topics: ['0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7', '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385']\n     *       logIndex: 0,\n     *       transactionIndex: 0,\n     *       transactionHash: '0x7f9fade1c0d57a7af66ab4ead79fade1c0d57a7af66ab4ead7c2c2eb7b11a91385',\n     *       blockHash: '0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7',\n     *       blockNumber: 1234,\n     *       address: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n     *   },\n     *   {...}]\n     * ```\n     */\n    getPastLogs(filter, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getLogs(this, filter, returnFormat);\n        });\n    }\n    /**\n     * Gets work for miners to mine on. Returns the hash of the current block, the seedHash, and the boundary condition to be met ('target').\n     *\n     * @returns The mining work as an array of strings with the following structure:\n     *\n     * String 32 Bytes - at index 0: current block header pow-hash\n     * String 32 Bytes - at index 1: the seed hash used for the DAG.\n     * String 32 Bytes - at index 2: the boundary condition ('target'), 2^256 / difficulty.\n     *\n     * ```ts\n     * web3.eth.getWork().then(console.log);\n     * > [\n     *     \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n     *     \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\",\n     *     \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\"\n     * ]\n     * ```\n     */\n    getWork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getWork(this.requestManager);\n        });\n    }\n    /**\n     * Used for submitting a proof-of-work solution.\n     *\n     * @param nonce The nonce found (8 bytes).\n     * @param hash  The header’s pow-hash (32 bytes).\n     * @param digest The mix digest (32 bytes).\n     * @returns Returns `true` if the provided solution is valid, otherwise `false`.\n     *\n     * ```ts\n     * web3.eth.submitWork([\n     *     \"0x0000000000000001\",\n     *     \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n     *     \"0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000\"\n     * ]).then(console.log);\n     * > true\n     * ```\n     */\n    submitWork(nonce, hash, digest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.submitWork(this.requestManager, nonce, hash, digest);\n        });\n    }\n    // TODO - Format addresses\n    /**\n     * This method will request/enable the accounts from the current environment and for supporting [EIP 1102](https://eips.ethereum.org/EIPS/eip-1102)\n     * This method will only work if you’re using the injected provider from a application like Metamask, Status or TrustWallet.\n     * It doesn’t work if you’re connected to a node with a default Web3.js provider (WebsocketProvider, HttpProvider and IpcProvider).\n     * For more information about the behavior of this method please read [EIP-1102](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1102.md): Opt-in account exposure.\n     *\n     * @returns An array of enabled accounts.\n     *\n     * ```ts\n     * web3.eth.requestAccounts().then(console.log);\n     * > ['0aae0B295369a9FD31d5F28D9Ec85E40f4cb692BAf', '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe']\n     * ```\n     */\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.requestAccounts(this.requestManager);\n        });\n    }\n    /**\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The chain ID of the current connected node as described in the [EIP-695](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-695.md).\n     *\n     * ```ts\n     * web3.eth.getChainId().then(console.log);\n     * > 61n\n     *\n     * web3.eth.getChainId({ number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > 61\n     * ```\n     */\n    getChainId(returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getChainId(this, returnFormat);\n        });\n    }\n    /**\n     * @returns The current client version.\n     *\n     * ```ts\n     * web3.eth.getNodeInfo().then(console.log);\n     * > \"Mist/v0.9.3/darwin/go1.4.1\"\n     * ```\n     */\n    getNodeInfo() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.ethRpcMethods.getNodeInfo(this.requestManager);\n        });\n    }\n    /**\n     * @param address The Address of the account or contract.\n     * @param storageKeys Array of storage-keys which should be proofed and included. See {@link web3.getStorageAt}.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the gas estimation.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns The account and storage-values of the specified account including the Merkle-proof as described in [EIP-1186](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1186.md).\n     *\n     * ```ts\n     * web3.eth.getProof(\n     *     \"0x1234567890123456789012345678901234567890\",\n     *     [\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n     *     \"latest\"\n     * ).then(console.log);\n     * > {\n     *     \"address\": \"0x1234567890123456789012345678901234567890\",\n     *     \"accountProof\": [\n     *         \"0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80\",\n     *         \"0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80\",\n     *         \"0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080\",\n     *         \"0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080\"\n     *     ],\n     *     \"balance\": 0n,\n     *     \"codeHash\": \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n     *     \"nonce\": 0n,\n     *     \"storageHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n     *     \"storageProof\": [\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n     *             \"value\": 0n,\n     *             \"proof\": []\n     *         },\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n     *             \"value\": 0n,\n     *             \"proof\": []\n     *         }\n     *     ]\n     * }\n     *\n     * web3.eth.getProof(\n     *     \"0x1234567890123456789012345678901234567890\",\n     *     [\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],\n     *     undefined,\n     *     { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }\n     * ).then(console.log);\n     * > {\n     *     \"address\": \"0x1234567890123456789012345678901234567890\",\n     *     \"accountProof\": [\n     *         \"0xf90211a090dcaf88c40c7bbc95a912cbdde67c175767b31173df9ee4b0d733bfdd511c43a0babe369f6b12092f49181ae04ca173fb68d1a5456f18d20fa32cba73954052bda0473ecf8a7e36a829e75039a3b055e51b8332cbf03324ab4af2066bbd6fbf0021a0bbda34753d7aa6c38e603f360244e8f59611921d9e1f128372fec0d586d4f9e0a04e44caecff45c9891f74f6a2156735886eedf6f1a733628ebc802ec79d844648a0a5f3f2f7542148c973977c8a1e154c4300fec92f755f7846f1b734d3ab1d90e7a0e823850f50bf72baae9d1733a36a444ab65d0a6faaba404f0583ce0ca4dad92da0f7a00cbe7d4b30b11faea3ae61b7f1f2b315b61d9f6bd68bfe587ad0eeceb721a07117ef9fc932f1a88e908eaead8565c19b5645dc9e5b1b6e841c5edbdfd71681a069eb2de283f32c11f859d7bcf93da23990d3e662935ed4d6b39ce3673ec84472a0203d26456312bbc4da5cd293b75b840fc5045e493d6f904d180823ec22bfed8ea09287b5c21f2254af4e64fca76acc5cd87399c7f1ede818db4326c98ce2dc2208a06fc2d754e304c48ce6a517753c62b1a9c1d5925b89707486d7fc08919e0a94eca07b1c54f15e299bd58bdfef9741538c7828b5d7d11a489f9c20d052b3471df475a051f9dd3739a927c89e357580a4c97b40234aa01ed3d5e0390dc982a7975880a0a089d613f26159af43616fd9455bb461f4869bfede26f2130835ed067a8b967bfb80\",\n     *         \"0xf90211a0395d87a95873cd98c21cf1df9421af03f7247880a2554e20738eec2c7507a494a0bcf6546339a1e7e14eb8fb572a968d217d2a0d1f3bc4257b22ef5333e9e4433ca012ae12498af8b2752c99efce07f3feef8ec910493be749acd63822c3558e6671a0dbf51303afdc36fc0c2d68a9bb05dab4f4917e7531e4a37ab0a153472d1b86e2a0ae90b50f067d9a2244e3d975233c0a0558c39ee152969f6678790abf773a9621a01d65cd682cc1be7c5e38d8da5c942e0a73eeaef10f387340a40a106699d494c3a06163b53d956c55544390c13634ea9aa75309f4fd866f312586942daf0f60fb37a058a52c1e858b1382a8893eb9c1f111f266eb9e21e6137aff0dddea243a567000a037b4b100761e02de63ea5f1fcfcf43e81a372dafb4419d126342136d329b7a7ba032472415864b08f808ba4374092003c8d7c40a9f7f9fe9cc8291f62538e1cc14a074e238ff5ec96b810364515551344100138916594d6af966170ff326a092fab0a0d31ac4eef14a79845200a496662e92186ca8b55e29ed0f9f59dbc6b521b116fea090607784fe738458b63c1942bba7c0321ae77e18df4961b2bc66727ea996464ea078f757653c1b63f72aff3dcc3f2a2e4c8cb4a9d36d1117c742833c84e20de994a0f78407de07f4b4cb4f899dfb95eedeb4049aeb5fc1635d65cf2f2f4dfd25d1d7a0862037513ba9d45354dd3e36264aceb2b862ac79d2050f14c95657e43a51b85c80\",\n     *         \"0xf90171a04ad705ea7bf04339fa36b124fa221379bd5a38ffe9a6112cb2d94be3a437b879a08e45b5f72e8149c01efcb71429841d6a8879d4bbe27335604a5bff8dfdf85dcea00313d9b2f7c03733d6549ea3b810e5262ed844ea12f70993d87d3e0f04e3979ea0b59e3cdd6750fa8b15164612a5cb6567cdfb386d4e0137fccee5f35ab55d0efda0fe6db56e42f2057a071c980a778d9a0b61038f269dd74a0e90155b3f40f14364a08538587f2378a0849f9608942cf481da4120c360f8391bbcc225d811823c6432a026eac94e755534e16f9552e73025d6d9c30d1d7682a4cb5bd7741ddabfd48c50a041557da9a74ca68da793e743e81e2029b2835e1cc16e9e25bd0c1e89d4ccad6980a041dda0a40a21ade3a20fcd1a4abb2a42b74e9a32b02424ff8db4ea708a5e0fb9a09aaf8326a51f613607a8685f57458329b41e938bb761131a5747e066b81a0a16808080a022e6cef138e16d2272ef58434ddf49260dc1de1f8ad6dfca3da5d2a92aaaadc58080\",\n     *         \"0xf851808080a009833150c367df138f1538689984b8a84fc55692d3d41fe4d1e5720ff5483a6980808080808080808080a0a319c1c415b271afc0adcb664e67738d103ac168e0bc0b7bd2da7966165cb9518080\"\n     *     ],\n     *     \"balance\": 0,\n     *     \"codeHash\": \"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\",\n     *     \"nonce\": 0,\n     *     \"storageHash\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n     *     \"storageProof\": [\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n     *             \"value\": 0,\n     *             \"proof\": []\n     *         },\n     *         {\n     *             \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n     *             \"value\": 0,\n     *             \"proof\": []\n     *         }\n     *     ]\n     * }\n     * ```\n     */\n    getProof(address, storageKeys, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getProof(this, address, storageKeys, blockNumber, returnFormat);\n        });\n    }\n    // TODO Throwing an error with Geth, but not Infura\n    // TODO gasUsedRatio and reward not formatting\n    /**\n     * @param blockCount Number of blocks in the requested range. Between `1` and `1024` blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n     * @param newestBlock Highest number block of the requested range.\n     * @param rewardPercentiles A monotonically increasing list of percentile values to sample from each block’s effective priority fees per gas in ascending order, weighted by gas used. Example: `['0', '25', '50', '75', '100']` or `['0', '0.5', '1', '1.5', '3', '80']`\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n     * @returns `baseFeePerGas` and transaction effective `priorityFeePerGas` history for the requested block range if available.\n     * The range between `headBlock - 4` and `headBlock` is guaranteed to be available while retrieving data from the `pending` block and older history are optional to support.\n     * For pre-EIP-1559 blocks the `gasPrice`s are returned as `rewards` and zeroes are returned for the `baseFeePerGas`.\n     *\n     * ```ts\n     * web3.eth.getFeeHistory(4, 'pending', [0, 25, 75, 100]).then(console.log);\n     * > {\n     *     baseFeePerGas: [\n     *         22983878621n,\n     *         21417903463n,\n     *         19989260230n,\n     *         17770954829n,\n     *         18850641304n\n     *     ],\n     *     gasUsedRatio: [\n     *         0.22746546666666667,\n     *         0.2331871,\n     *         0.05610054885262125,\n     *         0.7430227268212117\n     *     ],\n     *     oldestBlock: 15216343n,\n     *     reward: [\n     *         [ '0x3b9aca00', '0x53724e00', '0x77359400', '0x1d92c03423' ],\n     *         [ '0x3b9aca00', '0x3b9aca00', '0x3b9aca00', '0xee6b2800' ],\n     *         [ '0x3b9aca00', '0x4f86a721', '0x77d9743a', '0x9502f900' ],\n     *         [ '0xcc8ff9e', '0x53724e00', '0x77359400', '0x1ec9771bb3' ]\n     *     ]\n     * }\n     *\n     * web3.eth.getFeeHistory(4, BlockTags.LATEST, [0, 25, 75, 100], { number: FMT_NUMBER.NUMBER , bytes: FMT_BYTES.HEX }).then(console.log);\n     * > {\n     *     baseFeePerGas: [\n     *         22983878621,\n     *         21417903463,\n     *         19989260230,\n     *         17770954829,\n     *         18850641304\n     *     ],\n     *     gasUsedRatio: [\n     *         0.22746546666666667,\n     *         0.2331871,\n     *         0.05610054885262125,\n     *         0.7430227268212117\n     *     ],\n     *     oldestBlock: 15216343,\n     *     reward: [\n     *         [ '0x3b9aca00', '0x53724e00', '0x77359400', '0x1d92c03423' ],\n     *         [ '0x3b9aca00', '0x3b9aca00', '0x3b9aca00', '0xee6b2800' ],\n     *         [ '0x3b9aca00', '0x4f86a721', '0x77d9743a', '0x9502f900' ],\n     *         [ '0xcc8ff9e', '0x53724e00', '0x77359400', '0x1ec9771bb3' ]\n     *     ]\n     * }\n     * ```\n     */\n    getFeeHistory(blockCount, newestBlock = this.defaultBlock, rewardPercentiles, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.getFeeHistory(this, blockCount, newestBlock, rewardPercentiles, returnFormat);\n        });\n    }\n    /**\n     * This method generates an access list for a transaction.\n     *\n     * @param transaction - A transaction object where all properties are optional except `from`, however it's recommended to include the `to` property.\n     * @param blockNumber ({@link BlockNumberOrTag} defaults to {@link Web3Eth.defaultBlock}) - Specifies what block to use as the current state of the blockchain while processing the transaction.\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the createAccessList should be formatted.\n     * @returns The returned data of the createAccessList,  e.g. The generated access list for transaction.\n     * @example\n     * ```ts\n     * web3.eth.createAccessList({\n     * from: '0xDe95305a63302C3aa4d3A9B42654659AeA72b694',\n     * data: '0x9a67c8b100000000000000000000000000000000000000000000000000000000000004d0',\n     * gasPrice: '0x3b9aca00',\n     * gas: '0x3d0900',\n     * to: '0x940b25304947ae863568B3804434EC77E2160b87'\n     * })\n     * .then(console.log);\n     *\n     * > {\n     *  \"accessList\": [\n     *     {\n     *       \"address\": \"0x15859bdf5aff2080a9968f6a410361e9598df62f\",\n     *       \"storageKeys\": [\n     *         \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n     *       ]\n     *     }\n     *   ],\n     *   \"gasUsed\": \"0x7671\"\n     * }\n     * ```\n     */\n    createAccessList(transaction, blockNumber = this.defaultBlock, returnFormat = this.defaultReturnFormat) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.createAccessList(this, transaction, blockNumber, returnFormat);\n        });\n    }\n    /**\n     * This method sends EIP-712 typed data to the RPC provider to be signed.\n     *\n     * @param address The address that corresponds with the private key used to sign the typed data.\n     * @param typedData The EIP-712 typed data object.\n     * @param useLegacy A boolean flag determining whether the RPC call uses the legacy method `eth_signTypedData` or the newer method `eth_signTypedData_v4`\n     * @param returnFormat ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the signed typed data should be formatted.\n     * @returns The signed typed data.\n     */\n    signTypedData(address, typedData, useLegacy, returnFormat) {\n        var _a;\n        if (useLegacy === void 0) { useLegacy = false; }\n        if (returnFormat === void 0) { returnFormat = ((_a = this.defaultReturnFormat) !== null && _a !== void 0 ? _a : web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT); }\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_5__.signTypedData(this, address, typedData, useLegacy, returnFormat);\n        });\n    }\n    /**\n     * Lets you subscribe to specific events in the blockchain.\n     *\n     * @param name - The subscription you want to subscribe to.\n     * @param args - Optional additional parameters, depending on the subscription type.\n     * @returns A subscription object of type {@link RegisteredSubscription}. The object contains:\n     *  - subscription.id: The subscription id, used to identify and unsubscribing the subscription.\n     *  - subscription.subscribe(): Can be used to re-subscribe with the same parameters.\n     *  - subscription.unsubscribe(): Unsubscribes the subscription and returns TRUE in the callback if successful.\n     *  - subscription.args: The subscription arguments, used when re-subscribing.\n     *\n     *\n     * You can use the subscription object to listen on:\n     *\n     * - on(\"data\") - Fires on each incoming log with the log object as argument.\n     * - on(\"changed\") - Fires on each log which was removed from the blockchain. The log will have the additional property \"removed: true\".\n     * - on(\"error\") - Fires when an error in the subscription occurs.\n     * - on(\"connected\") - Fires once after the subscription successfully connected. Returns the subscription id.\n     *\n     * @example **Subscribe to Smart Contract events**\n     * ```ts\n     * // Subscribe to `logs`\n     * const logSubscription = web3.eth.subscribe('logs', {\n     *     address: '0x1234567890123456789012345678901234567890',\n     *     topics: ['0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234']\n     * });\n     * logSubscription.on('data', (data: any) => console.log(data));\n     * logSubscription.on('error', (error: any) => console.log(error));\n     *\n     * ```\n     *\n     * @example **Subscribe to new block headers**\n     * ```ts\n     * // Subscribe to `newBlockHeaders`\n     * const newBlocksSubscription = await web3.eth.subscribe('newBlockHeaders');\n     *\n     * newBlocksSubscription.on('data', async blockhead => {\n     * \tconsole.log('New block header: ', blockhead);\n     *\n     * \t// You do not need the next line, if you like to keep notified for every new block\n     * \tawait newBlocksSubscription.unsubscribe();\n     * \tconsole.log('Unsubscribed from new block headers.');\n     * });\n     * newBlocksSubscription.on('error', error =>\n     * \tconsole.log('Error when subscribing to New block header: ', error),\n     * );\n     * ```\n     *\n     * \t### subscribe('pendingTransactions')\n     *\n     * Subscribes to incoming pending transactions.\n     * You can subscribe to pending transactions by calling web3.eth.subscribe('pendingTransactions').\n     *\n     * ```ts\n     * (await web3.eth.subscribe('pendingTransactions')).on('data', console.log);\n     * ```\n     *\n     * ### subscribe('newHeads')\n     * ( same as subscribe('newBlockHeaders'))\n     * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.\n     *\n     * The structure of a returned block header is {@link BlockHeaderOutput}:\n     *\n     * ```ts\n     * (await web3.eth.subscribe('newHeads')).on( // 'newBlockHeaders' would work as well\n     *  'data',\n     * console.log\n     * );\n     * >{\n     * parentHash: '0x9e746a1d906b299def98c75b06f714d62dacadd567c7515d76eeaa8c8074c738',\n     * sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n     * miner: '0x0000000000000000000000000000000000000000',\n     * stateRoot: '0xe0f04b04861ecfa95e82a9310d6a7ef7aef8d7417f5209c182582bfb98a8e307',\n     * transactionsRoot: '0x31ab4ea571a9e10d3a19aaed07d190595b1dfa34e03960c04293fec565dea536',\n     * logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     * difficulty: 2n,\n     * number: 21n,\n     * gasLimit: 11738125n,\n     * gasUsed: 830006n,\n     * timestamp: 1678797237n,\n     * extraData: '0xd883010b02846765746888676f312e32302e31856c696e757800000000000000e0a6e93cf40e2e71a72e493272210c3f43738ccc7e7d7b14ffd51833797d896c09117e8dc4fbcbc969bd21b42e5af3e276a911524038c001b2109b63b8e0352601',\n     * nonce: 0n\n     * }\n     * ```\n     *\n     * ### subscribe('syncing')\n     * Subscribe to syncing events. This will return `true` when the node is syncing and when it’s finished syncing will return `false`, for the `changed` event.\n     *\n     * ```ts\n     * (await web3.eth.subscribe('syncing')).on('changed', console.log);\n     * > `true` // when syncing\n     *\n     * (await web3.eth.subscribe('syncing')).on('data', console.log);\n     * > {\n     *      startingBlock: 0,\n     *      currentBlock: 0,\n     *      highestBlock: 0,\n     *      pulledStates: 0,\n     *      knownStates: 0\n     *   }\n     * ```\n     *\n     * ### subscribe('logs', options)\n     * Subscribes to incoming logs, filtered by the given options. If a valid numerical fromBlock options property is set, web3.js will retrieve logs beginning from this point, backfilling the response as necessary.\n     *\n     * options: You can subscribe to logs matching a given filter object, which can take the following parameters:\n     * - `fromBlock`: (optional, default: 'latest') Integer block number, or `'latest'` for the last mined block or `'pending'`, `'earliest'` for not yet mined transactions.\n     * - `address`: (optional) Contract address or a list of addresses from which logs should originate.\n     * - `topics`: (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with `or` options.\n     *\n     * ```ts\n     *  (await web3.eth.subscribe('logs', {\n     *    address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n     *   })).on('data', console.log);\n     *\n     * > {\n     * removed: false,\n     * logIndex: 119n,\n     * transactionIndex: 58n,\n     * transactionHash: '0x61533efa77937360215069d5d6cb0be09a22af9721e6dc3df59d957833ed8870',\n     * blockHash: '0xe32bb97084479d32247f66f8b46d00af2fbc3c2db2bc6e5843fe2e4d1ca9b099',\n     * blockNumber: 18771966n,\n     * address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n     * data: '0x00000000000000000000000000000000000000000000000000000000d88b2e40',\n     * topics: [\n     * '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n     * '0x0000000000000000000000002fb2457f6ec1865dc0d4e7300c696b69c2a1b989',\n     * '0x00000000000000000000000027fd43babfbe83a81d14665b1a6fb8030a60c9b4'\n     * ]\n     * }\n     *```\n     */\n    subscribe(name, args, returnFormat) {\n        var _a, _b;\n        if (returnFormat === void 0) { returnFormat = ((_a = this.defaultReturnFormat) !== null && _a !== void 0 ? _a : web3_types__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_RETURN_FORMAT); }\n        return __awaiter(this, void 0, void 0, function* () {\n            const subscription = yield ((_b = this.subscriptionManager) === null || _b === void 0 ? void 0 : _b.subscribe(name, args, returnFormat));\n            if (subscription instanceof _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.LogsSubscription &&\n                name === 'logs' &&\n                typeof args === 'object' &&\n                !(0,web3_utils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(args.fromBlock) &&\n                Number.isFinite(Number(args.fromBlock))) {\n                setImmediate(() => {\n                    this.getPastLogs(args)\n                        .then(logs => {\n                        for (const log of logs) {\n                            subscription._processSubscriptionResult(log);\n                        }\n                    })\n                        .catch(e => {\n                        subscription._processSubscriptionError(e);\n                    });\n                });\n            }\n            return subscription;\n        });\n    }\n    static shouldClearSubscription({ sub }) {\n        return !(sub instanceof _web3_subscriptions_js__WEBPACK_IMPORTED_MODULE_6__.SyncingSubscription);\n    }\n    /**\n     * Resets subscriptions.\n     *\n     * @param notClearSyncing If `true` it keeps the `syncing` subscription.\n     * @returns A promise to an array of subscription ids that were cleared.\n     *\n     * ```ts\n     * web3.eth.clearSubscriptions().then(console.log);\n     * > [...] An array of subscription ids that were cleared\n     * ```\n     */\n    clearSubscriptions(notClearSyncing = false) {\n        var _a;\n        return (_a = this.subscriptionManager) === null || _a === void 0 ? void 0 : _a.unsubscribe(\n        // eslint-disable-next-line\n        notClearSyncing ? Web3Eth.shouldClearSubscription : undefined);\n    }\n}\n//# sourceMappingURL=web3_eth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/web3_eth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/esm/web3_subscriptions.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-eth/lib/esm/web3_subscriptions.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogsSubscription: () => (/* binding */ LogsSubscription),\n/* harmony export */   NewHeadsSubscription: () => (/* binding */ NewHeadsSubscription),\n/* harmony export */   NewPendingTransactionsSubscription: () => (/* binding */ NewPendingTransactionsSubscription),\n/* harmony export */   SyncingSubscription: () => (/* binding */ SyncingSubscription)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/esm/index.js\");\n/* harmony import */ var _schemas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schemas.js */ \"(ssr)/./node_modules/web3-eth/lib/esm/schemas.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable-next-line max-classes-per-file */\n\n\n\n/**\n * ## subscribe('logs')\n * Subscribes to incoming logs, filtered by the given options. If a valid numerical fromBlock options property is set, web3.js will retrieve logs beginning from this point, backfilling the response as necessary.\n *\n * You can subscribe to logs matching a given filter object, which can take the following parameters:\n * - `fromBlock`: (optional, default: 'latest') Integer block number, or `'latest'` for the last mined block or `'pending'`, `'earliest'` for not yet mined transactions.\n * - `address`: (optional) Contract address or a list of addresses from which logs should originate.\n * - `topics`: (optional) Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with `or` options.\n *\n */\nclass LogsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {\n    _buildSubscriptionParams() {\n        return ['logs', this.args];\n    }\n    formatSubscriptionResult(data) {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_2__.logSchema, data, super.returnFormat);\n    }\n}\n/**\n * ## subscribe('pendingTransactions')\n * Subscribes to incoming pending transactions.\n *\n * You can subscribe to pending transactions by calling web3.eth.subscribe('pendingTransactions').\n * @example\n * ```ts\n * (await web3.eth.subscribe('pendingTransactions')).on('data', console.log);\n * ```\n */\nclass NewPendingTransactionsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {\n    // eslint-disable-next-line\n    _buildSubscriptionParams() {\n        return ['newPendingTransactions'];\n    }\n    formatSubscriptionResult(data) {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)({ format: 'string' }, data, super.returnFormat);\n    }\n}\n/**\n * ## subscribe('newHeads') ( same as subscribe('newBlockHeaders'))\n *\n * Subscribes to incoming block headers. This can be used as timer to check for changes on the blockchain.\n *\n * The structure of a returned block header is {@link BlockHeaderOutput}:\n * @example\n * ```ts\n * (await web3.eth.subscribe('newHeads')).on( // 'newBlockHeaders' would work as well\n *  'data',\n * console.log\n * );\n * >{\n * parentHash: '0x9e746a1d906b299def98c75b06f714d62dacadd567c7515d76eeaa8c8074c738',\n * sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',\n * miner: '0x0000000000000000000000000000000000000000',\n * stateRoot: '0xe0f04b04861ecfa95e82a9310d6a7ef7aef8d7417f5209c182582bfb98a8e307',\n * transactionsRoot: '0x31ab4ea571a9e10d3a19aaed07d190595b1dfa34e03960c04293fec565dea536',\n * logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n * difficulty: 2n,\n * number: 21n,\n * gasLimit: 11738125n,\n * gasUsed: 830006n,\n * timestamp: 1678797237n,\n * extraData: '0xd883010b02846765746888676f312e32302e31856c696e757800000000000000e0a6e93cf40e2e71a72e493272210c3f43738ccc7e7d7b14ffd51833797d896c09117e8dc4fbcbc969bd21b42e5af3e276a911524038c001b2109b63b8e0352601',\n * nonce: 0n\n * }\n * ```\n */\nclass NewHeadsSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {\n    // eslint-disable-next-line\n    _buildSubscriptionParams() {\n        return ['newHeads'];\n    }\n    formatSubscriptionResult(data) {\n        return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_2__.blockHeaderSchema, data, super.returnFormat);\n    }\n}\n/**\n * ## subscribe('syncing')\n *\n * Subscribe to syncing events. This will return `true` when the node is syncing and when it’s finished syncing will return `false`, for the `changed` event.\n * @example\n * ```ts\n * (await web3.eth.subscribe('syncing')).on('changed', console.log);\n * > `true` // when syncing\n *\n * (await web3.eth.subscribe('syncing')).on('data', console.log);\n * > {\n *      startingBlock: 0,\n *      currentBlock: 0,\n *      highestBlock: 0,\n *      pulledStates: 0,\n *      knownStates: 0\n *   }\n * ```\n */\nclass SyncingSubscription extends web3_core__WEBPACK_IMPORTED_MODULE_1__.Web3Subscription {\n    // eslint-disable-next-line\n    _buildSubscriptionParams() {\n        return ['syncing'];\n    }\n    _processSubscriptionResult(data) {\n        if (typeof data === 'boolean') {\n            this.emit('changed', data);\n        }\n        else {\n            const mappedData = Object.fromEntries(Object.entries(data.status).map(([key, value]) => [\n                key.charAt(0).toLowerCase() + key.substring(1),\n                value,\n            ]));\n            this.emit('changed', data.syncing);\n            this.emit('data', (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.format)(_schemas_js__WEBPACK_IMPORTED_MODULE_2__.syncSchema, mappedData, super.returnFormat));\n        }\n    }\n}\n//# sourceMappingURL=web3_subscriptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/esm/web3_subscriptions.js\n");

/***/ })

};
;